$(function(){$.localScroll({offset:{top:-70},duration:100});var e=$(".documentation-body h2, .documentation-body h1");e.each(function(){var e=$(this),t=e.text(),n=t.replace(/[^a-z0-9\-_]+/gi,"-").replace(/\-+/,"-").replace(/\-$/,"").toLowerCase(),r=$("<a/>");r.addClass("documentation-anchor"),r.attr("name",n),r.attr("href","#"+n),r.html("&infin;"),e.prepend(r)});var t=document.location.hash;if(t)var n=$('a.documentation-anchor[name="'+t.substring(1)+'"]')}),function(e){function n(e){return typeof e=="object"?e:{top:e,left:e}}var t=e.scrollTo=function(t,n,r){e(window).scrollTo(t,n,r)};t.defaults={axis:"xy",duration:parseFloat(e.fn.jquery)>=1.3?0:1,limit:!0},t.window=function(t){return e(window)._scrollable()},e.fn._scrollable=function(){return this.map(function(){var t=this,n=!t.nodeName||e.inArray(t.nodeName.toLowerCase(),["iframe","#document","html","body"])!=-1;if(!n)return t;var r=(t.contentWindow||t).document||t.ownerDocument||t;return/webkit/i.test(navigator.userAgent)||r.compatMode=="BackCompat"?r.body:r.documentElement})},e.fn.scrollTo=function(r,i,s){return typeof i=="object"&&(s=i,i=0),typeof s=="function"&&(s={onAfter:s}),r=="max"&&(r=9e9),s=e.extend({},t.defaults,s),i=i||s.duration,s.queue=s.queue&&s.axis.length>1,s.queue&&(i/=2),s.offset=n(s.offset),s.over=n(s.over),this._scrollable().each(function(){function h(e){u.animate(l,i,s.easing,e&&function(){e.call(this,r,s)})}if(r==null)return;var o=this,u=e(o),a=r,f,l={},c=u.is("html,body");switch(typeof a){case"number":case"string":if(/^([+-]=?)?\d+(\.\d+)?(px|%)?$/.test(a)){a=n(a);break}a=e(a,this);if(!a.length)return;case"object":if(a.is||a.style)f=(a=e(a)).offset()}e.each(s.axis.split(""),function(e,n){var r=n=="x"?"Left":"Top",i=r.toLowerCase(),p="scroll"+r,d=o[p],v=t.max(o,n);if(f)l[p]=f[i]+(c?0:d-u.offset()[i]),s.margin&&(l[p]-=parseInt(a.css("margin"+r))||0,l[p]-=parseInt(a.css("border"+r+"Width"))||0),l[p]+=s.offset[i]||0,s.over[i]&&(l[p]+=a[n=="x"?"width":"height"]()*s.over[i]);else{var m=a[i];l[p]=m.slice&&m.slice(-1)=="%"?parseFloat(m)/100*v:m}s.limit&&/^\d+$/.test(l[p])&&(l[p]=l[p]<=0?0:Math.min(l[p],v)),!e&&s.queue&&(d!=l[p]&&h(s.onAfterFirst),delete l[p])}),h(s.onAfter)}).end()},t.max=function(t,n){var r=n=="x"?"Width":"Height",i="scroll"+r;if(!e(t).is("html,body"))return t[i]-e(t)[r.toLowerCase()]();var s="client"+r,o=t.ownerDocument.documentElement,u=t.ownerDocument.body;return Math.max(o[i],u[i])-Math.min(o[s],u[s])}}(jQuery),function(e){function r(t,n,r){var i=n.hash.slice(1),s=document.getElementById(i)||document.getElementsByName(i)[0];if(!s)return;t&&t.preventDefault();var o=e(r.target);if(r.lock&&o.is(":animated")||r.onBefore&&r.onBefore.call(r,t,s,o)===!1)return;r.stop&&o.stop(!0);if(r.hash){var u=s.id==i?"id":"name",a=e("<a> </a>").attr(u,i).css({position:"absolute",top:e(window).scrollTop(),left:e(window).scrollLeft()});s[u]="",e("body").prepend(a),location=n.hash,a.remove(),s[u]=i}o.scrollTo(s,r).trigger("notify.serialScroll",[s])}var t=location.href.replace(/#.*/,""),n=e.localScroll=function(t){e("body").localScroll(t)};n.defaults={duration:1e3,axis:"y",event:"click",stop:!0,target:window,reset:!0},n.hash=function(t){if(location.hash){t=e.extend({},n.defaults,t),t.hash=!1;if(t.reset){var i=t.duration;delete t.duration,e(t.target).scrollTo(0,t),t.duration=i}r(0,location,t)}},e.fn.localScroll=function(i){function s(){return!!this.href&&!!this.hash&&this.href.replace(this.hash,"")==t&&(!i.filter||e(this).is(i.filter))}return i=e.extend({},n.defaults,i),i.lazy?this.bind(i.event,function(t){var n=e([t.target,t.target.parentNode]).filter(s)[0];n&&r(t,n,i)}):this.find("a,area").filter(s).bind(i.event,function(e){r(e,this,i)}).end().end()}}(jQuery),window.requestAnimationFrame||(window.requestAnimationFrame=function(){return window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e,t){window.setTimeout(e,1e3/60)}}()),"use strict";var THREE=THREE||{REVISION:"53"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},self.Int32Array=self.Int32Array||Array,self.Float32Array=self.Float32Array||Array,String.prototype.startsWith=String.prototype.startsWith||function(e){return this.slice(0,e.length)===e},String.prototype.endsWith=String.prototype.endsWith||function(e){var e=String(e),t=this.lastIndexOf(e);return(-1<t&&t)===this.length-e.length},String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},function(){for(var e=0,t=["ms","moz","webkit","o"],n=0;n<t.length&&!window.requestAnimationFrame;++n)window.requestAnimationFrame=window[t[n]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[t[n]+"CancelAnimationFrame"]||window[t[n]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(t){var n=Date.now(),r=Math.max(0,16-(n-e)),i=window.setTimeout(function(){t(n+r)},r);return e=n+r,i}),window.cancelAnimationFrame=window.cancelAnimationFrame||function(e){window.clearTimeout(e)}}(),THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Clock=function(e){this.autoStart=void 0!==e?e:!0,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now(),this.running=!0},THREE.Clock.prototype.stop=function(){this.getElapsedTime(),this.running=!1},THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime+=this.getDelta()},THREE.Clock.prototype.getDelta=function(){var e=0;this.autoStart&&!this.running&&this.start();if(this.running){var t=Date.now(),e=.001*(t-this.oldTime);this.oldTime=t,this.elapsedTime+=e}return e},THREE.Color=function(e){return void 0!==e&&this.setHex(e),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,n=this.b;return this.r=e*e,this.g=t*t,this.b=n*n,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},setRGB:function(e,t,n){return this.r=e,this.g=t,this.b=n,this},setHSV:function(e,t,n){var r,i,s;return 0===n?this.r=this.g=this.b=0:(r=Math.floor(6*e),i=6*e-r,e=n*(1-t),s=n*(1-t*i),t=n*(1-t*(1-i)),0===r?(this.r=n,this.g=t,this.b=e):1===r?(this.r=s,this.g=n,this.b=e):2===r?(this.r=e,this.g=n,this.b=t):3===r?(this.r=e,this.g=s,this.b=n):4===r?(this.r=t,this.g=e,this.b=n):5===r&&(this.r=n,this.g=e,this.b=s)),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getContextStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},setContextStyle:function(e){return e=/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/i.exec(e),this.r=parseInt(e[1],10)/255,this.g=parseInt(e[2],10)/255,this.b=parseInt(e[3],10)/255,this},getHSV:function(e){var t=this.r,n=this.g,r=this.b,i=Math.max(Math.max(t,n),r),s=Math.min(Math.min(t,n),r);if(s===i)s=t=0;else{var o=i-s,s=o/i,t=(t===i?(n-r)/o:n===i?2+(r-t)/o:4+(t-n)/o)/6;0>t&&(t+=1),1<t&&(t-=1)}return void 0===e&&(e={h:0,s:0,v:0}),e.h=t,e.s=s,e.v=i,e},lerpSelf:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addSelf:function(e){return this.x+=e.x,this.y+=e.y,this},sub:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},subSelf:function(e){return this.x-=e.x,this.y-=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divideScalar:function(e){return e?(this.x/=e,this.y/=e):this.set(0,0),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,e=this.y-e.y;return t*t+e*e},setLength:function(e){return this.normalize().multiplyScalar(e)},lerpSelf:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,n){return this.x=e,this.y=t,this.z=n,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addSelf:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},sub:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},subSelf:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this},multiply:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},multiplySelf:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},divideSelf:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return e?(this.x/=e,this.y/=e,this.z/=e):this.z=this.y=this.x=0,this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.normalize().multiplyScalar(e)},lerpSelf:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){return this.x=e.y*t.z-e.z*t.y,this.y=e.z*t.x-e.x*t.z,this.z=e.x*t.y-e.y*t.x,this},crossSelf:function(e){var t=this.x,n=this.y,r=this.z;return this.x=n*e.z-r*e.y,this.y=r*e.x-t*e.z,this.z=t*e.y-n*e.x,this},angleTo:function(e){return Math.acos(this.dot(e)/this.length()/e.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){return(new THREE.Vector3).sub(this,e).lengthSq()},getPositionFromMatrix:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setEulerFromRotationMatrix:function(e,t){function n(e){return Math.min(Math.max(e,-1),1)}var r=e.elements,i=r[0],s=r[4],o=r[8],u=r[1],a=r[5],f=r[9],l=r[2],c=r[6],r=r[10];return void 0===t||"XYZ"===t?(this.y=Math.asin(n(o)),.99999>Math.abs(o)?(this.x=Math.atan2(-f,r),this.z=Math.atan2(-s,i)):(this.x=Math.atan2(c,a),this.z=0)):"YXZ"===t?(this.x=Math.asin(-n(f)),.99999>Math.abs(f)?(this.y=Math.atan2(o,r),this.z=Math.atan2(u,a)):(this.y=Math.atan2(-l,i),this.z=0)):"ZXY"===t?(this.x=Math.asin(n(c)),.99999>Math.abs(c)?(this.y=Math.atan2(-l,r),this.z=Math.atan2(-s,a)):(this.y=0,this.z=Math.atan2(u,i))):"ZYX"===t?(this.y=Math.asin(-n(l)),.99999>Math.abs(l)?(this.x=Math.atan2(c,r),this.z=Math.atan2(u,i)):(this.x=0,this.z=Math.atan2(-s,a))):"YZX"===t?(this.z=Math.asin(n(u)),.99999>Math.abs(u)?(this.x=Math.atan2(-f,a),this.y=Math.atan2(-l,i)):(this.x=0,this.y=Math.atan2(o,r))):"XZY"===t&&(this.z=Math.asin(-n(s)),.99999>Math.abs(s)?(this.x=Math.atan2(c,a),this.y=Math.atan2(o,i)):(this.x=Math.atan2(-f,r),this.y=0)),this},setEulerFromQuaternion:function(e,t){function n(e){return Math.min(Math.max(e,-1),1)}var r=e.x*e.x,i=e.y*e.y,s=e.z*e.z,o=e.w*e.w;return void 0===t||"XYZ"===t?(this.x=Math.atan2(2*(e.x*e.w-e.y*e.z),o-r-i+s),this.y=Math.asin(n(2*(e.x*e.z+e.y*e.w))),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),o+r-i-s)):"YXZ"===t?(this.x=Math.asin(n(2*(e.x*e.w-e.y*e.z))),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),o-r-i+s),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),o-r+i-s)):"ZXY"===t?(this.x=Math.asin(n(2*(e.x*e.w+e.y*e.z))),this.y=Math.atan2(2*(e.y*e.w-e.z*e.x),o-r-i+s),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),o-r+i-s)):"ZYX"===t?(this.x=Math.atan2(2*(e.x*e.w+e.z*e.y),o-r-i+s),this.y=Math.asin(n(2*(e.y*e.w-e.x*e.z))),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),o+r-i-s)):"YZX"===t?(this.x=Math.atan2(2*(e.x*e.w-e.z*e.y),o-r+i-s),this.y=Math.atan2(2*(e.y*e.w-e.x*e.z),o+r-i-s),this.z=Math.asin(n(2*(e.x*e.y+e.z*e.w)))):"XZY"===t&&(this.x=Math.atan2(2*(e.x*e.w+e.y*e.z),o-r+i-s),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),o+r-i-s),this.z=Math.asin(n(2*(e.z*e.w-e.x*e.y)))),this},getScaleFromMatrix:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),n=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),e=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=n,this.z=e,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(e,t,n,r){this.x=e||0,this.y=t||0,this.z=n||0,this.w=void 0!==r?r:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addSelf:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this},sub:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},subSelf:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},divideScalar:function(e){return e?(this.x/=e,this.y/=e,this.z/=e,this.w/=e):(this.z=this.y=this.x=0,this.w=1),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.normalize().multiplyScalar(e)},lerpSelf:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.z=this.y=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,n,r,e=e.elements,i=e[0];r=e[4];var s=e[8],o=e[1],u=e[5],a=e[9];n=e[2],t=e[6];var f=e[10];return.01>Math.abs(r-o)&&.01>Math.abs(s-n)&&.01>Math.abs(a-t)?.1>Math.abs(r+o)&&.1>Math.abs(s+n)&&.1>Math.abs(a+t)&&.1>Math.abs(i+u+f-3)?(this.set(1,0,0,0),this):(e=Math.PI,i=(i+1)/2,u=(u+1)/2,f=(f+1)/2,r=(r+o)/4,s=(s+n)/4,a=(a+t)/4,i>u&&i>f?.01>i?(t=0,r=n=.707106781):(t=Math.sqrt(i),n=r/t,r=s/t):u>f?.01>u?(t=.707106781,n=0,r=.707106781):(n=Math.sqrt(u),t=r/n,r=a/n):.01>f?(n=t=.707106781,r=0):(r=Math.sqrt(f),t=s/r,n=a/r),this.set(t,n,r,e),this):(e=Math.sqrt((t-a)*(t-a)+(s-n)*(s-n)+(o-r)*(o-r)),.001>Math.abs(e)&&(e=1),this.x=(t-a)/e,this.y=(s-n)/e,this.z=(o-r)/e,this.w=Math.acos((i+u+f-1)/2),this)}},THREE.Matrix3=function(){this.elements=new Float32Array(9)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,multiplyVector3:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z;return e.x=t[0]*n+t[3]*r+t[6]*i,e.y=t[1]*n+t[4]*r+t[7]*i,e.z=t[2]*n+t[5]*r+t[8]*i,e},multiplyVector3Array:function(e){for(var t=THREE.Matrix3.__v1,n=0,r=e.length;n<r;n+=3)t.x=e[n],t.y=e[n+1],t.z=e[n+2],this.multiplyVector3(t),e[n]=t.x,e[n+1]=t.y,e[n+2]=t.z;return e},getInverse:function(e){var t=e.elements,e=t[10]*t[5]-t[6]*t[9],n=-t[10]*t[1]+t[2]*t[9],r=t[6]*t[1]-t[2]*t[5],i=-t[10]*t[4]+t[6]*t[8],s=t[10]*t[0]-t[2]*t[8],o=-t[6]*t[0]+t[2]*t[4],u=t[9]*t[4]-t[5]*t[8],a=-t[9]*t[0]+t[1]*t[8],f=t[5]*t[0]-t[1]*t[4],t=t[0]*e+t[1]*i+t[2]*u;0===t&&console.warn("Matrix3.getInverse(): determinant == 0");var t=1/t,l=this.elements;return l[0]=t*e,l[1]=t*n,l[2]=t*r,l[3]=t*i,l[4]=t*s,l[5]=t*o,l[6]=t*u,l[7]=t*a,l[8]=t*f,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},transposeIntoArray:function(e){var t=this.m;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}},THREE.Matrix3.__v1=new THREE.Vector3,THREE.Matrix4=function(e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v){this.elements=new Float32Array(16),this.set(void 0!==e?e:1,t||0,n||0,r||0,i||0,void 0!==s?s:1,o||0,u||0,a||0,f||0,void 0!==l?l:1,c||0,h||0,p||0,d||0,void 0!==v?v:1)},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v){var m=this.elements;return m[0]=e,m[4]=t,m[8]=n,m[12]=r,m[1]=i,m[5]=s,m[9]=o,m[13]=u,m[2]=a,m[6]=f,m[10]=l,m[14]=c,m[3]=h,m[7]=p,m[11]=d,m[15]=v,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return e=e.elements,this.set(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]),this},lookAt:function(e,t,n){var r=this.elements,i=THREE.Matrix4.__v1,s=THREE.Matrix4.__v2,o=THREE.Matrix4.__v3;return o.sub(e,t).normalize(),0===o.length()&&(o.z=1),i.cross(n,o).normalize(),0===i.length()&&(o.x+=1e-4,i.cross(n,o).normalize()),s.cross(o,i),r[0]=i.x,r[4]=s.x,r[8]=o.x,r[1]=i.y,r[5]=s.y,r[9]=o.y,r[2]=i.z,r[6]=s.z,r[10]=o.z,this},multiply:function(e,t){var n=e.elements,r=t.elements,i=this.elements,s=n[0],o=n[4],u=n[8],a=n[12],f=n[1],l=n[5],c=n[9],h=n[13],p=n[2],d=n[6],v=n[10],m=n[14],g=n[3],y=n[7],b=n[11],n=n[15],w=r[0],E=r[4],S=r[8],x=r[12],T=r[1],N=r[5],C=r[9],k=r[13],L=r[2],A=r[6],O=r[10],M=r[14],_=r[3],D=r[7],P=r[11],r=r[15];return i[0]=s*w+o*T+u*L+a*_,i[4]=s*E+o*N+u*A+a*D,i[8]=s*S+o*C+u*O+a*P,i[12]=s*x+o*k+u*M+a*r,i[1]=f*w+l*T+c*L+h*_,i[5]=f*E+l*N+c*A+h*D,i[9]=f*S+l*C+c*O+h*P,i[13]=f*x+l*k+c*M+h*r,i[2]=p*w+d*T+v*L+m*_,i[6]=p*E+d*N+v*A+m*D,i[10]=p*S+d*C+v*O+m*P,i[14]=p*x+d*k+v*M+m*r,i[3]=g*w+y*T+b*L+n*_,i[7]=g*E+y*N+b*A+n*D,i[11]=g*S+y*C+b*O+n*P,i[15]=g*x+y*k+b*M+n*r,this},multiplySelf:function(e){return this.multiply(this,e)},multiplyToArray:function(e,t,n){var r=this.elements;return this.multiply(e,t),n[0]=r[0],n[1]=r[1],n[2]=r[2],n[3]=r[3],n[4]=r[4],n[5]=r[5],n[6]=r[6],n[7]=r[7],n[8]=r[8],n[9]=r[9],n[10]=r[10],n[11]=r[11],n[12]=r[12],n[13]=r[13],n[14]=r[14],n[15]=r[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z,s=1/(t[3]*n+t[7]*r+t[11]*i+t[15]);return e.x=(t[0]*n+t[4]*r+t[8]*i+t[12])*s,e.y=(t[1]*n+t[5]*r+t[9]*i+t[13])*s,e.z=(t[2]*n+t[6]*r+t[10]*i+t[14])*s,e},multiplyVector4:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z,s=e.w;return e.x=t[0]*n+t[4]*r+t[8]*i+t[12]*s,e.y=t[1]*n+t[5]*r+t[9]*i+t[13]*s,e.z=t[2]*n+t[6]*r+t[10]*i+t[14]*s,e.w=t[3]*n+t[7]*r+t[11]*i+t[15]*s,e},multiplyVector3Array:function(e){for(var t=THREE.Matrix4.__v1,n=0,r=e.length;n<r;n+=3)t.x=e[n],t.y=e[n+1],t.z=e[n+2],this.multiplyVector3(t),e[n]=t.x,e[n+1]=t.y,e[n+2]=t.z;return e},rotateAxis:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z;return e.x=n*t[0]+r*t[4]+i*t[8],e.y=n*t[1]+r*t[5]+i*t[9],e.z=n*t[2]+r*t[6]+i*t[10],e.normalize(),e},crossVector:function(e){var t=this.elements,n=new THREE.Vector4;return n.x=t[0]*e.x+t[4]*e.y+t[8]*e.z+t[12]*e.w,n.y=t[1]*e.x+t[5]*e.y+t[9]*e.z+t[13]*e.w,n.z=t[2]*e.x+t[6]*e.y+t[10]*e.z+t[14]*e.w,n.w=e.w?t[3]*e.x+t[7]*e.y+t[11]*e.z+t[15]*e.w:1,n},determinant:function(){var e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],s=e[1],o=e[5],u=e[9],a=e[13],f=e[2],l=e[6],c=e[10],h=e[14],p=e[3],d=e[7],v=e[11],e=e[15];return i*u*l*p-r*a*l*p-i*o*c*p+n*a*c*p+r*o*h*p-n*u*h*p-i*u*f*d+r*a*f*d+i*s*c*d-t*a*c*d-r*s*h*d+t*u*h*d+i*o*f*v-n*a*f*v-i*s*l*v+t*a*l*v+n*s*h*v-t*o*h*v-r*o*f*e+n*u*f*e+r*s*l*e-t*u*l*e-n*s*c*e+t*o*c*e},transpose:function(){var e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},flattenToArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},flattenToArrayOffset:function(e,t){var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e},getPosition:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[12],e[13],e[14])},setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getColumnX:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[0],e[1],e[2])},getColumnY:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[4],e[5],e[6])},getColumnZ:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[8],e[9],e[10])},getInverse:function(e){var t=this.elements,n=e.elements,r=n[0],i=n[4],s=n[8],o=n[12],u=n[1],a=n[5],f=n[9],l=n[13],c=n[2],h=n[6],p=n[10],d=n[14],v=n[3],m=n[7],g=n[11],n=n[15];return t[0]=f*d*m-l*p*m+l*h*g-a*d*g-f*h*n+a*p*n,t[4]=o*p*m-s*d*m-o*h*g+i*d*g+s*h*n-i*p*n,t[8]=s*l*m-o*f*m+o*a*g-i*l*g-s*a*n+i*f*n,t[12]=o*f*h-s*l*h-o*a*p+i*l*p+s*a*d-i*f*d,t[1]=l*p*v-f*d*v-l*c*g+u*d*g+f*c*n-u*p*n,t[5]=s*d*v-o*p*v+o*c*g-r*d*g-s*c*n+r*p*n,t[9]=o*f*v-s*l*v-o*u*g+r*l*g+s*u*n-r*f*n,t[13]=s*l*c-o*f*c+o*u*p-r*l*p-s*u*d+r*f*d,t[2]=a*d*v-l*h*v+l*c*m-u*d*m-a*c*n+u*h*n,t[6]=o*h*v-i*d*v-o*c*m+r*d*m+i*c*n-r*h*n,t[10]=i*l*v-o*a*v+o*u*m-r*l*m-i*u*n+r*a*n,t[14]=o*a*c-i*l*c-o*u*h+r*l*h+i*u*d-r*a*d,t[3]=f*h*v-a*p*v-f*c*m+u*p*m+a*c*g-u*h*g,t[7]=i*p*v-s*h*v+s*c*m-r*p*m-i*c*g+r*h*g,t[11]=s*a*v-i*f*v-s*u*m+r*f*m+i*u*g-r*a*g,t[15]=i*f*c-s*a*c+s*u*h-r*f*h-i*u*p+r*a*p,this.multiplyScalar(1/e.determinant()),this},setRotationFromEuler:function(e,t){var n=this.elements,r=e.x,i=e.y,s=e.z,o=Math.cos(r),r=Math.sin(r),u=Math.cos(i),i=Math.sin(i),a=Math.cos(s),s=Math.sin(s);if(void 0===t||"XYZ"===t){var f=o*a,l=o*s,c=r*a,h=r*s;n[0]=u*a,n[4]=-u*s,n[8]=i,n[1]=l+c*i,n[5]=f-h*i,n[9]=-r*u,n[2]=h-f*i,n[6]=c+l*i,n[10]=o*u}else"YXZ"===t?(f=u*a,l=u*s,c=i*a,h=i*s,n[0]=f+h*r,n[4]=c*r-l,n[8]=o*i,n[1]=o*s,n[5]=o*a,n[9]=-r,n[2]=l*r-c,n[6]=h+f*r,n[10]=o*u):"ZXY"===t?(f=u*a,l=u*s,c=i*a,h=i*s,n[0]=f-h*r,n[4]=-o*s,n[8]=c+l*r,n[1]=l+c*r,n[5]=o*a,n[9]=h-f*r,n[2]=-o*i,n[6]=r,n[10]=o*u):"ZYX"===t?(f=o*a,l=o*s,c=r*a,h=r*s,n[0]=u*a,n[4]=c*i-l,n[8]=f*i+h,n[1]=u*s,n[5]=h*i+f,n[9]=l*i-c,n[2]=-i,n[6]=r*u,n[10]=o*u):"YZX"===t?(f=o*u,l=o*i,c=r*u,h=r*i,n[0]=u*a,n[4]=h-f*s,n[8]=c*s+l,n[1]=s,n[5]=o*a,n[9]=-r*a,n[2]=-i*a,n[6]=l*s+c,n[10]=f-h*s):"XZY"===t&&(f=o*u,l=o*i,c=r*u,h=r*i,n[0]=u*a,n[4]=-s,n[8]=i*a,n[1]=f*s+h,n[5]=o*a,n[9]=l*s-c,n[2]=c*s-l,n[6]=r*a,n[10]=h*s+f);return this},setRotationFromQuaternion:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z,s=e.w,o=n+n,u=r+r,a=i+i,e=n*o,f=n*u,n=n*a,l=r*u,r=r*a,i=i*a,o=s*o,u=s*u,s=s*a;return t[0]=1-(l+i),t[4]=f-s,t[8]=n+u,t[1]=f+s,t[5]=1-(e+i),t[9]=r-o,t[2]=n-u,t[6]=r+o,t[10]=1-(e+l),this},compose:function(e,t,n){var r=this.elements,i=THREE.Matrix4.__m1,s=THREE.Matrix4.__m2;return i.identity(),i.setRotationFromQuaternion(t),s.makeScale(n.x,n.y,n.z),this.multiply(i,s),r[12]=e.x,r[13]=e.y,r[14]=e.z,this},decompose:function(e,t,n){var r=this.elements,i=THREE.Matrix4.__v1,s=THREE.Matrix4.__v2,o=THREE.Matrix4.__v3;return i.set(r[0],r[1],r[2]),s.set(r[4],r[5],r[6]),o.set(r[8],r[9],r[10]),e=e instanceof THREE.Vector3?e:new THREE.Vector3,t=t instanceof THREE.Quaternion?t:new THREE.Quaternion,n=n instanceof THREE.Vector3?n:new THREE.Vector3,n.x=i.length(),n.y=s.length(),n.z=o.length(),e.x=r[12],e.y=r[13],e.z=r[14],r=THREE.Matrix4.__m1,r.copy(this),r.elements[0]/=n.x,r.elements[1]/=n.x,r.elements[2]/=n.x,r.elements[4]/=n.y,r.elements[5]/=n.y,r.elements[6]/=n.y,r.elements[8]/=n.z,r.elements[9]/=n.z,r.elements[10]/=n.z,t.setFromRotationMatrix(r),[e,t,n]},extractPosition:function(e){var t=this.elements,e=e.elements;return t[12]=e[12],t[13]=e[13],t[14]=e[14],this},extractRotation:function(e){var t=this.elements,e=e.elements,n=THREE.Matrix4.__v1,r=1/n.set(e[0],e[1],e[2]).length(),i=1/n.set(e[4],e[5],e[6]).length(),n=1/n.set(e[8],e[9],e[10]).length();return t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t[4]=e[4]*i,t[5]=e[5]*i,t[6]=e[6]*i,t[8]=e[8]*n,t[9]=e[9]*n,t[10]=e[10]*n,this},translate:function(e){var t=this.elements,n=e.x,r=e.y,e=e.z;return t[12]=t[0]*n+t[4]*r+t[8]*e+t[12],t[13]=t[1]*n+t[5]*r+t[9]*e+t[13],t[14]=t[2]*n+t[6]*r+t[10]*e+t[14],t[15]=t[3]*n+t[7]*r+t[11]*e+t[15],this},rotateX:function(e){var t=this.elements,n=t[4],r=t[5],i=t[6],s=t[7],o=t[8],u=t[9],a=t[10],f=t[11],l=Math.cos(e),e=Math.sin(e);return t[4]=l*n+e*o,t[5]=l*r+e*u,t[6]=l*i+e*a,t[7]=l*s+e*f,t[8]=l*o-e*n,t[9]=l*u-e*r,t[10]=l*a-e*i,t[11]=l*f-e*s,this},rotateY:function(e){var t=this.elements,n=t[0],r=t[1],i=t[2],s=t[3],o=t[8],u=t[9],a=t[10],f=t[11],l=Math.cos(e),e=Math.sin(e);return t[0]=l*n-e*o,t[1]=l*r-e*u,t[2]=l*i-e*a,t[3]=l*s-e*f,t[8]=l*o+e*n,t[9]=l*u+e*r,t[10]=l*a+e*i,t[11]=l*f+e*s,this},rotateZ:function(e){var t=this.elements,n=t[0],r=t[1],i=t[2],s=t[3],o=t[4],u=t[5],a=t[6],f=t[7],l=Math.cos(e),e=Math.sin(e);return t[0]=l*n+e*o,t[1]=l*r+e*u,t[2]=l*i+e*a,t[3]=l*s+e*f,t[4]=l*o-e*n,t[5]=l*u-e*r,t[6]=l*a-e*i,t[7]=l*f-e*s,this},rotateByAxis:function(e,t){var n=this.elements;if(1===e.x&&0===e.y&&0===e.z)return this.rotateX(t);if(0===e.x&&1===e.y&&0===e.z)return this.rotateY(t);if(0===e.x&&0===e.y&&1===e.z)return this.rotateZ(t);var r=e.x,i=e.y,s=e.z,o=Math.sqrt(r*r+i*i+s*s),r=r/o,i=i/o,s=s/o,o=r*r,u=i*i,a=s*s,f=Math.cos(t),l=Math.sin(t),c=1-f,h=r*i*c,p=r*s*c,c=i*s*c,r=r*l,d=i*l,l=s*l,s=o+(1-o)*f,o=h+l,i=p-d,h=h-l,u=u+(1-u)*f,l=c+r,p=p+d,c=c-r,a=a+(1-a)*f,f=n[0],r=n[1],d=n[2],v=n[3],m=n[4],g=n[5],y=n[6],b=n[7],w=n[8],E=n[9],S=n[10],x=n[11];return n[0]=s*f+o*m+i*w,n[1]=s*r+o*g+i*E,n[2]=s*d+o*y+i*S,n[3]=s*v+o*b+i*x,n[4]=h*f+u*m+l*w,n[5]=h*r+u*g+l*E,n[6]=h*d+u*y+l*S,n[7]=h*v+u*b+l*x,n[8]=p*f+c*m+a*w,n[9]=p*r+c*g+a*E,n[10]=p*d+c*y+a*S,n[11]=p*v+c*b+a*x,this},scale:function(e){var t=this.elements,n=e.x,r=e.y,e=e.z;return t[0]*=n,t[4]*=r,t[8]*=e,t[1]*=n,t[5]*=r,t[9]*=e,t[2]*=n,t[6]*=r,t[10]*=e,t[3]*=n,t[7]*=r,t[11]*=e,this},getMaxScaleOnAxis:function(){var e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],Math.max(e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10])))},makeTranslation:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=1-n,s=e.x,o=e.y,u=e.z,a=i*s,f=i*o;return this.set(a*s+n,a*o-r*u,a*u+r*o,0,a*o+r*u,f*o+n,f*u-r*s,0,a*u-r*o,f*u+r*s,i*u*u+n,0,0,0,0,1),this},makeScale:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this},makeFrustum:function(e,t,n,r,i,s){var o=this.elements;return o[0]=2*i/(t-e),o[4]=0,o[8]=(t+e)/(t-e),o[12]=0,o[1]=0,o[5]=2*i/(r-n),o[9]=(r+n)/(r-n),o[13]=0,o[2]=0,o[6]=0,o[10]=-(s+i)/(s-i),o[14]=-2*s*i/(s-i),o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makePerspective:function(e,t,n,r){var e=n*Math.tan(e*Math.PI/360),i=-e;return this.makeFrustum(i*t,e*t,i,e,n,r)},makeOrthographic:function(e,t,n,r,i,s){var o=this.elements,u=t-e,a=n-r,f=s-i;return o[0]=2/u,o[4]=0,o[8]=0,o[12]=-((t+e)/u),o[1]=0,o[5]=2/a,o[9]=0,o[13]=-((n+r)/a),o[2]=0,o[6]=0,o[10]=-2/f,o[14]=-((s+i)/f),o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}},THREE.Matrix4.__v1=new THREE.Vector3,THREE.Matrix4.__v2=new THREE.Vector3,THREE.Matrix4.__v3=new THREE.Vector3,THREE.Matrix4.__m1=new THREE.Matrix4,THREE.Matrix4.__m2=new THREE.Matrix4,THREE.EventTarget=function(){var e={};this.addEventListener=function(t,n){void 0===e[t]&&(e[t]=[]),-1===e[t].indexOf(n)&&e[t].push(n)},this.dispatchEvent=function(t){for(var n in e[t.type])e[t.type][n](t)},this.removeEventListener=function(t,n){var r=e[t].indexOf(n);-1!==r&&e[t].splice(r,1)}},THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]},THREE.Frustum.prototype.setFromMatrix=function(e){var t=this.planes,n=e.elements,e=n[0],r=n[1],i=n[2],s=n[3],o=n[4],u=n[5],a=n[6],f=n[7],l=n[8],c=n[9],h=n[10],p=n[11],d=n[12],v=n[13],m=n[14],n=n[15];t[0].set(s-e,f-o,p-l,n-d),t[1].set(s+e,f+o,p+l,n+d),t[2].set(s+r,f+u,p+c,n+v),t[3].set(s-r,f-u,p-c,n-v),t[4].set(s-i,f-a,p-h,n-m),t[5].set(s+i,f+a,p+h,n+m);for(r=0;6>r;r++)e=t[r],e.divideScalar(Math.sqrt(e.x*e.x+e.y*e.y+e.z*e.z))},THREE.Frustum.prototype.contains=function(e){for(var t=0,n=this.planes,t=e.matrixWorld,r=t.elements,e=-e.geometry.boundingSphere.radius*t.getMaxScaleOnAxis(),i=0;6>i;i++)if(t=n[i].x*r[12]+n[i].y*r[13]+n[i].z*r[14]+n[i].w,t<=e)return!1;return!0},THREE.Frustum.__v1=new THREE.Vector3,function(e){e.Ray=function(t,n,r,i){this.origin=t||new e.Vector3,this.direction=n||new e.Vector3,this.near=r||0,this.far=i||Infinity};var t=new e.Vector3,n=new e.Vector3,r=new e.Vector3,i=new e.Vector3;new e.Vector3;var s=new e.Vector3,o=new e.Matrix4,u=function(e,t){return e.distance-t.distance},a=new e.Vector3,f=new e.Vector3,l=new e.Vector3,c=function(e,t,n){a.sub(n,e);var r=a.dot(t),e=f.add(e,l.copy(t).multiplyScalar(r));return n.distanceTo(e)},h=function(e,t,n,r){a.sub(r,t),f.sub(n,t),l.sub(e,t);var e=a.dot(a),t=a.dot(f),n=a.dot(l),i=f.dot(f),r=f.dot(l),s=1/(e*i-t*t),i=(i*n-t*r)*s,e=(e*r-t*n)*s;return 0<=i&&0<=e&&1>i+e},p=function(u,a,f){if(u instanceof e.Particle){var l=c(a.origin,a.direction,u.matrixWorld.getPosition());if(l>u.scale.x)return f;f.push({distance:l,point:u.position,face:null,object:u})}else if(u instanceof 
e.Mesh){var p=u.geometry.boundingSphere.radius*u.matrixWorld.getMaxScaleOnAxis(),l=c(a.origin,a.direction,u.matrixWorld.getPosition());if(l>p)return f;var p=u.geometry,d=p.vertices,v=u.material instanceof e.MeshFaceMaterial,y=!0===v?u.material.materials:null,l=u.material.side,w,E,S,x=a.precision;u.matrixRotationWorld.extractRotation(u.matrixWorld),t.copy(a.origin),o.getInverse(u.matrixWorld),n.copy(t),o.multiplyVector3(n),r.copy(a.direction),o.rotateAxis(r).normalize();for(var T=0,N=p.faces.length;T<N;T++){var C=p.faces[T],l=!0===v?y[C.materialIndex]:u.material;void 0!==l&&(l=l.side,i.sub(C.centroid,n),E=C.normal,w=r.dot(E),!(Math.abs(w)<x)&&(E=E.dot(i)/w,!(0>E)&&(l===e.DoubleSide||(l===e.FrontSide?0>w:0<w))))&&((s.add(n,r.multiplyScalar(E)),C instanceof e.Face3)?(l=d[C.a],w=d[C.b],E=d[C.c],h(s,l,w,E)&&(w=u.matrixWorld.multiplyVector3(s.clone()),l=t.distanceTo(w),l<a.near||l>a.far||f.push({distance:l,point:w,face:C,faceIndex:T,object:u}))):C instanceof e.Face4&&(l=d[C.a],w=d[C.b],E=d[C.c],S=d[C.d],h(s,l,w,S)||h(s,w,E,S))&&(w=u.matrixWorld.multiplyVector3(s.clone()),l=t.distanceTo(w),l<a.near||l>a.far||f.push({distance:l,point:w,face:C,faceIndex:T,object:u})))}}},d=function(e,t,n){for(var e=e.getDescendants(),r=0,i=e.length;r<i;r++)p(e[r],t,n)};e.Ray.prototype.precision=1e-4,e.Ray.prototype.set=function(e,t){this.origin=e,this.direction=t},e.Ray.prototype.intersectObject=function(e,t){var n=[];return!0===t&&d(e,this,n),p(e,this,n),n.sort(u),n},e.Ray.prototype.intersectObjects=function(e,t){for(var n=[],r=0,i=e.length;r<i;r++)p(e[r],this,n),!0===t&&d(e[r],this,n);return n.sort(u),n}}(THREE),THREE.Rectangle=function(){function e(){s=r-t,o=i-n}var t=0,n=0,r=0,i=0,s=0,o=0,u=!0;this.getX=function(){return t},this.getY=function(){return n},this.getWidth=function(){return s},this.getHeight=function(){return o},this.getLeft=function(){return t},this.getTop=function(){return n},this.getRight=function(){return r},this.getBottom=function(){return i},this.set=function(s,o,f,l){u=!1,t=s,n=o,r=f,i=l,e()},this.addPoint=function(s,o){!0===u?(u=!1,t=s,n=o,r=s,i=o):(t=t<s?t:s,n=n<o?n:o,r=r>s?r:s,i=i>o?i:o),e()},this.add3Points=function(s,o,f,l,p,v){!0===u?(u=!1,t=s<f?s<p?s:p:f<p?f:p,n=o<l?o<v?o:v:l<v?l:v,r=s>f?s>p?s:p:f>p?f:p,i=o>l?o>v?o:v:l>v?l:v):(t=s<f?s<p?s<t?s:t:p<t?p:t:f<p?f<t?f:t:p<t?p:t,n=o<l?o<v?o<n?o:n:v<n?v:n:l<v?l<n?l:n:v<n?v:n,r=s>f?s>p?s>r?s:r:p>r?p:r:f>p?f>r?f:r:p>r?p:r,i=o>l?o>v?o>i?o:i:v>i?v:i:l>v?l>i?l:i:v>i?v:i),e()},this.addRectangle=function(s){!0===u?(u=!1,t=s.getLeft(),n=s.getTop(),r=s.getRight(),i=s.getBottom()):(t=t<s.getLeft()?t:s.getLeft(),n=n<s.getTop()?n:s.getTop(),r=r>s.getRight()?r:s.getRight(),i=i>s.getBottom()?i:s.getBottom()),e()},this.inflate=function(s){t-=s,n-=s,r+=s,i+=s,e()},this.minSelf=function(s){t=t>s.getLeft()?t:s.getLeft(),n=n>s.getTop()?n:s.getTop(),r=r<s.getRight()?r:s.getRight(),i=i<s.getBottom()?i:s.getBottom(),e()},this.intersects=function(e){return r<e.getLeft()||t>e.getRight()||i<e.getTop()||n>e.getBottom()?!1:!0},this.empty=function(){u=!0,i=r=n=t=0,e()},this.isEmpty=function(){return u}},THREE.Math={clamp:function(e,t,n){return e<t?t:e>n?n:e},clampBottom:function(e,t){return e<t?t:e},mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return 0>e?-1:0<e?1:0}},THREE.Object3D=function(){THREE.Object3DLibrary.push(this),this.id=THREE.Object3DIdCount++,this.name="",this.properties={},this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Vector3,this.eulerOrder=THREE.Object3D.defaultEulerOrder,this.scale=new THREE.Vector3(1,1,1),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixRotationWorld=new THREE.Matrix4,this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0,this.quaternion=new THREE.Quaternion,this.useQuaternion=!1,this.boundRadius=0,this.boundRadiusScale=1,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this._vector=new THREE.Vector3},THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(e){this.matrix.multiply(e,this.matrix),this.scale.getScaleFromMatrix(this.matrix),e=(new THREE.Matrix4).extractRotation(this.matrix),this.rotation.setEulerFromRotationMatrix(e,this.eulerOrder),this.position.getPositionFromMatrix(this.matrix)},translate:function(e,t){this.matrix.rotateAxis(t),this.position.addSelf(t.multiplyScalar(e))},translateX:function(e){this.translate(e,this._vector.set(1,0,0))},translateY:function(e){this.translate(e,this._vector.set(0,1,0))},translateZ:function(e){this.translate(e,this._vector.set(0,0,1))},localToWorld:function(e){return this.matrixWorld.multiplyVector3(e)},worldToLocal:function(e){return THREE.Object3D.__m1.getInverse(this.matrixWorld).multiplyVector3(e)},lookAt:function(e){this.matrix.lookAt(e,this.position,this.up),this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},add:function(e){if(e===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){e.parent=void 0,this.children.splice(t,1);for(t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,n=this.children.length;t<n;t++)this.children[t].traverse(e)},getChildByName:function(e,t){for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n];if(i.name===e||!0===t&&(i=i.getChildByName(e,t),void 0!==i))return i}},getDescendants:function(e){void 0===e&&(e=[]),Array.prototype.push.apply(e,this.children);for(var t=0,n=this.children.length;t<n;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.setPosition(this.position),!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion);if(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===e)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0;for(var t=0,n=this.children.length;t<n;t++)this.children[t].updateMatrixWorld(e)},clone:function(e){void 0===e&&(e=new THREE.Object3D),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.rotation instanceof THREE.Vector3&&e.rotation.copy(this.rotation),e.eulerOrder=this.eulerOrder,e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixRotationWorld.copy(this.matrixRotationWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.quaternion.copy(this.quaternion),e.useQuaternion=this.useQuaternion,e.boundRadius=this.boundRadius,e.boundRadiusScale=this.boundRadiusScale,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled;for(var t=0;t<this.children.length;t++)e.add(this.children[t].clone());return e},deallocate:function(){var e=THREE.Object3DLibrary.indexOf(this);-1!==e&&THREE.Object3DLibrary.splice(e,1)}},THREE.Object3D.__m1=new THREE.Matrix4,THREE.Object3D.defaultEulerOrder="XYZ",THREE.Object3DIdCount=0,THREE.Object3DLibrary=[],THREE.Projector=function(){function e(){if(s===u){var e=new THREE.RenderableObject;return o.push(e),u++,s++,e}return o[s++]}function t(){if(f===c){var e=new THREE.RenderableVertex;return l.push(e),c++,f++,e}return l[f++]}function n(e,t){return t.z-e.z}function r(e,t){var n=0,r=1,i=e.z+e.w,s=t.z+t.w,o=-e.z+e.w,u=-t.z+t.w;return 0<=i&&0<=s&&0<=o&&0<=u?!0:0>i&&0>s||0>o&&0>u?!1:(0>i?n=Math.max(n,i/(i-s)):0>s&&(r=Math.min(r,i/(i-s))),0>o?n=Math.max(n,o/(o-u)):0>u&&(r=Math.min(r,o/(o-u))),r<n?!1:(e.lerpSelf(t,n),t.lerpSelf(e,1-r),!0))}var i,s,o=[],u=0,a,f,l=[],c=0,h,p,d=[],v=0,m,g=[],y=0,b,w,E=[],S=0,x,T,N=[],C=0,k={objects:[],sprites:[],lights:[],elements:[]},L=new THREE.Vector3,A=new THREE.Vector4,O=new THREE.Matrix4,M=new THREE.Matrix4,_=new THREE.Matrix3,D=new THREE.Frustum,P=new THREE.Vector4,H=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),O.multiply(t.projectionMatrix,t.matrixWorldInverse),O.multiplyVector3(e),e},this.unprojectVector=function(e,t){return t.projectionMatrixInverse.getInverse(t.projectionMatrix),O.multiply(t.matrixWorld,t.projectionMatrixInverse),O.multiplyVector3(e),e},this.pickingRay=function(e,t){var n;return e.z=-1,n=new THREE.Vector3(e.x,e.y,1),this.unprojectVector(e,t),this.unprojectVector(n,t),n.subSelf(e).normalize(),new THREE.Ray(e,n)},this.projectScene=function(o,u,c,F){var U=u.near,W=u.far,X=!1,V,$,J,Q,Y,Z,et,tt,nt,rt,it,st,ot,ut,at;T=w=m=p=0,k.elements.length=0,o.updateMatrixWorld(),void 0===u.parent&&u.updateMatrixWorld(),u.matrixWorldInverse.getInverse(u.matrixWorld),O.multiply(u.projectionMatrix,u.matrixWorldInverse),D.setFromMatrix(O),s=0,k.objects.length=0,k.sprites.length=0,k.lights.length=0;var ft=function(t){for(var n=0,r=t.children.length;n<r;n++){var s=t.children[n];if(!1!==s.visible){if(s instanceof THREE.Light)k.lights.push(s);else if(s instanceof THREE.Mesh||s instanceof THREE.Line){if(!1===s.frustumCulled||!0===D.contains(s))i=e(),i.object=s,null!==s.renderDepth?i.z=s.renderDepth:(L.copy(s.matrixWorld.getPosition()),O.multiplyVector3(L),i.z=L.z),k.objects.push(i)}else s instanceof THREE.Sprite||s instanceof THREE.Particle?(i=e(),i.object=s,null!==s.renderDepth?i.z=s.renderDepth:(L.copy(s.matrixWorld.getPosition()),O.multiplyVector3(L),i.z=L.z),k.sprites.push(i)):(i=e(),i.object=s,null!==s.renderDepth?i.z=s.renderDepth:(L.copy(s.matrixWorld.getPosition()),O.multiplyVector3(L),i.z=L.z),k.objects.push(i));ft(s)}}};ft(o),!0===c&&k.objects.sort(n),o=0;for(c=k.objects.length;o<c;o++)if(tt=k.objects[o].object,nt=tt.matrixWorld,f=0,tt instanceof THREE.Mesh){rt=tt.geometry,J=rt.vertices,it=rt.faces,rt=rt.faceVertexUvs,_.getInverse(nt),_.transpose(),ot=tt.material instanceof THREE.MeshFaceMaterial,ut=!0===ot?tt.material:null,V=0;for($=J.length;V<$;V++)a=t(),a.positionWorld.copy(J[V]),nt.multiplyVector3(a.positionWorld),a.positionScreen.copy(a.positionWorld),O.multiplyVector4(a.positionScreen),a.positionScreen.x/=a.positionScreen.w,a.positionScreen.y/=a.positionScreen.w,a.visible=a.positionScreen.z>U&&a.positionScreen.z<W;J=0;for(V=it.length;J<V;J++)if($=it[J],at=!0===ot?ut.materials[$.materialIndex]:tt.material,void 0!==at){Z=at.side;if($ instanceof THREE.Face3){if(Q=l[$.a],Y=l[$.b],et=l[$.c],!0!==Q.visible||!0!==Y.visible||!0!==et.visible)continue;if(X=0>(et.positionScreen.x-Q.positionScreen.x)*(Y.positionScreen.y-Q.positionScreen.y)-(et.positionScreen.y-Q.positionScreen.y)*(Y.positionScreen.x-Q.positionScreen.x),Z!==THREE.DoubleSide&&X!==(Z===THREE.FrontSide))continue;p===v?(st=new THREE.RenderableFace3,d.push(st),v++,p++,h=st):h=d[p++],h.v1.copy(Q),h.v2.copy(Y),h.v3.copy(et)}else if($ instanceof THREE.Face4){if(Q=l[$.a],Y=l[$.b],et=l[$.c],st=l[$.d],!0!==Q.visible||!0!==Y.visible||!0!==et.visible||!0!==st.visible)continue;if(X=0>(st.positionScreen.x-Q.positionScreen.x)*(Y.positionScreen.y-Q.positionScreen.y)-(st.positionScreen.y-Q.positionScreen.y)*(Y.positionScreen.x-Q.positionScreen.x)||0>(Y.positionScreen.x-et.positionScreen.x)*(st.positionScreen.y-et.positionScreen.y)-(Y.positionScreen.y-et.positionScreen.y)*(st.positionScreen.x-et.positionScreen.x),Z!==THREE.DoubleSide&&X!==(Z===THREE.FrontSide))continue;if(m===y){var lt=new THREE.RenderableFace4;g.push(lt),y++,m++,h=lt}else h=g[m++];h.v1.copy(Q),h.v2.copy(Y),h.v3.copy(et),h.v4.copy(st)}h.normalWorld.copy($.normal),!1===X&&(Z===THREE.BackSide||Z===THREE.DoubleSide)&&h.normalWorld.negate(),_.multiplyVector3(h.normalWorld).normalize(),h.centroidWorld.copy($.centroid),nt.multiplyVector3(h.centroidWorld),h.centroidScreen.copy(h.centroidWorld),O.multiplyVector3(h.centroidScreen),et=$.vertexNormals,Q=0;for(Y=et.length;Q<Y;Q++)st=h.vertexNormalsWorld[Q],st.copy(et[Q]),!1===X&&(Z===THREE.BackSide||Z===THREE.DoubleSide)&&st.negate(),_.multiplyVector3(st).normalize();h.vertexNormalsLength=et.length,Q=0;for(Y=rt.length;Q<Y;Q++)if(st=rt[Q][J],void 0!==st){Z=0;for(et=st.length;Z<et;Z++)h.uvs[Q][Z]=st[Z]}h.color=$.color,h.material=at,h.z=h.centroidScreen.z,k.elements.push(h)}}else if(tt instanceof THREE.Line){M.multiply(O,nt),J=tt.geometry.vertices,Q=t(),Q.positionScreen.copy(J[0]),M.multiplyVector4(Q.positionScreen),nt=tt.type===THREE.LinePieces?2:1,V=1;for($=J.length;V<$;V++)Q=t(),Q.positionScreen.copy(J[V]),M.multiplyVector4(Q.positionScreen),0<(V+1)%nt||(Y=l[f-2],P.copy(Q.positionScreen),H.copy(Y.positionScreen),!0===r(P,H)&&(P.multiplyScalar(1/P.w),H.multiplyScalar(1/H.w),w===S?(it=new THREE.RenderableLine,E.push(it),S++,w++,b=it):b=E[w++],b.v1.positionScreen.copy(P),b.v2.positionScreen.copy(H),b.z=Math.max(P.z,H.z),b.material=tt.material,k.elements.push(b)))}o=0;for(c=k.sprites.length;o<c;o++)tt=k.sprites[o].object,nt=tt.matrixWorld,tt instanceof THREE.Particle&&(A.set(nt.elements[12],nt.elements[13],nt.elements[14],1),O.multiplyVector4(A),A.z/=A.w,0<A.z&&1>A.z&&(T===C?(U=new THREE.RenderableParticle,N.push(U),C++,T++,x=U):x=N[T++],x.object=tt,x.x=A.x/A.w,x.y=A.y/A.w,x.z=A.z,x.rotation=tt.rotation.z,x.scale.x=tt.scale.x*Math.abs(x.x-(A.x+u.projectionMatrix.elements[0])/(A.w+u.projectionMatrix.elements[12])),x.scale.y=tt.scale.y*Math.abs(x.y-(A.y+u.projectionMatrix.elements[5])/(A.w+u.projectionMatrix.elements[13])),x.material=tt.material,k.elements.push(x)));return!0===F&&k.elements.sort(n),k}},THREE.Quaternion=function(e,t,n,r){this.x=e||0,this.y=t||0,this.z=n||0,this.w=void 0!==r?r:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},setFromEuler:function(e,t){var n=Math.cos(e.x/2),r=Math.cos(e.y/2),i=Math.cos(e.z/2),s=Math.sin(e.x/2),o=Math.sin(e.y/2),u=Math.sin(e.z/2);return void 0===t||"XYZ"===t?(this.x=s*r*i+n*o*u,this.y=n*o*i-s*r*u,this.z=n*r*u+s*o*i,this.w=n*r*i-s*o*u):"YXZ"===t?(this.x=s*r*i+n*o*u,this.y=n*o*i-s*r*u,this.z=n*r*u-s*o*i,this.w=n*r*i+s*o*u):"ZXY"===t?(this.x=s*r*i-n*o*u,this.y=n*o*i+s*r*u,this.z=n*r*u+s*o*i,this.w=n*r*i-s*o*u):"ZYX"===t?(this.x=s*r*i-n*o*u,this.y=n*o*i+s*r*u,this.z=n*r*u-s*o*i,this.w=n*r*i+s*o*u):"YZX"===t?(this.x=s*r*i+n*o*u,this.y=n*o*i+s*r*u,this.z=n*r*u-s*o*i,this.w=n*r*i-s*o*u):"XZY"===t&&(this.x=s*r*i-n*o*u,this.y=n*o*i-s*r*u,this.z=n*r*u+s*o*i,this.w=n*r*i+s*o*u),this},setFromAxisAngle:function(e,t){var n=t/2,r=Math.sin(n);return this.x=e.x*r,this.y=e.y*r,this.z=e.z*r,this.w=Math.cos(n),this},setFromRotationMatrix:function(e){var t=e.elements,n=t[0],e=t[4],r=t[8],i=t[1],s=t[5],o=t[9],u=t[2],a=t[6],t=t[10],f=n+s+t;return 0<f?(n=.5/Math.sqrt(f+1),this.w=.25/n,this.x=(a-o)*n,this.y=(r-u)*n,this.z=(i-e)*n):n>s&&n>t?(n=2*Math.sqrt(1+n-s-t),this.w=(a-o)/n,this.x=.25*n,this.y=(e+i)/n,this.z=(r+u)/n):s>t?(n=2*Math.sqrt(1+s-n-t),this.w=(r-u)/n,this.x=(e+i)/n,this.y=.25*n,this.z=(o+a)/n):(n=2*Math.sqrt(1+t-n-s),this.w=(i-e)/n,this.x=(r+u)/n,this.y=(o+a)/n,this.z=.25*n),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0===e?(this.z=this.y=this.x=0,this.w=1):(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e),this},multiply:function(e,t){var n=e.x,r=e.y,i=e.z,s=e.w,o=t.x,u=t.y,a=t.z,f=t.w;return this.x=n*f+r*a-i*u+s*o,this.y=-n*a+r*f+i*o+s*u,this.z=n*u-r*o+i*f+s*a,this.w=-n*o-r*u-i*a+s*f,this},multiplySelf:function(e){var t=this.x,n=this.y,r=this.z,i=this.w,s=e.x,o=e.y,u=e.z,e=e.w;return this.x=t*e+i*s+n*u-r*o,this.y=n*e+i*o+r*s-t*u,this.z=r*e+i*u+t*o-n*s,this.w=i*e-t*s-n*o-r*u,this},multiplyVector3:function(e,t){t||(t=e);var n=e.x,r=e.y,i=e.z,s=this.x,o=this.y,u=this.z,a=this.w,f=a*n+o*i-u*r,l=a*r+u*n-s*i,c=a*i+s*r-o*n,n=-s*n-o*r-u*i;return t.x=f*a+n*-s+l*-u-c*-o,t.y=l*a+n*-o+c*-s-f*-u,t.z=c*a+n*-u+f*-o-l*-s,t},slerpSelf:function(e,t){var n=this.x,r=this.y,i=this.z,s=this.w,o=s*e.w+n*e.x+r*e.y+i*e.z;0>o?(this.w=-e.w,this.x=-e.x,this.y=-e.y,this.z=-e.z,o=-o):this.copy(e);if(1<=o)return this.w=s,this.x=n,this.y=r,this.z=i,this;var u=Math.acos(o),a=Math.sqrt(1-o*o);return.001>Math.abs(a)?(this.w=.5*(s+this.w),this.x=.5*(n+this.x),this.y=.5*(r+this.y),this.z=.5*(i+this.z),this):(o=Math.sin((1-t)*u)/a,u=Math.sin(t*u)/a,this.w=s*o+this.w*u,this.x=n*o+this.x*u,this.y=r*o+this.y*u,this.z=i*o+this.z*u,this)},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}},THREE.Quaternion.slerp=function(e,t,n,r){var i=e.w*t.w+e.x*t.x+e.y*t.y+e.z*t.z;0>i?(n.w=-t.w,n.x=-t.x,n.y=-t.y,n.z=-t.z,i=-i):n.copy(t);if(1<=Math.abs(i))return n.w=e.w,n.x=e.x,n.y=e.y,n.z=e.z,n;var t=Math.acos(i),s=Math.sqrt(1-i*i);return.001>Math.abs(s)?(n.w=.5*(e.w+n.w),n.x=.5*(e.x+n.x),n.y=.5*(e.y+n.y),n.z=.5*(e.z+n.z),n):(i=Math.sin((1-r)*t)/s,r=Math.sin(r*t)/s,n.w=e.w*i+n.w*r,n.x=e.x*i+n.x*r,n.y=e.y*i+n.y*r,n.z=e.z*i+n.z*r,n)},THREE.Vertex=function(e){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),e},THREE.Face3=function(e,t,n,r,i,s){this.a=e,this.b=t,this.c=n,this.normal=r instanceof THREE.Vector3?r:new THREE.Vector3,this.vertexNormals=r instanceof Array?r:[],this.color=i instanceof THREE.Color?i:new THREE.Color,this.vertexColors=i instanceof Array?i:[],this.vertexTangents=[],this.materialIndex=s,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal),e.color.copy(this.color),e.centroid.copy(this.centroid),e.materialIndex=this.materialIndex;var t,n;t=0;for(n=this.vertexNormals.length;t<n;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();t=0;for(n=this.vertexColors.length;t<n;t++)e.vertexColors[t]=this.vertexColors[t].clone();t=0;for(n=this.vertexTangents.length;t<n;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Face4=function(e,t,n,r,i,s,o){this.a=e,this.b=t,this.c=n,this.d=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=i instanceof Array?i:[],this.color=s instanceof THREE.Color?s:new THREE.Color,this.vertexColors=s instanceof Array?s:[],this.vertexTangents=[],this.materialIndex=o,this.centroid=new THREE.Vector3},THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var e=new THREE.Face4(this.a,this.b,this.c,this.d);e.normal.copy(this.normal),e.color.copy(this.color),e.centroid.copy(this.centroid),e.materialIndex=this.materialIndex;var t,n;t=0;for(n=this.vertexNormals.length;t<n;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();t=0;for(n=this.vertexColors.length;t<n;t++)e.vertexColors[t]=this.vertexColors[t].clone();t=0;for(n=this.vertexTangents.length;t<n;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.UV=function(e,t){this.u=e||0,this.v=t||0},THREE.UV.prototype={constructor:THREE.UV,set:function(e,t){return this.u=e,this.v=t,this},copy:function(e){return this.u=e.u,this.v=e.v,this},lerpSelf:function(e,t){return this.u+=(e.u-this.u)*t,this.v+=(e.v-this.v)*t,this},clone:function(){return new THREE.UV(this.u,this.v)}},THREE.Geometry=function(){THREE.GeometryLibrary.push(this),this.id=THREE.GeometryIdCount++,this.name="",this.vertices=[],this.colors=[],this.normals=[],this.faces=[],this.faceUvs=[[]],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.dynamic=!0,this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){var t=new THREE.Matrix3;t.getInverse(e).transpose();for(var n=0,r=this.vertices.length;n<r;n++)e.multiplyVector3(this.vertices[n]);n=0;for(r=this.faces.length;n<r;n++){var i=this.faces[n];t.multiplyVector3(i.normal).normalize();for(var s=0,o=i.vertexNormals.length;s<o;s++)t.multiplyVector3(i.vertexNormals[s]).normalize();e.multiplyVector3(i.centroid)}},computeCentroids:function(){var e,t,n;e=0;for(t=this.faces.length;e<t;e++)n=this.faces[e],n.centroid.set(0,0,0),n instanceof THREE.Face3?(n.centroid.addSelf(this.vertices[n.a]),n.centroid.addSelf(this.vertices[n.b]),n.centroid.addSelf(this.vertices[n.c]),n.centroid.divideScalar(3)):n instanceof THREE.Face4&&(n.centroid.addSelf(this.vertices[n.a]),n.centroid.addSelf(this.vertices[n.b]),n.centroid.addSelf(this.vertices[n.c]),n.centroid.addSelf(this.vertices[n.d]),n.centroid.divideScalar(4))},computeFaceNormals:function(){var e,t,n,r,i,s,o=new THREE.Vector3,u=new THREE.Vector3;e=0;for(t=this.faces.length;e<t;e++)n=this.faces[e],r=this.vertices[n.a],i=this.vertices[n.b],s=this.vertices[n.c],o.sub(s,i),u.sub(r,i),o.crossSelf(u),o.normalize(),n.normal.copy(o)},computeVertexNormals:function(e){var t,n,r,i;if(void 0===this.__tmpVertices){i=this.__tmpVertices=Array(this.vertices.length),t=0;for(n=this.vertices.length;t<n;t++)i[t]=new THREE.Vector3;t=0;for(n=this.faces.length;t<n;t++)r=this.faces[t],r instanceof THREE.Face3?r.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:r instanceof THREE.Face4&&(r.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{i=this.__tmpVertices,t=0;for(n=this.vertices.length;t<n;t++)i[t].set(0,0,0)}if(e){var s,o,u,a=new THREE.Vector3,f=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3,h=new THREE.Vector3;t=0;for(n=this.faces.length;t<n;t++)r=this.faces[t],r instanceof THREE.Face3?(e=this.vertices[r.a],s=this.vertices[r.b],o=this.vertices[r.c],a.sub(o,s),f.sub(e,s),a.crossSelf(f),i[r.a].addSelf(a),i[r.b].addSelf(a),i[r.c].addSelf(a)):r instanceof THREE.Face4&&(e=this.vertices[r.a],s=this.vertices[r.b],o=this.vertices[r.c],u=this.vertices[r.d],l.sub(u,s),f.sub(e,s),l.crossSelf(f),i[r.a].addSelf(l),i[r.b].addSelf(l),i[r.d].addSelf(l),c.sub(u,o),h.sub(s,o),c.crossSelf(h),i[r.b].addSelf(c),i[r.c].addSelf(c),i[r.d].addSelf(c))}else{t=0;for(n=this.faces.length;t<n;t++)r=this.faces[t],r instanceof THREE.Face3?(i[r.a].addSelf(r.normal),i[r.b].addSelf(r.normal),i[r.c].addSelf(r.normal)):r instanceof THREE.Face4&&(i[r.a].addSelf(r.normal),i[r.b].addSelf(r.normal),i[r.c].addSelf(r.normal),i[r.d].addSelf(r.normal))}t=0;for(n=this.vertices.length;t<n;t++)i[t].normalize();t=0;for(n=this.faces.length;t<n;t++)r=this.faces[t],r instanceof THREE.Face3?(r.vertexNormals[0].copy(i[r.a]),r.vertexNormals[1].copy(i[r.b]),r.vertexNormals[2].copy(i[r.c])):r instanceof THREE.Face4&&(r.vertexNormals[0].copy(i[r.a]),r.vertexNormals[1].copy(i[r.b]),r.vertexNormals[2].copy(i[r.c]),r.vertexNormals[3].copy(i[r.d]))},computeMorphNormals:function(){var e,t,n,r,i;n=0;for(r=this.faces.length;n<r;n++){i=this.faces[n],i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]),e=0;for(t=i.vertexNormals.length;e<t;e++)i.__originalVertexNormals[e]?i.__originalVertexNormals[e].copy(i.vertexNormals[e]):i.__originalVertexNormals[e]=i.vertexNormals[e].clone()}var s=new THREE.Geometry;s.faces=this.faces,e=0;for(t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var o=this.morphNormals[e].faceNormals,u=this.morphNormals[e].vertexNormals,a,f;n=0;for(r=this.faces.length;n<r;n++)i=this.faces[n],a=new THREE.Vector3,f=i instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},o.push(a),u.push(f)}o=this.morphNormals[e],s.vertices=this.morphTargets[e].vertices,s.computeFaceNormals(),s.computeVertexNormals(),n=0;for(r=this.faces.length;n<r;n++)i=this.faces[n],a=o.faceNormals[n],f=o.vertexNormals[n],a.copy(i.normal),i instanceof THREE.Face3?(f.a.copy(i.vertexNormals[0]),f.b.copy(i.vertexNormals[1]),f.c.copy(i.vertexNormals[2])):(f.a.copy(i.vertexNormals[0]),f.b.copy(i.vertexNormals[1]),f.c.copy(i.vertexNormals[2]),f.d.copy(i.vertexNormals[3]))}n=0;for(r=this.faces.length;n<r;n++)i=this.faces[n],i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeTangents:function(){function e(e,t,n,r,i,s,T){u=e.vertices[t],a=e.vertices[n],f=e.vertices[r],l=o[i],c=o[s],h=o[T],p=a.x-u.x,d=f.x-u.x,v=a.y-u.y,m=f.y-u.y,g=a.z-u.z,y=f.z-u.z,b=c.u-l.u,w=h.u-l.u,E=c.v-l.v,S=h.v-l.v,x=1/(b*S-w*E),k.set((S*p-E*d)*x,(S*v-E*m)*x,(S*g-E*y)*x),L.set((b*d-w*p)*x,(b*m-w*v)*x,(b*y-w*g)*x),N[t].addSelf(k),N[n].addSelf(k),N[r].addSelf(k),C[t].addSelf(L),C[n].addSelf(L),C[r].addSelf(L)}var t,n,r,i,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b,w,E,S,x,T,N=[],C=[],k=new THREE.Vector3,L=new THREE.Vector3,A=new THREE.Vector3,O=new THREE.Vector3,M=new THREE.Vector3;t=0;for(n=this.vertices.length;t<n;t++)N[t]=new THREE.Vector3,C[t]=new THREE.Vector3;t=0;for(n=this.faces.length;t<n;t++)s=this.faces[t],o=this.faceVertexUvs[0][t],s instanceof THREE.Face3?e(this,s.a,s.b,s.c,0,1,2):s instanceof THREE.Face4&&(e(this,s.a,s.b,s.d,0,1,3),e(this,s.b,s.c,s.d,1,2,3));var _=["a","b","c","d"];t=0;for(n=this.faces.length;t<n;t++){s=this.faces[t];for(r=0;r<s.vertexNormals.length;r++)M.copy(s.vertexNormals[r]),i=s[_[r]],T=N[i],A.copy(T),A.subSelf(M.multiplyScalar(M.dot(T))).normalize(),O.cross(s.vertexNormals[r],T),i=O.dot(C[i]),i=0>i?-1:1,s.vertexTangents[r]=new THREE.Vector4(A.x,A.y,A.z,i)}this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,n=0,r=t.length;n<r;n++)0<n&&(e+=t[n].distanceTo(t[n-1])),this.lineDistances[n]=e},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3});if(0<this.vertices.length){var e;e=this.vertices[0],this.boundingBox.min.copy(e),this.boundingBox.max.copy(e);for(var t=this.boundingBox.min,n=this.boundingBox.max,r=1,i=this.vertices.length;r<i;r++)(e=this.vertices[r],e.x<t.x?t.x=e.x:e.x>n.x&&(n.x=e.x),e.y<t.y?t.y=e.y:e.y>n.y&&(n.y=e.y),e.z<t.z)?t.z=e.z:e.z>n.z&&(n.z=e.z)}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var e=0;null===this.boundingSphere&&(this.boundingSphere={radius:0});for(var t=0,n=this.vertices.length;t<n;t++){var r=this.vertices[t].lengthSq();r>e&&(e=r)}this.boundingSphere.radius=Math.sqrt(e)},mergeVertices:function(){var e={},t=[],n=[],r,i=Math.pow(10,4),s,o,u,a;s=0;for(o=this.vertices.length;s<o;s++)r=this.vertices[s],r=[Math.round(r.x*i),Math.round(r.y*i),Math.round(r.z*i)].join("_"),void 0===e[r]?(e[r]=s,t.push(this.vertices[s]),n[s]=t.length-1):n[s]=n[e[r]];s=0;for(o=this.faces.length;s<o;s++)if(e=this.faces[s],e instanceof THREE.Face3)e.a=n[e.a],e.b=n[e.b],e.c=n[e.c];else if(e instanceof THREE.Face4){e.a=n[e.a],e.b=n[e.b],e.c=n[e.c],e.d=n[e.d],r=[e.a,e.b,e.c,e.d];for(i=3;0<i;i--)if(r.indexOf(e["abcd"[i]])!==i){r.splice(i,1),this.faces[s]=new THREE.Face3(r[0],r[1],r[2],e.normal,e.color,e.materialIndex),r=0;for(u=this.faceVertexUvs.length;r<u;r++)(a=this.faceVertexUvs[r][s])&&a.splice(i,1);this.faces[s].vertexColors=e.vertexColors;break}}return n=this.vertices.length-t.length,this.vertices=t,n},clone:function(){for(var e=new THREE.Geometry,t=this.vertices,n=0,r=t.length;n<r;n++)e.vertices.push(t[n].clone());t=this.faces,n=0;for(r=t.length;n<r;n++)e.faces.push(t[n].clone());t=this.faceVertexUvs[0],n=0;for(r=t.length;n<r;n++){for(var i=t[n],s=[],o=0,u=i.length;o<u;o++)s.push(new THREE.UV(i[o].u,i[o].v));e.faceVertexUvs[0].push(s)}return e},deallocate:function(){var e=THREE.GeometryLibrary.indexOf(this);-1!==e&&THREE.GeometryLibrary.splice(e,1)}},THREE.GeometryIdCount=0,THREE.GeometryLibrary=[],THREE.BufferGeometry=function(){THREE.GeometryLibrary.push(this),this.id=THREE.GeometryIdCount++,this.attributes={},this.dynamic=!1,this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(e){var t,n;this.attributes.position&&(t=this.attributes.position.array),this.attributes.normal&&(n=this.attributes.normal.array),void 0!==t&&(e.multiplyVector3Array(t),this.verticesNeedUpdate=!0),void 0!==n&&(t=new THREE.Matrix3,t.getInverse(e).transpose(),t.multiplyVector3Array(n),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3(Infinity,Infinity,Infinity),max:new THREE.Vector3(-Infinity,-Infinity,-Infinity)});var e=this.attributes.position.array;if(e)for(var t=this.boundingBox,n,r,i,s=0,o=e.length;s<o;s+=3)(n=e[s],r=e[s+1],i=e[s+2],n<t.min.x?t.min.x=n:n>t.max.x&&(t.max.x=n),r<t.min.y?t.min.y=r:r>t.max.y&&(t.max.y=r),i<t.min.z)?t.min.z=i:i>t.max.z&&(t.max.z=i);if(void 0===e||0===e.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){this.boundingSphere||(this.boundingSphere={radius:0});var e=this.attributes.position.array;if(e){for(var t,n=0,r,i,s=0,o=e.length;s<o;s+=3)t=e[s],r=e[s+1],i=e[s+2],t=t*t+r*r+i*i,t>n&&(n=t);this.boundingSphere.radius=Math.sqrt(n)}},computeVertexNormals:function(){if(this.attributes.position&&this.attributes.index){var e,t,n,r;e=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(e),numItems:e};else{e=0;for(t=this.attributes.normal.array.length;e<t;e++)this.attributes.normal.array[e]=0}var i=this.offsets,s=this.attributes.index.array,o=this.attributes.position.array,u=this.attributes.normal.array,a,f,l,c,h,p,d=new THREE.Vector3,v=new THREE.Vector3,m=new THREE.Vector3,g=new THREE.Vector3,y=new THREE.Vector3;n=0;for(r=i.length;n<r;++n){t=i[n].start,a=i[n].count;var b=i[n].index;e=t;for(t+=a;e<t;e+=3)a=b+s[e],f=b+s[e+1],l=b+s[e+2],c=o[3*a],h=o[3*a+1],p=o[3*a+2],d.set(c,h,p),c=o[3*f],h=o[3*f+1],p=o[3*f+2],v.set(c,h,p),c=o[3*l],h=o[3*l+1],p=o[3*l+2],m.set(c,h,p),g.sub(m,v),y.sub(d,v),g.crossSelf(y),u[3*a]+=g.x,u[3*a+1]+=g.y,u[3*a+2]+=g.z,u[3*f]+=g.x,u[3*f+1]+=g.y,u[3*f+2]+=g.z,u[3*l]+=g.x,u[3*l+1]+=g.y,u[3*l+2]+=g.z}this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var e=this.attributes.normal.array,t,n,r,i=0,s=e.length;i<s;i+=3)t=e[i],n=e[i+1],r=e[i+2],t=1/Math.sqrt(t*t+n*n+r*r),e[i]*=t,e[i+1]*=t,e[i+2]*=t},computeTangents:function(){function e(e){B.x=r[3*e],B.y=r[3*e+1],B.z=r[3*e+2],j.copy(B),I=a[e],P.copy(I),P.subSelf(B.multiplyScalar(B.dot(I))).normalize(),H.cross(j,I),q=H.dot(f[e]),F=0>q?-1:1,u[4*e]=P.x,u[4*e+1]=P.y,u[4*e+2]=P.z,u[4*e+3]=F}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var t=this.attributes.index.array,n=this.attributes.position.array,r=this.attributes.normal.array,i=this.attributes.uv.array,s=n.length/3;if(void 0===this.attributes.tangent){var o=4*s;this.attributes.tangent={itemSize:4,array:new Float32Array(o),numItems:o}}for(var u=this.attributes.tangent.array,a=[],f=[],o=0;o<s;o++)a[o]=new THREE.Vector3,f[o]=new THREE.Vector3;var l,c,h,p,d,v,m,g,y,b,w,E,S,x,T,s=new THREE.Vector3,o=new THREE.Vector3,N,C,k,L,A,O,M,_=this.offsets;k=0;for(L=_.length;k<L;++k){C=_[k].start,A=_[k].count;var D=_[k].index;N=C;for(C+=A;N<C;N+=3)A=D+t[N],O=D+t[N+1],M=D+t[N+2],l=n[3*A],c=n[3*A+1],h=n[3*A+2],p=n[3*O],d=n[3*O+1],v=n[3*O+2],m=n[3*M],g=n[3*M+1],y=n[3*M+2],b=i[2*A],w=i[2*A+1],E=i[2*O],S=i[2*O+1],x=i[2*M],T=i[2*M+1],p-=l,l=m-l,d-=c,c=g-c,v-=h,h=y-h,E-=b,b=x-b,S-=
w,w=T-w,T=1/(E*w-b*S),s.set((w*p-S*l)*T,(w*d-S*c)*T,(w*v-S*h)*T),o.set((E*l-b*p)*T,(E*c-b*d)*T,(E*h-b*v)*T),a[A].addSelf(s),a[O].addSelf(s),a[M].addSelf(s),f[A].addSelf(o),f[O].addSelf(o),f[M].addSelf(o)}var P=new THREE.Vector3,H=new THREE.Vector3,B=new THREE.Vector3,j=new THREE.Vector3,F,I,q;k=0;for(L=_.length;k<L;++k){C=_[k].start,A=_[k].count,D=_[k].index,N=C;for(C+=A;N<C;N+=3)A=D+t[N],O=D+t[N+1],M=D+t[N+2],e(A),e(O),e(M)}this.tangentsNeedUpdate=this.hasTangents=!0}},deallocate:function(){var e=THREE.GeometryLibrary.indexOf(this);-1!==e&&THREE.GeometryLibrary.splice(e,1)}},THREE.Spline=function(e){function t(e,t,n,r,i,s,o){return e=.5*(n-e),r=.5*(r-t),(2*(t-n)+e+r)*o+(-3*(t-n)-2*e-r)*s+e*i+t}this.points=e;var n=[],r={x:0,y:0,z:0},i,s,o,u,a,f,l,c,h;this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return i=(this.points.length-1)*e,s=Math.floor(i),o=i-s,n[0]=0===s?s:s-1,n[1]=s,n[2]=s>this.points.length-2?this.points.length-1:s+1,n[3]=s>this.points.length-3?this.points.length-1:s+2,f=this.points[n[0]],l=this.points[n[1]],c=this.points[n[2]],h=this.points[n[3]],u=o*o,a=o*u,r.x=t(f.x,l.x,c.x,h.x,o,u,a),r.y=t(f.y,l.y,c.y,h.y,o,u,a),r.z=t(f.z,l.z,c.z,h.z,o,u,a),r},this.getControlPointsArray=function(){var e,t,n=this.points.length,r=[];for(e=0;e<n;e++)t=this.points[e],r[e]=[t.x,t.y,t.z];return r},this.getLength=function(e){var t,n,r,i=t=t=0,s=new THREE.Vector3,o=new THREE.Vector3,u=[],a=0;u[0]=0,e||(e=100),n=this.points.length*e,s.copy(this.points[0]);for(e=1;e<n;e++)t=e/n,r=this.getPoint(t),o.copy(r),a+=o.distanceTo(s),s.copy(r),t*=this.points.length-1,t=Math.floor(t),t!=i&&(u[t]=a,i=t);return u[u.length]=a,{chunks:u,total:a}},this.reparametrizeByArcLength=function(e){var t,n,r,i,s,o,u=[],a=new THREE.Vector3,f=this.getLength();u.push(a.copy(this.points[0]).clone());for(t=1;t<this.points.length;t++){n=f.chunks[t]-f.chunks[t-1],o=Math.ceil(e*n/f.total),i=(t-1)/(this.points.length-1),s=t/(this.points.length-1);for(n=1;n<o-1;n++)r=i+n*(1/o)*(s-i),r=this.getPoint(r),u.push(a.copy(r).clone());u.push(a.copy(this.points[t]).clone())}this.points=u}},THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(e){this.matrix.lookAt(this.position,e,this.up),!0===this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},THREE.OrthographicCamera=function(e,t,n,r,i,s){THREE.Camera.call(this),this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=void 0!==i?i:.1,this.far=void 0!==s?s:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.PerspectiveCamera=function(e,t,n,r){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==n?n:.1,this.far=void 0!==r?r:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*Math.atan(t/(2*e))*(180/Math.PI),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,n,r,i,s){this.fullWidth=e,this.fullHeight=t,this.x=n,this.y=r,this.width=i,this.height=s,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(this.fov*Math.PI/360)*this.near,n=-t,r=e*n,e=Math.abs(e*t-r),n=Math.abs(t-n);this.projectionMatrix.makeFrustum(r+this.x*e/this.fullWidth,r+(this.x+this.width)*e/this.fullWidth,t-(this.y+this.height)*n/this.fullHeight,t-this.y*n/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraTop=this.shadowCameraRight=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight=function(e,t,n){THREE.Light.call(this,e),this.groundColor=new THREE.Color(t),this.position=new THREE.Vector3(0,100,0),this.intensity=void 0!==n?n:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight=function(e,t,n){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,0,0),this.intensity=void 0!==t?t:1,this.distance=void 0!==n?n:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight=function(e,t,n,r,i){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==n?n:0,this.angle=void 0!==r?r:Math.PI/2,this.exponent=void 0!==i?i:10,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.Loader=function(e){this.statusDomElement=(this.showStatus=e)?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ",t=e.total?t+((100*e.loaded/e.total).toFixed(0)+"%"):t+((e.loaded/1e3).toFixed(2)+" KB");this.statusDomElement.innerHTML=t},extractUrlBase:function(e){return e=e.split("/"),e.pop(),(1>e.length?".":e.join("/"))+"/"},initMaterials:function(e,t){for(var n=[],r=0;r<e.length;++r)n[r]=THREE.Loader.prototype.createMaterial(e[r],t);return n},needsTangents:function(e){for(var t=0,n=e.length;t<n;t++)if(e[t]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(e,t){function n(e){return e=Math.log(e)/Math.LN2,Math.floor(e)==e}function r(e){return e=Math.log(e)/Math.LN2,Math.pow(2,Math.round(e))}function i(e,i,s,u,a,f,l){var h=s.toLowerCase().endsWith(".dds"),p=t+"/"+s;if(h){var v=THREE.ImageUtils.loadCompressedTexture(p);e[i]=v}else v=document.createElement("canvas"),e[i]=new THREE.Texture(v);e[i].sourceFile=s,u&&(e[i].repeat.set(u[0],u[1]),1!==u[0]&&(e[i].wrapS=THREE.RepeatWrapping),1!==u[1])&&(e[i].wrapT=THREE.RepeatWrapping),a&&e[i].offset.set(a[0],a[1]),f&&(s={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==s[f[0]]&&(e[i].wrapS=s[f[0]]),void 0!==s[f[1]])&&(e[i].wrapT=s[f[1]]),l&&(e[i].anisotropy=l);if(!h){var m=e[i],e=new Image;e.onload=function(){if(!n(this.width)||!n(this.height)){var e=r(this.width),t=r(this.height);m.image.width=e,m.image.height=t,m.image.getContext("2d").drawImage(this,0,0,e,t)}else m.image=this;m.needsUpdate=!0},e.crossOrigin=o.crossOrigin,e.src=p}}function s(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var o=this,u="MeshLambertMaterial",a={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var f=e.shading.toLowerCase();"phong"===f?u="MeshPhongMaterial":"basic"===f&&(u="MeshBasicMaterial")}void 0!==e.blending&&void 0!==THREE[e.blending]&&(a.blending=THREE[e.blending]);if(void 0!==e.transparent||1>e.opacity)a.transparent=e.transparent;return void 0!==e.depthTest&&(a.depthTest=e.depthTest),void 0!==e.depthWrite&&(a.depthWrite=e.depthWrite),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.flipSided&&(a.side=THREE.BackSide),void 0!==e.doubleSided&&(a.side=THREE.DoubleSide),void 0!==e.wireframe&&(a.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?a.vertexColors=THREE.FaceColors:e.vertexColors&&(a.vertexColors=THREE.VertexColors)),e.colorDiffuse?a.color=s(e.colorDiffuse):e.DbgColor&&(a.color=e.DbgColor),e.colorSpecular&&(a.specular=s(e.colorSpecular)),e.colorAmbient&&(a.ambient=s(e.colorAmbient)),e.transparency&&(a.opacity=e.transparency),e.specularCoef&&(a.shininess=e.specularCoef),e.mapDiffuse&&t&&i(a,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&t&&i(a,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&t&&i(a,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&t&&i(a,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&t&&i(a,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapBumpScale&&(a.bumpScale=e.mapBumpScale),e.mapNormal?(u=THREE.ShaderUtils.lib.normal,f=THREE.UniformsUtils.clone(u.uniforms),f.tNormal.value=a.normalMap,e.mapNormalFactor&&f.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),a.map&&(f.tDiffuse.value=a.map,f.enableDiffuse.value=!0),a.specularMap&&(f.tSpecular.value=a.specularMap,f.enableSpecular.value=!0),a.lightMap&&(f.tAO.value=a.lightMap,f.enableAO.value=!0),f.uDiffuseColor.value.setHex(a.color),f.uSpecularColor.value.setHex(a.specular),f.uAmbientColor.value.setHex(a.ambient),f.uShininess.value=a.shininess,void 0!==a.opacity&&(f.uOpacity.value=a.opacity),a=new THREE.ShaderMaterial({fragmentShader:u.fragmentShader,vertexShader:u.vertexShader,uniforms:f,lights:!0,fog:!0})):a=new THREE[u](a),void 0!==e.DbgName&&(a.name=e.DbgName),a}},THREE.BinaryLoader=function(e){THREE.Loader.call(this,e)},THREE.BinaryLoader.prototype=Object.create(THREE.Loader.prototype),THREE.BinaryLoader.prototype.load=function(e,t,n,r){var n=n&&"string"==typeof n?n:this.extractUrlBase(e),r=r&&"string"==typeof r?r:this.extractUrlBase(e),i=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart(),this.loadAjaxJSON(this,e,t,n,r,i)},THREE.BinaryLoader.prototype.loadAjaxJSON=function(e,t,n,r,i,s){var o=new XMLHttpRequest;o.onreadystatechange=function(){if(4==o.readyState)if(200==o.status||0==o.status){var u=JSON.parse(o.responseText);e.loadAjaxBuffers(u,n,i,r,s)}else console.error("THREE.BinaryLoader: Couldn't load ["+t+"] ["+o.status+"]")},o.open("GET",t,!0),o.send(null)},THREE.BinaryLoader.prototype.loadAjaxBuffers=function(e,t,n,r,i){var s=new XMLHttpRequest,o=n+"/"+e.buffers,u=0;s.onreadystatechange=function(){if(4==s.readyState)if(200==s.status||0==s.status){var n=s.response;void 0===n&&(n=(new Uint8Array(s.responseBody)).buffer),THREE.BinaryLoader.prototype.createBinModel(n,t,r,e.materials)}else console.error("THREE.BinaryLoader: Couldn't load ["+o+"] ["+s.status+"]");else 3==s.readyState?i&&(0==u&&(u=s.getResponseHeader("Content-Length")),i({total:u,loaded:s.responseText.length})):2==s.readyState&&(u=s.getResponseHeader("Content-Length"))},s.open("GET",o,!0),s.responseType="arraybuffer",s.send(null)},THREE.BinaryLoader.prototype.createBinModel=function(e,t,n,r){var i=function(){function y(e){return e%4?4-e%4:0}function b(e,t){return(new Uint8Array(e,t,1))[0]}function w(e,t){return(new Uint32Array(e,t,1))[0]}function E(t,n){var r,i,s,o,u,f,l,c=new Uint32Array(e,n,3*t);for(r=0;r<t;r++)i=c[3*r],s=c[3*r+1],o=c[3*r+2],u=O[2*i],i=O[2*i+1],f=O[2*s],l=O[2*s+1],s=O[2*o],o=O[2*o+1],k.faceVertexUvs[0].push([new THREE.UV(u,i),new THREE.UV(f,l),new THREE.UV(s,o)])}function S(t,n){var r,i,s,o,u,f,l,c,h,p=new Uint32Array(e,n,4*t);for(r=0;r<t;r++)i=p[4*r],s=p[4*r+1],o=p[4*r+2],u=p[4*r+3],f=O[2*i],i=O[2*i+1],l=O[2*s],c=O[2*s+1],s=O[2*o],h=O[2*o+1],o=O[2*u],u=O[2*u+1],k.faceVertexUvs[0].push([new THREE.UV(f,i),new THREE.UV(l,c),new THREE.UV(s,h),new THREE.UV(o,u)])}function x(t,n,r){for(var i,s,o,u,n=new Uint32Array(e,n,3*t),f=new Uint16Array(e,r,t),r=0;r<t;r++)i=n[3*r],s=n[3*r+1],o=n[3*r+2],u=f[r],k.faces.push(new THREE.Face3(i,s,o,null,null,u))}function T(t,n,r){for(var i,s,o,u,f,n=new Uint32Array(e,n,4*t),l=new Uint16Array(e,r,t),r=0;r<t;r++)i=n[4*r],s=n[4*r+1],o=n[4*r+2],u=n[4*r+3],f=l[r],k.faces.push(new THREE.Face4(i,s,o,u,null,null,f))}function N(t,n,r,i){for(var s,o,u,f,l,c,h,n=new Uint32Array(e,n,3*t),r=new Uint32Array(e,r,3*t),p=new Uint16Array(e,i,t),i=0;i<t;i++){s=n[3*i],o=n[3*i+1],u=n[3*i+2],l=r[3*i],c=r[3*i+1],h=r[3*i+2],f=p[i];var d=A[3*c],v=A[3*c+1];c=A[3*c+2];var m=A[3*h],g=A[3*h+1];h=A[3*h+2],k.faces.push(new THREE.Face3(s,o,u,[new THREE.Vector3(A[3*l],A[3*l+1],A[3*l+2]),new THREE.Vector3(d,v,c),new THREE.Vector3(m,g,h)],null,f))}}function C(t,n,r,i){for(var s,o,u,f,l,c,h,p,d,n=new Uint32Array(e,n,4*t),r=new Uint32Array(e,r,4*t),v=new Uint16Array(e,i,t),i=0;i<t;i++){s=n[4*i],o=n[4*i+1],u=n[4*i+2],f=n[4*i+3],c=r[4*i],h=r[4*i+1],p=r[4*i+2],d=r[4*i+3],l=v[i];var m=A[3*h],g=A[3*h+1];h=A[3*h+2];var y=A[3*p],b=A[3*p+1];p=A[3*p+2];var w=A[3*d],E=A[3*d+1];d=A[3*d+2],k.faces.push(new THREE.Face4(s,o,u,f,[new THREE.Vector3(A[3*c],A[3*c+1],A[3*c+2]),new THREE.Vector3(m,g,h),new THREE.Vector3(y,b,p),new THREE.Vector3(w,E,d)],null,l))}}var t,n,r,i,s,o,u,f,l,c,h,p,d,v,m,g,k=this,L=0,A=[],O=[],M,_,D;THREE.Geometry.call(this),g=e,_=L,v=new Uint8Array(g,_,12),c="";for(d=0;12>d;d++)c+=String.fromCharCode(v[_+d]);t=b(g,_+12),b(g,_+13),b(g,_+14),b(g,_+15),n=b(g,_+16),r=b(g,_+17),i=b(g,_+18),s=b(g,_+19),o=w(g,_+20),u=w(g,_+20+4),f=w(g,_+20+8),l=w(g,_+20+12),c=w(g,_+20+16),h=w(g,_+20+20),p=w(g,_+20+24),d=w(g,_+20+28),v=w(g,_+20+32),m=w(g,_+20+36),g=w(g,_+20+40),L+=t,_=3*n+s,D=4*n+s,M=l*_,t=c*(_+3*r),n=h*(_+3*i),s=p*(_+3*r+3*i),_=d*D,r=v*(D+4*r),i=m*(D+4*i),D=L;var L=new Float32Array(e,L,3*o),P,H,B,j;for(P=0;P<o;P++)H=L[3*P],B=L[3*P+1],j=L[3*P+2],k.vertices.push(new THREE.Vector3(H,B,j));o=L=D+3*o*Float32Array.BYTES_PER_ELEMENT;if(u){L=new Int8Array(e,L,3*u);for(D=0;D<u;D++)P=L[3*D],H=L[3*D+1],B=L[3*D+2],A.push(P/127,H/127,B/127)}L=o+3*u*Int8Array.BYTES_PER_ELEMENT,u=L+=y(3*u);if(f){o=new Float32Array(e,L,2*f);for(L=0;L<f;L++)D=o[2*L],P=o[2*L+1],O.push(D,P)}f=L=u+2*f*Float32Array.BYTES_PER_ELEMENT,M=f+M+y(2*l),u=M+t+y(2*c),t=u+n+y(2*h),n=t+s+y(2*p),_=n+_+y(2*d),s=_+r+y(2*v),r=s+i+y(2*m),h&&(i=u+3*h*Uint32Array.BYTES_PER_ELEMENT,x(h,u,i+3*h*Uint32Array.BYTES_PER_ELEMENT),E(h,i)),p&&(h=t+3*p*Uint32Array.BYTES_PER_ELEMENT,i=h+3*p*Uint32Array.BYTES_PER_ELEMENT,N(p,t,h,i+3*p*Uint32Array.BYTES_PER_ELEMENT),E(p,i)),m&&(p=s+4*m*Uint32Array.BYTES_PER_ELEMENT,T(m,s,p+4*m*Uint32Array.BYTES_PER_ELEMENT),S(m,p)),g&&(m=r+4*g*Uint32Array.BYTES_PER_ELEMENT,p=m+4*g*Uint32Array.BYTES_PER_ELEMENT,C(g,r,m,p+4*g*Uint32Array.BYTES_PER_ELEMENT),S(g,p)),l&&x(l,f,f+3*l*Uint32Array.BYTES_PER_ELEMENT),c&&(l=M+3*c*Uint32Array.BYTES_PER_ELEMENT,N(c,M,l,l+3*c*Uint32Array.BYTES_PER_ELEMENT)),d&&T(d,n,n+4*d*Uint32Array.BYTES_PER_ELEMENT),v&&(c=_+4*v*Uint32Array.BYTES_PER_ELEMENT,C(v,_,c,c+4*v*Uint32Array.BYTES_PER_ELEMENT)),this.computeCentroids(),this.computeFaceNormals()};i.prototype=Object.create(THREE.Geometry.prototype),i=new i(n),n=this.initMaterials(r,n),this.needsTangents(n)&&i.computeTangents(),t(i,n)},THREE.ImageLoader=function(){THREE.EventTarget.call(this),this.crossOrigin=null},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t){var n=this;void 0===t&&(t=new Image),t.addEventListener("load",function(){n.dispatchEvent({type:"load",content:t})},!1),t.addEventListener("error",function(){n.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),n.crossOrigin&&(t.crossOrigin=n.crossOrigin),t.src=e}},THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(e,t,n){n=n&&"string"==typeof n?n:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,n)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,n,r,i){var s=new XMLHttpRequest,o=0;s.withCredentials=this.withCredentials,s.onreadystatechange=function(){if(s.readyState===s.DONE)if(200===s.status||0===s.status){if(s.responseText){var u=JSON.parse(s.responseText);e.createModel(u,n,r)}else console.warn("THREE.JSONLoader: ["+t+"] seems to be unreachable or file there is empty");e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+t+"] ["+s.status+"]");else s.readyState===s.LOADING?i&&(0===o&&(o=s.getResponseHeader("Content-Length")),i({total:o,loaded:s.responseText.length})):s.readyState===s.HEADERS_RECEIVED&&(o=s.getResponseHeader("Content-Length"))},s.open("GET",t,!0),s.send(null)},THREE.JSONLoader.prototype.createModel=function(e,t,n){var r=new THREE.Geometry,i=void 0!==e.scale?1/e.scale:1,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b,w=e.faces;d=e.vertices;var E=e.normals,S=e.colors,x=0;for(s=0;s<e.uvs.length;s++)e.uvs[s].length&&x++;for(s=0;s<x;s++)r.faceUvs[s]=[],r.faceVertexUvs[s]=[];a=0;for(f=d.length;a<f;)l=new THREE.Vector3,l.x=d[a++]*i,l.y=d[a++]*i,l.z=d[a++]*i,r.vertices.push(l);a=0;for(f=w.length;a<f;){d=w[a++],l=d&1,u=d&2,s=d&4,o=d&8,h=d&16,c=d&32,v=d&64,d&=128,l?(m=new THREE.Face4,m.a=w[a++],m.b=w[a++],m.c=w[a++],m.d=w[a++],l=4):(m=new THREE.Face3,m.a=w[a++],m.b=w[a++],m.c=w[a++],l=3),u&&(u=w[a++],m.materialIndex=u),u=r.faces.length;if(s)for(s=0;s<x;s++)g=e.uvs[s],p=w[a++],b=g[2*p],p=g[2*p+1],r.faceUvs[s][u]=new THREE.UV(b,p);if(o)for(s=0;s<x;s++){g=e.uvs[s],y=[];for(o=0;o<l;o++)p=w[a++],b=g[2*p],p=g[2*p+1],y[o]=new THREE.UV(b,p);r.faceVertexUvs[s][u]=y}h&&(h=3*w[a++],o=new THREE.Vector3,o.x=E[h++],o.y=E[h++],o.z=E[h],m.normal=o);if(c)for(s=0;s<l;s++)h=3*w[a++],o=new THREE.Vector3,o.x=E[h++],o.y=E[h++],o.z=E[h],m.vertexNormals.push(o);v&&(c=w[a++],c=new THREE.Color(S[c]),m.color=c);if(d)for(s=0;s<l;s++)c=w[a++],c=new THREE.Color(S[c]),m.vertexColors.push(c);r.faces.push(m)}if(e.skinWeights){a=0;for(f=e.skinWeights.length;a<f;a+=2)w=e.skinWeights[a],E=e.skinWeights[a+1],r.skinWeights.push(new THREE.Vector4(w,E,0,0))}if(e.skinIndices){a=0;for(f=e.skinIndices.length;a<f;a+=2)w=e.skinIndices[a],E=e.skinIndices[a+1],r.skinIndices.push(new THREE.Vector4(w,E,0,0))}r.bones=e.bones,r.animation=e.animation;if(void 0!==e.morphTargets){a=0;for(f=e.morphTargets.length;a<f;a++){r.morphTargets[a]={},r.morphTargets[a].name=e.morphTargets[a].name,r.morphTargets[a].vertices=[],S=r.morphTargets[a].vertices,x=e.morphTargets[a].vertices,w=0;for(E=x.length;w<E;w+=3)d=new THREE.Vector3,d.x=x[w]*i,d.y=x[w+1]*i,d.z=x[w+2]*i,S.push(d)}}if(void 0!==e.morphColors){a=0;for(f=e.morphColors.length;a<f;a++){r.morphColors[a]={},r.morphColors[a].name=e.morphColors[a].name,r.morphColors[a].colors=[],E=r.morphColors[a].colors,S=e.morphColors[a].colors,i=0;for(w=S.length;i<w;i+=3)x=new THREE.Color(16755200),x.setRGB(S[i],S[i+1],S[i+2]),E.push(x)}}r.computeCentroids(),r.computeFaceNormals(),e=this.initMaterials(e.materials,n),this.needsTangents(e)&&r.computeTangents(),t(r,e)},THREE.LoadingMonitor=function(){THREE.EventTarget.call(this);var e=this,t=0,n=0,r=function(){t++,e.dispatchEvent({type:"progress",loaded:t,total:n}),t===n&&e.dispatchEvent({type:"load"})};this.add=function(e){n++,e.addEventListener("load",r,!1)}},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlerMap={},this.hierarchyHandlerMap={},this.addGeometryHandler("ascii",THREE.JSONLoader),this.addGeometryHandler("binary",THREE.BinaryLoader)},THREE.SceneLoader.prototype.constructor=THREE.SceneLoader,THREE.SceneLoader.prototype.load=function(e,t){var n=this,r=new XMLHttpRequest;r.onreadystatechange=function(){if(4===r.readyState)if(200===r.status||0===r.status){var i=JSON.parse(r.responseText);n.parse(i,t,e)}else console.error("THREE.SceneLoader: Couldn't load ["+e+"] ["+r.status+"]")},r.open("GET",e,!0),r.send(null)},THREE.SceneLoader.prototype.addGeometryHandler=function(e,t){this.geometryHandlerMap[e]={loaderClass:t}},THREE.SceneLoader.prototype.addHierarchyHandler=function(e,t){this.hierarchyHandlerMap[e]={loaderClass:t}},THREE.SceneLoader.prototype.parse=function(e,t,n){function r(e,t){return"relativeToHTML"==t?e:c+"/"+e}function i(){s(j.scene,I.objects)}function s(e,t){for(var n in t)if(void 0===j.objects[n]){var i=t[n],o=null;if(i.type&&i.type in l.hierarchyHandlerMap&&void 0===i.loading){var a={},f;for(f in m)"type"!==f&&"url"!==f&&(a[f]=m[f]);C=j.materials[i.material],i.loading=!0;var c=l.hierarchyHandlerMap[i.type].loaderObject;c.addEventListener?(c.addEventListener("load",u(n,e,C,i)),c.load(r(i.url,I.urlBaseType))):c.options?c.load(r(i.url,I.urlBaseType),u(n,e,C,i)):c.load(r(i.url,I.urlBaseType),u(n,e,C,i),a)}else if(void 0!==i.geometry){if(N=j.geometries[i.geometry]){o=!1,C=j.materials[i.material],o=C instanceof THREE.ShaderMaterial,b=i.position,w=i.rotation,E=i.quaternion,S=i.scale,g=i.matrix,E=0,i.material||(C=new THREE.MeshFaceMaterial(j.face_materials[i.geometry])),C instanceof THREE.MeshFaceMaterial&&0===C.materials.length&&(C=new THREE.MeshFaceMaterial(j.face_materials[i.geometry]));if(C instanceof THREE.MeshFaceMaterial)for(a=0;a<C.materials.length;a++)o=o||C.materials[a]instanceof THREE.ShaderMaterial;o&&N.computeTangents(),i.skin?o=new THREE.SkinnedMesh(N,C):i.morph?(o=new THREE.MorphAnimMesh(N,C),void 0!==i.duration&&(o.duration=i.duration),void 0!==i.time&&(o.time=i.time),void 0!==i.mirroredLoop&&(o.mirroredLoop=i.mirroredLoop),C.morphNormals&&N.computeMorphNormals()):o=new THREE.Mesh(N,C),o.name=n,g?(o.matrixAutoUpdate=!1,o.matrix.set(g[0],g[1],g[2],g[3],g[4],g[5],g[6],g[7],g[8],g[9],g[10],g[11],g[12],g[13],g[14],g[15])):(o.position.set(b[0],b[1],b[2]),E?(o.quaternion.set(E[0],E[1],E[2],E[3]),o.useQuaternion=!0):o.rotation.set(w[0],w[1],w[2]),o.scale.set(S[0],S[1],S[2])),o.visible=i.visible,o.castShadow=i.castShadow,o.receiveShadow=i.receiveShadow,e.add(o),j.objects[n]=o}}else"DirectionalLight"===i.type||"PointLight"===i.type||"AmbientLight"===i.type?(M=void 0!==i.color?i.color:16777215,_=void 0!==i.intensity?i.intensity:1,"DirectionalLight"===i.type?(b=i.direction,O=new THREE.DirectionalLight(M,_),O.position.set(b[0],b[1],b[2]),i.target&&(F.push({object:O,targetName:i.target}),O.target=null)):"PointLight"===i.type?(b=i.position,y=i.distance,O=new THREE.PointLight(M,_,y),O.position.set(b[0],b[1],b[2])):"AmbientLight"===i.type&&(O=new THREE.AmbientLight(M)),e.add(O),O.name=n,j.lights[n]=O,j.objects[n]=O):"PerspectiveCamera"===i.type||"OrthographicCamera"===i.type?("PerspectiveCamera"===i.type?k=new THREE.PerspectiveCamera(i.fov,i.aspect,i.near,i.far):"OrthographicCamera"===i.type&&(k=new THREE.OrthographicCamera(x.left,x.right,x.top,x.bottom,x.near,x.far)),b=i.position,k.position.set(b[0],b[1],b[2]),e.add(k),k.name=n,j.cameras[n]=k,j.objects[n]=k):(b=i.position,w=i.rotation,E=i.quaternion,S=i.scale,E=0,o=new THREE.Object3D,o.name=n,o.position.set(b[0],b[1],b[2]),E?(o.quaternion.set(E[0],E[1],E[2],E[3]),o.useQuaternion=!0):o.rotation.set(w[0],w[1],w[2]),o.scale.set(S[0],S[1],S[2]),o.visible=void 0!==i.visible?i.visible:!1,e.add(o),j.objects[n]=o,j.empties[n]=o);if(o){if(void 0!==i.properties)for(var h in i.properties)o.properties[h]=i.properties[h];void 0!==i.children&&s(o,i.children)}}}function o(e){return function(t,n){j.geometries[e]=t,j.face_materials[e]=n,i(),D-=1,l.onLoadComplete(),f()}}function u(e,t,n,r){return function(s){var s=s.content?s.content:s.dae?s.scene:s,o=r.position,u=r.rotation,a=r.quaternion,c=r.scale;s.position.set(o[0],o[1],o[2]),a?(s.quaternion.set(a[0],a[1],a[2],a[3]),s.useQuaternion=!0):s.rotation.set(u[0],u[1],u[2]),s.scale.set(c[0],c[1],c[2]),n&&s.traverse(function(e){e.material=n}),t.add(s),j.objects[e]=s,i(),D-=1,l.onLoadComplete(),f()}}function a(e){return function(t,n){j.geometries[e]=t,j.face_materials[e]=n}}function f(){l.callbackProgress({totalModels:H,totalTextures:B,loadedModels:H-D,loadedTextures:B-P},j),l.onLoadProgress();if(0===D&&0===P){for(var e=0;e<F.length;e++){var n=F[e],r=j.objects[n.targetName];r?n.object.target=r:(n.object.target=new THREE.Object3D,j.scene.add(n.object.target)),n.object.target.properties.targetInverse=n.object}t(j)}}var l=this,c=THREE.Loader.prototype.extractUrlBase(n),h,p,d,v,m,g,y,b,w,E,S,x,T,N,C,k,L,A,O,M,_,D,P,H,B,j,F=[],I=e,q;for(q in this.geometryHandlerMap)e=this.geometryHandlerMap[q].loaderClass,this.geometryHandlerMap[q].loaderObject=new e;for(q in this.hierarchyHandlerMap)e=this.hierarchyHandlerMap[q].loaderClass,this.hierarchyHandlerMap[q].loaderObject=new e;P=D=0,j={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}},I.transform&&(q=I.transform.position,e=I.transform.rotation,n=I.transform.scale,q&&j.scene.position.set(q[0],q[1],q[2]),e&&j.scene.rotation.set(e[0],e[1],e[2]),n&&j.scene.scale.set(n[0],n[1],n[2]),q||e||n)&&(j.scene.updateMatrix(),j.scene.updateMatrixWorld()),q=function(e){return function(){P-=e,f(),l.onLoadComplete()}};for(d in I.fogs)e=I.fogs[d],"linear"===e.type?L=new THREE.Fog(0,e.near,e.far):"exp2"===e.type&&(L=new THREE.FogExp2(0,e.density)),x=e.color,L.color.setRGB(x[0],x[1],x[2]),j.fogs[d]=L;for(h in I.geometries)m=I.geometries[h],m.type in this.geometryHandlerMap&&(D+=1,l.onLoadStart());for(var R in I.objects)d=I.objects[R],d.type&&d.type in this.hierarchyHandlerMap&&(D+=1,l.onLoadStart());H=D;for(h in I.geometries)if(m=I.geometries[h],"cube"===m.type)N=new THREE.CubeGeometry(m.width,m.height,m.depth,m.widthSegments,m.heightSegments,m.depthSegments),j.geometries[h]=N;else if("plane"===m.type)N=new THREE.PlaneGeometry(m.width,m.height,m.widthSegments,m.heightSegments),j.geometries[h]=N;else if("sphere"===m.type)N=new THREE.SphereGeometry(m.radius,m.widthSegments,m.heightSegments),j.geometries[h]=N;else if("cylinder"===m.type)N=new THREE.CylinderGeometry(m.topRad,m.botRad,m.height,m.radSegs,m.heightSegs),j.geometries[h]=N;else if("torus"===m.type)N=new THREE.TorusGeometry(m.radius,m.tube,m.segmentsR,m.segmentsT),j.geometries[h]=N;else if("icosahedron"===m.type)N=new THREE.IcosahedronGeometry(m.radius,m.subdivisions),j.geometries[h]=N;else if(m.type in this.geometryHandlerMap){R={};for(A in m)"type"!==A&&"url"!==A&&(R[A]=m[A]);this.geometryHandlerMap[m.type].loaderObject.load(r(m.url,I.urlBaseType),o(h),R)}else"embedded"===m.type&&(R=I.embeds[m.id],R.metadata=I.metadata,R&&this.geometryHandlerMap.ascii.loaderObject.createModel(R,a(h),""));for(v in I.textures)if(h=I.textures[v],h.url instanceof Array){P+=h.url.length;for(A=0;A<h.url.length;A++)l.onLoadStart()}else P+=1,l.onLoadStart();B=P;for(v in I.textures){h=I.textures[v],void 0!==h.mapping&&void 0!==THREE[h.mapping]&&(h.mapping=new THREE[h.mapping]);if(h.url instanceof Array){R=h.url.length,d=[];for(A=0;A<R;A++)d[A]=r(h.url[A],I.urlBaseType);A=(A=d[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(d,h.mapping,q(R)):THREE.ImageUtils.loadTextureCube(d,h.mapping,q(R))}else A=h.url.toLowerCase().endsWith(".dds"),R=r(h.url,I.urlBaseType),d=q(1),A=A?THREE.ImageUtils.loadCompressedTexture(R,h.mapping,d):THREE.ImageUtils.loadTexture(R,h.mapping,d),void 0!==THREE[h.minFilter]&&(A.minFilter=THREE[h.minFilter]),void 0!==THREE[h.magFilter]&&(A.magFilter=THREE[h.magFilter]),h.anisotropy&&(A.anisotropy=h.anisotropy),h.repeat&&(A.repeat.set(h.repeat[0],h.repeat[1]),1!==h.repeat[0]&&(A.wrapS=THREE.RepeatWrapping),1!==h.repeat[1])&&(A.wrapT=THREE.RepeatWrapping),h.offset&&A.offset.set(h.offset[0],h.offset[1]),h.wrap&&(R={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==R[h.wrap[0]]&&(A.wrapS=R[h.wrap[0]]),void 0!==R[h.wrap[1]])&&(A.wrapT=R[h.wrap[1]]);j.textures[v]=A}for(p in I.materials){g=I.materials[p];for(T in g.parameters)"envMap"===T||"map"===T||"lightMap"===T||"bumpMap"===T?g.parameters[T]=j.textures[g.parameters[T]]:"shading"===T?g.parameters[T]="flat"===g.parameters[T]?THREE.FlatShading:THREE.SmoothShading:"side"===T?g.parameters[T]="double"==g.parameters[T]?THREE.DoubleSide:"back"==g.parameters[T]?THREE.BackSide:THREE.FrontSide:"blending"===T?g.parameters[T]=g.parameters[T]in THREE?THREE[g.parameters[T]]:THREE.NormalBlending:"combine"===T?g.parameters[T]="MixOperation"==g.parameters[T]?THREE.MixOperation:THREE.MultiplyOperation:"vertexColors"===T?"face"==g.parameters[T]?g.parameters[T]=THREE.FaceColors:g.parameters[T]&&(g.parameters[T]=THREE.VertexColors):"wrapRGB"===T&&(v=g.parameters[T],g.parameters[T]=new THREE.Vector3(v[0],v[1],v[2]));void 0!==g.parameters.opacity&&1>g.parameters.opacity&&(g.parameters.transparent=!0),g.parameters.normalMap?(v=THREE.ShaderUtils.lib.normal,q=THREE.UniformsUtils.clone(v.uniforms),h=g.parameters.color,A=g.parameters.specular,R=g.parameters.ambient,d=g.parameters.shininess,q.tNormal.value=j.textures[g.parameters.normalMap],g.parameters.normalScale&&q.uNormalScale.value.set(g.parameters.normalScale[0],g.parameters.normalScale[1]),g.parameters.map&&(q.tDiffuse.value=g.parameters.map,q.enableDiffuse.value=!0),g.parameters.envMap&&(q.tCube.value=g.parameters.envMap,q.enableReflection.value=!0,q.uReflectivity.value=g.parameters.reflectivity),g.parameters.lightMap&&(q.tAO.value=g.parameters.lightMap,q.enableAO.value=!0),g.parameters.specularMap&&(q.tSpecular.value=j.textures[g.parameters.specularMap],q.enableSpecular.value=!0),g.parameters.displacementMap&&(q.tDisplacement.value=j.textures[g.parameters.displacementMap],q.enableDisplacement.value=!0,q.uDisplacementBias.value=g.parameters.displacementBias,q.uDisplacementScale.value=g.parameters.displacementScale),q.uDiffuseColor.value.setHex(h),q.uSpecularColor.value.setHex(A),q.uAmbientColor.value.setHex(R),q.uShininess.value=d,g.parameters.opacity&&(q.uOpacity.value=g.parameters.opacity),C=new THREE.ShaderMaterial({fragmentShader:v.fragmentShader,vertexShader:v.vertexShader,uniforms:q,lights:!0,fog:!0})):C=new THREE[g.type](g.parameters),j.materials[p]=C}for(p in I.materials)if(g=I.materials[p],g.parameters.materials){T=[];for(A=0;A<g.parameters.materials.length;A++)T.push(j.materials[g.parameters.materials[A]]);j.materials[p].materials=T}i(),j.cameras&&I.defaults.camera&&(j.currentCamera=j.cameras[I.defaults.camera]),j.fogs&&I.defaults.fog&&(j.scene.fog=j.fogs[I.defaults.fog]),x=I.defaults.bgcolor,j.bgColor=new THREE.Color,j.bgColor.setRGB(x[0],x[1],x[2]),j.bgColorAlpha=I.defaults.bgalpha,l.callbackSync(j),f()},THREE.TextureLoader=function(){THREE.EventTarget.call(this),this.crossOrigin=null},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e){var t=this,n=new Image;n.addEventListener("load",function(){var e=new THREE.Texture(n);e.needsUpdate=!0,t.dispatchEvent({type:"load",content:e})},!1),n.addEventListener("error",function(){t.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),t.crossOrigin&&(n.crossOrigin=t.crossOrigin),n.src=e}},THREE.Material=function(){THREE.MaterialLibrary.push(this),this.id=THREE.MaterialIdCount++,this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthWrite=this.depthTest=!0,this.polygonOffset=!1,this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0,this.overdraw=!1,this.needsUpdate=this.visible=!0},THREE.Material.prototype.setValues=function(e){if(void 0!==e)for(var t in 
e){var n=e[t];if(void 0===n)console.warn("THREE.Material: '"+t+"' parameter is undefined.");else if(t in this){var r=this[t];r instanceof THREE.Color&&n instanceof THREE.Color?r.copy(n):r instanceof THREE.Color&&"number"==typeof n?r.setHex(n):r instanceof THREE.Vector3&&n instanceof THREE.Vector3?r.copy(n):this[t]=n}}},THREE.Material.prototype.clone=function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},THREE.Material.prototype.deallocate=function(){var e=THREE.MaterialLibrary.indexOf(this);-1!==e&&THREE.MaterialLibrary.splice(e,1)},THREE.MaterialIdCount=0,THREE.MaterialLibrary=[],THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linejoin=this.linecap="round",this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.scale=this.linewidth=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.perPixel=!0,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.bumpMap=this.lightMap=this.map=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.envMap=this.specularMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.perPixel=this.perPixel,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,e),e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]},THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))},THREE.ParticleBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleBasicMaterial.prototype.clone=function(){var e=new THREE.ParticleBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ParticleCanvasMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(){},this.setValues(e)},THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleCanvasMaterial.prototype.clone=function(){var e=new THREE.ParticleCanvasMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.program=this.program,e},THREE.ParticleDOMMaterial=function(e){this.element=e},THREE.ParticleDOMMaterial.prototype.clone=function(){return new THREE.ParticleDOMMaterial(this.element)},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.vertexShader=this.fragmentShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=this.fog=!1,this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.Texture=function(e,t,n,r,i,s,o,u,a){THREE.TextureLibrary.push(this),this.id=THREE.TextureIdCount++,this.name="",this.image=e,this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==n?n:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r?r:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==i?i:THREE.LinearFilter,this.minFilter=void 0!==s?s:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==a?a:1,this.format=void 0!==o?o:THREE.RGBAFormat,this.type=void 0!==u?u:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var e=new THREE.Texture;return e.image=this.image,e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e},deallocate:function(){var e=THREE.TextureLibrary.indexOf(this);-1!==e&&THREE.TextureLibrary.splice(e,1)}},THREE.TextureIdCount=0,THREE.TextureLibrary=[],THREE.CompressedTexture=function(e,t,n,r,i,s,o,u,a,f){THREE.Texture.call(this,null,s,o,u,a,f,r,i),this.image={width:t,height:n},this.mipmaps=e},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return e.image=this.image,e.mipmaps=this.mipmaps,e.format=this.format,e.type=this.type,e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e},THREE.DataTexture=function(e,t,n,r,i,s,o,u,a,f){THREE.Texture.call(this,null,s,o,u,a,f,r,i),this.image={data:e,width:t,height:n}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);return e.offset.copy(this.offset),e.repeat.copy(this.repeat),e},THREE.Particle=function(e){THREE.Object3D.call(this),this.material=e},THREE.Particle.prototype=Object.create(THREE.Object3D.prototype),THREE.Particle.prototype.clone=function(e){return void 0===e&&(e=new THREE.Particle(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.ParticleBasicMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=e.boundingSphere.radius),this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(e){return void 0===e&&(e=new THREE.ParticleSystem(this.geometry,this.material)),e.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,e),e},THREE.Line=function(e,t,n){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==n?n:THREE.LineStrip,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});if(this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=e.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var n=0;n<this.geometry.morphTargets.length;n++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[n].name]=n}},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix());if(t||this.matrixWorldNeedsUpdate)e?this.skinMatrix.multiply(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0;var n,r=this.children.length;for(n=0;n<r;n++)this.children[n].update(this.skinMatrix,t)},THREE.SkinnedMesh=function(e,t,n){THREE.Mesh.call(this,e,t),this.useVertexTexture=void 0!==n?n:!0,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var r,i,s;if(this.geometry&&void 0!==this.geometry.bones){for(e=0;e<this.geometry.bones.length;e++)n=this.geometry.bones[e],r=n.pos,i=n.rotq,s=n.scl,t=this.addBone(),t.name=n.name,t.position.set(r[0],r[1],r[2]),t.quaternion.set(i[0],i[1],i[2],i[3]),t.useQuaternion=!0,void 0!==s?t.scale.set(s[0],s[1],s[2]):t.scale.set(1,1,1);for(e=0;e<this.bones.length;e++)n=this.geometry.bones[e],t=this.bones[e],-1===n.parent?this.add(t):this.bones[n.parent].add(t);e=this.bones.length,this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=e=256<e?64:64<e?32:16<e?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*e),this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||e)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var e=0,t=this.children.length;e<t;e++){var n=this.children[e];n instanceof THREE.Bone?n.update(this.identityMatrix,!1):n.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[],e=0;for(t=this.bones.length;e<t;e++)n=new THREE.Matrix4,n.getInverse(this.bones[e].skinMatrix),this.boneInverses.push(n)}e=0;for(t=this.bones.length;e<t;e++)THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[e].skinMatrix,this.boneInverses[e]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*e);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)},THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],n=1/t.lengthManhattan();Infinity!==n?t.multiplyScalar(n):t.set(1)}},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4,THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.duration=1e3,this.mirroredLoop=!1,this.currentKeyframe=this.lastKeyframe=this.time=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,n=e.animations,r=/([a-z]+)(\d+)/,i=0,s=e.morphTargets.length;i<s;i++){var o=e.morphTargets[i].name.match(r);if(o&&1<o.length){o=o[1],n[o]||(n[o]={start:Infinity,end:-Infinity});var u=n[o];i<u.start&&(u.start=i),i>u.end&&(u.end=i),t||(t=o)}}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,n){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:n}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var n=this.geometry.animations[e];n?(this.setFrameRange(n.start,n.end),this.duration=1e3*((n.end-n.start)/t),this.time=0):console.warn("animation["+e+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)if(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time)this.time=0,this.directionBackwards=!1}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);e=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1),e!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[e]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=e),t=this.time%t/t,this.directionBackwards&&(t=1-t),this.morphTargetInfluences[this.currentKeyframe]=t,this.morphTargetInfluences[this.lastKeyframe]=1-t},THREE.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,e),e},THREE.Ribbon=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=t},THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype),THREE.Ribbon.prototype.clone=function(e){return void 0===e&&(e=new THREE.Ribbon(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.LOD=function(){THREE.Object3D.call(this),this.LODs=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0);for(var t=Math.abs(t),n=0;n<this.LODs.length&&!(t<this.LODs[n].visibleAtDistance);n++);this.LODs.splice(n,0,{visibleAtDistance:t,object3D:e}),this.add(e)},THREE.LOD.prototype.update=function(e){if(1<this.LODs.length){e.matrixWorldInverse.getInverse(e.matrixWorld),e=e.matrixWorldInverse,e=-(e.elements[2]*this.matrixWorld.elements[12]+e.elements[6]*this.matrixWorld.elements[13]+e.elements[10]*this.matrixWorld.elements[14]+e.elements[14]),this.LODs[0].object3D.visible=!0;for(var t=1;t<this.LODs.length;t++){if(!(e>=this.LODs[t].visibleAtDistance))break;this.LODs[t-1].object3D.visible=!1,this.LODs[t].object3D.visible=!0}for(;t<this.LODs.length;t++)this.LODs[t].object3D.visible=!1}},THREE.LOD.prototype.clone=function(){},THREE.Sprite=function(e){THREE.Object3D.call(this),e=e||{},this.color=void 0!==e.color?new THREE.Color(e.color):new THREE.Color(16777215),this.map=void 0!==e.map?e.map:new THREE.Texture,this.blending=void 0!==e.blending?e.blending:THREE.NormalBlending,this.blendSrc=void 0!==e.blendSrc?e.blendSrc:THREE.SrcAlphaFactor,this.blendDst=void 0!==e.blendDst?e.blendDst:THREE.OneMinusSrcAlphaFactor,this.blendEquation=void 0!==e.blendEquation?e.blendEquation:THREE.AddEquation,this.useScreenCoordinates=void 0!==e.useScreenCoordinates?e.useScreenCoordinates:!0,this.mergeWith3D=void 0!==e.mergeWith3D?e.mergeWith3D:!this.useScreenCoordinates,this.affectedByDistance=void 0!==e.affectedByDistance?e.affectedByDistance:!this.useScreenCoordinates,this.scaleByViewport=void 0!==e.scaleByViewport?e.scaleByViewport:!this.affectedByDistance,this.alignment=e.alignment instanceof THREE.Vector2?e.alignment:THREE.SpriteAlignment.center.clone(),this.fog=void 0!==e.fog?e.fog:!1,this.rotation3d=this.rotation,this.rotation=0,this.opacity=1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1)},THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position),this.rotation3d.set(0,0,this.rotation),this.matrix.setRotationFromEuler(this.rotation3d);if(1!==this.scale.x||1!==this.scale.y)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite({})),e.color.copy(this.color),e.map=this.map,e.blending=this.blending,e.useScreenCoordinates=this.useScreenCoordinates,e.mergeWith3D=this.mergeWith3D,e.affectedByDistance=this.affectedByDistance,e.scaleByViewport=this.scaleByViewport,e.alignment=this.alignment,e.fog=this.fog,e.rotation3d.copy(this.rotation3d),e.rotation=this.rotation,e.opacity=this.opacity,e.uvOffset.copy(this.uvOffset),e.uvScale.copy(this.uvScale),THREE.Object3D.prototype.clone.call(this,e),e},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),THREE.Scene=function(){THREE.Object3D.call(this),this.overrideMaterial=this.fog=null,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)&&-1===this.__objects.indexOf(e)){this.__objects.push(e),this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(t=0;t<e.children.length;t++)this.__addObject(e.children[t])},THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);-1!==t&&this.__lights.splice(t,1)}else e instanceof THREE.Camera||(t=this.__objects.indexOf(e),-1!==t&&(this.__objects.splice(t,1),this.__objectsRemoved.push(e),t=this.__objectsAdded.indexOf(e),-1!==t&&this.__objectsAdded.splice(t,1)));for(t=0;t<e.children.length;t++)this.__removeObject(e.children[t])},THREE.Fog=function(e,t,n){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==n?n:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(e){function t(e){y!==e&&(y=v.globalAlpha=e)}function n(e){b!==e&&(e===THREE.NormalBlending?v.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?v.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(v.globalCompositeOperation="darker"),b=e)}function r(e){w!==e&&(w=v.strokeStyle=e)}function i(e){E!==e&&(E=v.fillStyle=e)}console.log("THREE.CanvasRenderer",THREE.REVISION);var e=e||{},s=this,o,u,a,f=new THREE.Projector,l=void 0!==e.canvas?e.canvas:document.createElement("canvas"),c,h,p,d,v=l.getContext("2d"),m=new THREE.Color(0),g=0,y=1,b=0,w=null,E=null,S=null,x=null,T=null,N,C,k,L,A=new THREE.RenderableVertex,O=new THREE.RenderableVertex,M,_,D,P,H,B,j,F,I,q,R,U,z=new THREE.Color,W=new THREE.Color,X=new THREE.Color,V=new THREE.Color,$=new THREE.Color,J=new THREE.Color,K=new THREE.Color,Q={},G={},Y,Z,et,tt,nt,rt,it,st,ot,ut,at=new THREE.Rectangle,ft=new THREE.Rectangle,lt=new THREE.Rectangle,ct=!1,ht=new THREE.Color,pt=new THREE.Color,dt=new THREE.Color,vt=new THREE.Vector3,mt,gt,yt,bt,wt,Et,e=16;mt=document.createElement("canvas"),mt.width=mt.height=2,gt=mt.getContext("2d"),gt.fillStyle="rgba(0,0,0,1)",gt.fillRect(0,0,2,2),yt=gt.getImageData(0,0,2,2),bt=yt.data,wt=document.createElement("canvas"),wt.width=wt.height=e,Et=wt.getContext("2d"),Et.translate(-e/2,-e/2),Et.scale(e,e),e--,this.domElement=l,this.sortElements=this.sortObjects=this.autoClear=!0,this.info={render:{vertices:0,faces:0}},this.setSize=function(e,t){c=e,h=t,p=Math.floor(c/2),d=Math.floor(h/2),l.width=c,l.height=h,at.set(-p,-d,p,d),ft.set(-p,-d,p,d),y=1,b=0,T=x=S=E=w=null},this.setClearColor=function(e,t){m.copy(e),g=void 0!==t?t:1,ft.set(-p,-d,p,d)},this.setClearColorHex=function(e,t){m.setHex(e),g=void 0!==t?t:1,ft.set(-p,-d,p,d)},this.getMaxAnisotropy=function(){return 0},this.clear=function(){v.setTransform(1,0,0,-1,p,d),!1===ft.isEmpty()&&(ft.minSelf(at),ft.inflate(2),1>g&&v.clearRect(Math.floor(ft.getX()),Math.floor(ft.getY()),Math.floor(ft.getWidth()),Math.floor(ft.getHeight())),0<g&&(n(THREE.NormalBlending),t(1),i("rgba("+Math.floor(255*m.r)+","+Math.floor(255*m.g)+","+Math.floor(255*m.b)+","+g+")"),v.fillRect(Math.floor(ft.getX()),Math.floor(ft.getY()),Math.floor(ft.getWidth()),Math.floor(ft.getHeight()))),ft.empty())},this.render=function(e,l){function c(e,t,n){for(var r=0,i=a.length;r<i;r++){var s=a[r],o=s.color;if(s instanceof THREE.DirectionalLight){var u=s.matrixWorld.getPosition().normalize(),f=t.dot(u);0>=f||(f*=s.intensity,n.r+=o.r*f,n.g+=o.g*f,n.b+=o.b*f)}else s instanceof THREE.PointLight&&(u=s.matrixWorld.getPosition(),f=t.dot(vt.sub(u,e).normalize()),0>=f||(f*=0==s.distance?1:1-Math.min(e.distanceTo(u)/s.distance,1),0!=f&&(f*=s.intensity,n.r+=o.r*f,n.g+=o.g*f,n.b+=o.b*f)))}}function h(e,r,i,o,u,a,f,h){s.info.render.vertices+=3,s.info.render.faces++,t(h.opacity),n(h.blending),M=e.positionScreen.x,_=e.positionScreen.y,D=r.positionScreen.x,P=r.positionScreen.y,H=i.positionScreen.x,B=i.positionScreen.y,m(M,_,D,P,H,B),(h instanceof THREE.MeshLambertMaterial||h instanceof THREE.MeshPhongMaterial)&&null===h.map&&null===h.map?(J.copy(h.color),K.copy(h.emissive),h.vertexColors===THREE.FaceColors&&(J.r*=f.color.r,J.g*=f.color.g,J.b*=f.color.b),!0===ct)?!1===h.wireframe&&h.shading==THREE.SmoothShading&&3==f.vertexNormalsLength?(W.r=X.r=V.r=ht.r,W.g=X.g=V.g=ht.g,W.b=X.b=V.b=ht.b,c(f.v1.positionWorld,f.vertexNormalsWorld[0],W),c(f.v2.positionWorld,f.vertexNormalsWorld[1],X),c(f.v3.positionWorld,f.vertexNormalsWorld[2],V),W.r=W.r*J.r+K.r,W.g=W.g*J.g+K.g,W.b=W.b*J.b+K.b,X.r=X.r*J.r+K.r,X.g=X.g*J.g+K.g,X.b=X.b*J.b+K.b,V.r=V.r*J.r+K.r,V.g=V.g*J.g+K.g,V.b=V.b*J.b+K.b,$.r=.5*(X.r+V.r),$.g=.5*(X.g+V.g),$.b=.5*(X.b+V.b),et=St(W,X,V,$),E(M,_,D,P,H,B,0,0,1,0,0,1,et)):(z.r=ht.r,z.g=ht.g,z.b=ht.b,c(f.centroidWorld,f.normalWorld,z),z.r=z.r*J.r+K.r,z.g=z.g*J.g+K.g,z.b=z.b*J.b+K.b,!0===h.wireframe?y(z,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):b(z)):!0===h.wireframe?y(h.color,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):b(h.color):h instanceof THREE.MeshBasicMaterial||h instanceof THREE.MeshLambertMaterial||h instanceof THREE.MeshPhongMaterial?null!==h.map?h.map.mapping instanceof THREE.UVMapping&&(tt=f.uvs[0],w(M,_,D,P,H,B,tt[o].u,tt[o].v,tt[u].u,tt[u].v,tt[a].u,tt[a].v,h.map)):null!==h.envMap?h.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(e=l.matrixWorldInverse,vt.copy(f.vertexNormalsWorld[o]),nt=.5*(vt.x*e.elements[0]+vt.y*e.elements[4]+vt.z*e.elements[8])+.5,rt=.5*(vt.x*e.elements[1]+vt.y*e.elements[5]+vt.z*e.elements[9])+.5,vt.copy(f.vertexNormalsWorld[u]),it=.5*(vt.x*e.elements[0]+vt.y*e.elements[4]+vt.z*e.elements[8])+.5,st=.5*(vt.x*e.elements[1]+vt.y*e.elements[5]+vt.z*e.elements[9])+.5,vt.copy(f.vertexNormalsWorld[a]),ot=.5*(vt.x*e.elements[0]+vt.y*e.elements[4]+vt.z*e.elements[8])+.5,ut=.5*(vt.x*e.elements[1]+vt.y*e.elements[5]+vt.z*e.elements[9])+.5,w(M,_,D,P,H,B,nt,rt,it,st,ot,ut,h.envMap)):(z.copy(h.color),h.vertexColors===THREE.FaceColors&&(z.r*=f.color.r,z.g*=f.color.g,z.b*=f.color.b),!0===h.wireframe?y(z,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):b(z)):h instanceof THREE.MeshDepthMaterial?(Y=l.near,Z=l.far,W.r=W.g=W.b=1-xt(e.positionScreen.z,Y,Z),X.r=X.g=X.b=1-xt(r.positionScreen.z,Y,Z),V.r=V.g=V.b=1-xt(i.positionScreen.z,Y,Z),$.r=.5*(X.r+V.r),$.g=.5*(X.g+V.g),$.b=.5*(X.b+V.b),et=St(W,X,V,$),E(M,_,D,P,H,B,0,0,1,0,0,1,et)):h instanceof THREE.MeshNormalMaterial&&(z.r=Tt(f.normalWorld.x),z.g=Tt(f.normalWorld.y),z.b=Tt(f.normalWorld.z),!0===h.wireframe?y(z,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):b(z))}function m(e,t,n,r,i,s){v.beginPath(),v.moveTo(e,t),v.lineTo(n,r),v.lineTo(i,s),v.closePath()}function g(e,t,n,r,i,s,o,u){v.beginPath(),v.moveTo(e,t),v.lineTo(n,r),v.lineTo(i,s),v.lineTo(o,u),v.closePath()}function y(e,t,n,i){S!==t&&(S=v.lineWidth=t),x!==n&&(x=v.lineCap=n),T!==i&&(T=v.lineJoin=i),r(e.getContextStyle()),v.stroke(),lt.inflate(2*t)}function b(e){i(e.getContextStyle()),v.fill()}function w(e,t,n,r,s,o,u,a,f,l,c,h,p){if(!(p instanceof THREE.DataTexture||void 0===p.image||0==p.image.width)){if(!0===p.needsUpdate){var d=p.wrapS==THREE.RepeatWrapping,m=p.wrapT==THREE.RepeatWrapping;Q[p.id]=v.createPattern(p.image,!0===d&&!0===m?"repeat":!0===d&&!1===m?"repeat-x":!1===d&&!0===m?"repeat-y":"no-repeat"),p.needsUpdate=!1}void 0===Q[p.id]?i("rgba(0,0,0,1)"):i(Q[p.id]);var d=p.offset.x/p.repeat.x,m=p.offset.y/p.repeat.y,g=p.image.width*p.repeat.x,y=p.image.height*p.repeat.y,u=(u+d)*g,a=(1-a+m)*y,n=n-e,r=r-t,s=s-e,o=o-t,f=(f+d)*g-u,l=(1-l+m)*y-a,c=(c+d)*g-u,h=(1-h+m)*y-a,d=f*h-c*l;0===d?(void 0===G[p.id]&&(t=document.createElement("canvas"),t.width=p.image.width,t.height=p.image.height,t=t.getContext("2d"),t.drawImage(p.image
,0,0),G[p.id]=t.getImageData(0,0,p.image.width,p.image.height).data),t=G[p.id],u=4*(Math.floor(u)+Math.floor(a)*p.image.width),z.setRGB(t[u]/255,t[u+1]/255,t[u+2]/255),b(z)):(d=1/d,p=(h*n-l*s)*d,l=(h*r-l*o)*d,n=(f*s-c*n)*d,r=(f*o-c*r)*d,e=e-p*u-n*a,u=t-l*u-r*a,v.save(),v.transform(p,l,n,r,e,u),v.fill(),v.restore())}}function E(e,t,n,r,i,s,o,u,a,f,l,c,h){var p,d;p=h.width-1,d=h.height-1,o*=p,u*=d,n-=e,r-=t,i-=e,s-=t,a=a*p-o,f=f*d-u,l=l*p-o,c=c*d-u,d=1/(a*c-l*f),p=(c*n-f*i)*d,f=(c*r-f*s)*d,n=(a*i-l*n)*d,r=(a*s-l*r)*d,e=e-p*o-n*u,t=t-f*o-r*u,v.save(),v.transform(p,f,n,r,e,t),v.clip(),v.drawImage(h,0,0),v.restore()}function St(e,t,n,r){return bt[0]=255*e.r|0,bt[1]=255*e.g|0,bt[2]=255*e.b|0,bt[4]=255*t.r|0,bt[5]=255*t.g|0,bt[6]=255*t.b|0,bt[8]=255*n.r|0,bt[9]=255*n.g|0,bt[10]=255*n.b|0,bt[12]=255*r.r|0,bt[13]=255*r.g|0,bt[14]=255*r.b|0,gt.putImageData(yt,0,0),Et.drawImage(mt,0,0),wt}function xt(e,t,n){return e=(e-t)/(n-t),e*e*(3-2*e)}function Tt(e){return e=.5*(e+1),0>e?0:1<e?1:e}function Nt(e,t){var n=t.x-e.x,r=t.y-e.y,i=n*n+r*r;0!==i&&(i=1/Math.sqrt(i),n*=i,r*=i,t.x+=n,t.y+=r,e.x-=n,e.y-=r)}if(0==l instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{var Ct,kt,Lt,At;!0===this.autoClear?this.clear():v.setTransform(1,0,0,-1,p,d),s.info.render.vertices=0,s.info.render.faces=0,o=f.projectScene(e,l,this.sortObjects,this.sortElements),u=o.elements,a=o.lights,ct=0<a.length;if(!0===ct){ht.setRGB(0,0,0),pt.setRGB(0,0,0),dt.setRGB(0,0,0),Ct=0;for(kt=a.length;Ct<kt;Ct++){At=a[Ct];var Ot=At.color;At instanceof THREE.AmbientLight?(ht.r+=Ot.r,ht.g+=Ot.g,ht.b+=Ot.b):At instanceof THREE.DirectionalLight?(pt.r+=Ot.r,pt.g+=Ot.g,pt.b+=Ot.b):At instanceof THREE.PointLight&&(dt.r+=Ot.r,dt.g+=Ot.g,dt.b+=Ot.b)}}Ct=0;for(kt=u.length;Ct<kt;Ct++)if(Lt=u[Ct],At=Lt.material,void 0!==At&&!1!==At.visible){lt.empty();if(Lt instanceof THREE.RenderableParticle){N=Lt,N.x*=p,N.y*=d;var Ot=N,Mt=Lt;t(At.opacity),n(At.blending);var _t=void 0,Dt=void 0,Pt=void 0,Ht=void 0,Bt=Lt=void 0,jt=void 0;At instanceof THREE.ParticleBasicMaterial?null===At.map?(Pt=Mt.object.scale.x,Ht=Mt.object.scale.y,Pt*=Mt.scale.x*p,Ht*=Mt.scale.y*d,lt.set(Ot.x-Pt,Ot.y-Ht,Ot.x+Pt,Ot.y+Ht),!1!==at.intersects(lt)&&(i(At.color.getContextStyle()),v.save(),v.translate(Ot.x,Ot.y),v.rotate(-Mt.rotation),v.scale(Pt,Ht),v.fillRect(-1,-1,2,2),v.restore())):(Lt=At.map.image,Bt=Lt.width>>1,jt=Lt.height>>1,Pt=Mt.scale.x*p,Ht=Mt.scale.y*d,_t=Pt*Bt,Dt=Ht*jt,lt.set(Ot.x-_t,Ot.y-Dt,Ot.x+_t,Ot.y+Dt),!1!==at.intersects(lt)&&(v.save(),v.translate(Ot.x,Ot.y),v.rotate(-Mt.rotation),v.scale(Pt,-Ht),v.translate(-Bt,-jt),v.drawImage(Lt,0,0),v.restore())):At instanceof THREE.ParticleCanvasMaterial&&(_t=Mt.scale.x*p,Dt=Mt.scale.y*d,lt.set(Ot.x-_t,Ot.y-Dt,Ot.x+_t,Ot.y+Dt),!1!==at.intersects(lt)&&(r(At.color.getContextStyle()),i(At.color.getContextStyle()),v.save(),v.translate(Ot.x,Ot.y),v.rotate(-Mt.rotation),v.scale(_t,Dt),At.program(v),v.restore()))}else if(Lt instanceof THREE.RenderableLine){if(N=Lt.v1,C=Lt.v2,N.positionScreen.x*=p,N.positionScreen.y*=d,C.positionScreen.x*=p,C.positionScreen.y*=d,lt.addPoint(N.positionScreen.x,N.positionScreen.y),lt.addPoint(C.positionScreen.x,C.positionScreen.y),!0===at.intersects(lt)&&(Ot=N,Mt=C,t(At.opacity),n(At.blending),v.beginPath(),v.moveTo(Ot.positionScreen.x,Ot.positionScreen.y),v.lineTo(Mt.positionScreen.x,Mt.positionScreen.y),At instanceof THREE.LineBasicMaterial))Ot=At.linewidth,S!==Ot&&(S=v.lineWidth=Ot),Ot=At.linecap,x!==Ot&&(x=v.lineCap=Ot),Ot=At.linejoin,T!==Ot&&(T=v.lineJoin=Ot),r(At.color.getContextStyle()),v.stroke(),lt.inflate(2*At.linewidth)}else Lt instanceof THREE.RenderableFace3?(N=Lt.v1,C=Lt.v2,k=Lt.v3,N.positionScreen.x*=p,N.positionScreen.y*=d,C.positionScreen.x*=p,C.positionScreen.y*=d,k.positionScreen.x*=p,k.positionScreen.y*=d,!0===At.overdraw&&(Nt(N.positionScreen,C.positionScreen),Nt(C.positionScreen,k.positionScreen),Nt(k.positionScreen,N.positionScreen)),lt.add3Points(N.positionScreen.x,N.positionScreen.y,C.positionScreen.x,C.positionScreen.y,k.positionScreen.x,k.positionScreen.y),!0===at.intersects(lt)&&h(N,C,k,0,1,2,Lt,At,e)):Lt instanceof THREE.RenderableFace4&&(N=Lt.v1,C=Lt.v2,k=Lt.v3,L=Lt.v4,N.positionScreen.x*=p,N.positionScreen.y*=d,C.positionScreen.x*=p,C.positionScreen.y*=d,k.positionScreen.x*=p,k.positionScreen.y*=d,L.positionScreen.x*=p,L.positionScreen.y*=d,A.positionScreen.copy(C.positionScreen),O.positionScreen.copy(L.positionScreen),!0===At.overdraw&&(Nt(N.positionScreen,C.positionScreen),Nt(C.positionScreen,L.positionScreen),Nt(L.positionScreen,N.positionScreen),Nt(k.positionScreen,A.positionScreen),Nt(k.positionScreen,O.positionScreen)),lt.addPoint(N.positionScreen.x,N.positionScreen.y),lt.addPoint(C.positionScreen.x,C.positionScreen.y),lt.addPoint(k.positionScreen.x,k.positionScreen.y),lt.addPoint(L.positionScreen.x,L.positionScreen.y),!0===at.intersects(lt))&&((Ot=N,Mt=C,_t=k,Dt=L,Pt=A,Ht=O,Bt=e,s.info.render.vertices+=4,s.info.render.faces++,t(At.opacity),n(At.blending),void 0!==At.map&&null!==At.map||void 0!==At.envMap&&null!==At.envMap)?(h(Ot,Mt,Dt,0,1,3,Lt,At,Bt),h(Pt,_t,Ht,1,2,3,Lt,At,Bt)):(M=Ot.positionScreen.x,_=Ot.positionScreen.y,D=Mt.positionScreen.x,P=Mt.positionScreen.y,H=_t.positionScreen.x,B=_t.positionScreen.y,j=Dt.positionScreen.x,F=Dt.positionScreen.y,I=Pt.positionScreen.x,q=Pt.positionScreen.y,R=Ht.positionScreen.x,U=Ht.positionScreen.y,At instanceof THREE.MeshLambertMaterial||At instanceof THREE.MeshPhongMaterial)?(J.copy(At.color),K.copy(At.emissive),At.vertexColors===THREE.FaceColors&&(J.r*=Lt.color.r,J.g*=Lt.color.g,J.b*=Lt.color.b),!0===ct)?!1===At.wireframe&&At.shading==THREE.SmoothShading&&4==Lt.vertexNormalsLength?(W.r=X.r=V.r=$.r=ht.r,W.g=X.g=V.g=$.g=ht.g,W.b=X.b=V.b=$.b=ht.b,c(Lt.v1.positionWorld,Lt.vertexNormalsWorld[0],W),c(Lt.v2.positionWorld,Lt.vertexNormalsWorld[1],X),c(Lt.v4.positionWorld,Lt.vertexNormalsWorld[3],V),c(Lt.v3.positionWorld,Lt.vertexNormalsWorld[2],$),W.r=W.r*J.r+K.r,W.g=W.g*J.g+K.g,W.b=W.b*J.b+K.b,X.r=X.r*J.r+K.r,X.g=X.g*J.g+K.g,X.b=X.b*J.b+K.b,V.r=V.r*J.r+K.r,V.g=V.g*J.g+K.g,V.b=V.b*J.b+K.b,$.r=$.r*J.r+K.r,$.g=$.g*J.g+K.g,$.b=$.b*J.b+K.b,et=St(W,X,V,$),m(M,_,D,P,j,F),E(M,_,D,P,j,F,0,0,1,0,0,1,et),m(I,q,H,B,R,U),E(I,q,H,B,R,U,1,0,1,1,0,1,et)):(z.r=ht.r,z.g=ht.g,z.b=ht.b,c(Lt.centroidWorld,Lt.normalWorld,z),z.r=z.r*J.r+K.r,z.g=z.g*J.g+K.g,z.b=z.b*J.b+K.b,g(M,_,D,P,H,B,j,F),!0===At.wireframe?y(z,At.wireframeLinewidth,At.wireframeLinecap,At.wireframeLinejoin):b(z)):(z.r=J.r+K.r,z.g=J.g+K.g,z.b=J.b+K.b,g(M,_,D,P,H,B,j,F),!0===At.wireframe?y(z,At.wireframeLinewidth,At.wireframeLinecap,At.wireframeLinejoin):b(z)):At instanceof THREE.MeshBasicMaterial?(z.copy(At.color),At.vertexColors===THREE.FaceColors&&(z.r*=Lt.color.r,z.g*=Lt.color.g,z.b*=Lt.color.b),g(M,_,D,P,H,B,j,F),!0===At.wireframe?y(z,At.wireframeLinewidth,At.wireframeLinecap,At.wireframeLinejoin):b(z)):At instanceof THREE.MeshNormalMaterial?(z.r=Tt(Lt.normalWorld.x),z.g=Tt(Lt.normalWorld.y),z.b=Tt(Lt.normalWorld.z),g(M,_,D,P,H,B,j,F),!0===At.wireframe?y(z,At.wireframeLinewidth,At.wireframeLinecap,At.wireframeLinejoin):b(z)):At instanceof THREE.MeshDepthMaterial&&(Y=l.near,Z=l.far,W.r=W.g=W.b=1-xt(Ot.positionScreen.z,Y,Z),X.r=X.g=X.b=1-xt(Mt.positionScreen.z,Y,Z),V.r=V.g=V.b=1-xt(Dt.positionScreen.z,Y,Z),$.r=$.g=$.b=1-xt(_t.positionScreen.z,Y,Z),et=St(W,X,V,$),m(M,_,D,P,j,F),E(M,_,D,P,j,F,0,0,1,0,0,1,et),m(I,q,H,B,R,U),E(I,q,H,B,R,U,1,0,1,1,0,1,et)));ft.addRectangle(lt)}v.setTransform(1,0,0,1,0,0)}}},THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;"
,morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix 	+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"},THREE.UniformsUtils={merge:function(e){var t,n,r,i={};for(t=0;t<e.length;t++)for(n in r=this.clone(e[t]),r)i[n]=r[n];return i},clone:function(e){var t,n,r,i={};for(t in e)for(n in i[t]={},e[t])r=e[t][n],i[t][n]=r instanceof THREE.Color||r instanceof THREE.Vector2||r instanceof THREE.Vector3||r instanceof THREE.Vector4||r instanceof THREE.Matrix4||r instanceof THREE.Texture?r.clone():r instanceof Array?r.slice():r;return i}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}},THREE.WebGLRenderer=function(e){function t(e){if(e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)St.deleteBuffer(e.__webglCustomAttributesList[t].buffer)}function n(e,t){var n=e.vertices.length,r=t.material;if(r.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var i in r.attributes){var s=r.attributes[i];if(!s.__webglInitialized||s.createUniqueBuffers){s.__webglInitialized=!0;var o=1;"v2"===s.type?o=2:"v3"===s.type?o=3:"v4"===s.type?o=4:"c"===s.type&&(o=3),s.size=o,s.array=new Float32Array(n*o),s.buffer=St.createBuffer(),s.buffer.belongsToAttribute=i,s.needsUpdate=!0}e.__webglCustomAttributesList.push(s)}}}function r(e,t){var n=t.geometry,r=e.faces3,u=e.faces4,a=3*r.length+4*u.length,f=1*r.length+2*u.length,u=3*r.length+4*u.length,r=i(t,e),l=o(r),c=s(r),h=r.vertexColors?r.vertexColors:!1;e.__vertexArray=new Float32Array(3*a),c&&(e.__normalArray=new Float32Array(3*a)),n.hasTangents&&(e.__tangentArray=new Float32Array(4*a)),h&&(e.__colorArray=new Float32Array(3*a));if(l){if(0<n.faceUvs.length||0<n.faceVertexUvs.length)e.__uvArray=new Float32Array(2*a);if(1<n.faceUvs.length||1<n.faceVertexUvs.length)e.__uv2Array=new Float32Array(2*a)}t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*a),e.__skinWeightArray=new Float32Array(4*a)),e.__faceArray=new Uint16Array(3*f),e.__lineArray=new Uint16Array(2*u);if(e.numMorphTargets){e.__morphTargetsArrays=[],n=0;for(l=e.numMorphTargets;n<l;n++)e.__morphTargetsArrays.push(new Float32Array(3*a))}if(e.numMorphNormals){e.__morphNormalsArrays=[],n=0;for(l=e.numMorphNormals;n<l;n++)e.__morphNormalsArrays.push(new Float32Array(3*a))}e.__webglFaceCount=3*f,e.__webglLineCount=2*u;if(r.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var p in r.attributes){var f=r.attributes[p],n={},d;for(d in f)n[d]=f[d];if(!n.__webglInitialized||n.createUniqueBuffers)n.__webglInitialized=!0,u=1,"v2"===n.type?u=2:"v3"===n.type?u=3:"v4"===n.type?u=4:"c"===n.type&&(u=3),n.size=u,n.array=new Float32Array(a*u),n.buffer=St.createBuffer(),n.buffer.belongsToAttribute=p,f.needsUpdate=!0,n.__original=f;e.__webglCustomAttributesList.push(n)}}e.__inittedArrays=!0}function i(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function s(e){return e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial?!1:e&&void 0!==e.shading&&e.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function o(e){return e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof THREE.ShaderMaterial?!0:!1}function u(e){var t,n,r;for(t in e.attributes)r="index"===t?St.ELEMENT_ARRAY_BUFFER:St.ARRAY_BUFFER,n=e.attributes[t],n.buffer=St.createBuffer(),St.bindBuffer(r,n.buffer),St.bufferData(r,n.array,St.STATIC_DRAW)}function a(e,t,n){var r,i,s,o,u=e.vertices;o=u.length;var a=e.colors,f=a.length,l=e.__vertexArray,c=e.__colorArray,h=e.__sortArray,p=e.verticesNeedUpdate,d=e.colorsNeedUpdate,v=e.__webglCustomAttributesList;if(n.sortParticles){gt.copy(mt),gt.multiplySelf(n.matrixWorld);for(r=0;r<o;r++)i=u[r],yt.copy(i),gt.multiplyVector3(yt),h[r]=[yt.z,r];h.sort(function(e,t){return t[0]-e[0]});for(r=0;r<o;r++)i=u[h[r][1]],s=3*r,l[s]=i.x,l[s+1]=i.y,l[s+2]=i.z;for(r=0;r<f;r++)s=3*r,i=a[h[r][1]],c[s]=i.r,c[s+1]=i.g,c[s+2]=i.b;if(v){a=0;for(f=v.length;a<f;a++)if(u=v[a],void 0===u.boundTo||"vertices"===u.boundTo)if(s=0,i=u.value.length,1===u.size)for(r=0;r<i;r++)o=h[r][1],u.array[r]=u.value[o];else if(2===u.size)for(r=0;r<i;r++)o=h[r][1],o=u.value[o],u.array[s]=o.x,u.array[s+1]=o.y,s+=2;else if(3===u.size)if("c"===u.type)for(r=0;r<i;r++)o=h[r][1],o=u.value[o],u.array[s]=o.r,u.array[s+1]=o.g,u.array[s+2]=o.b,s+=3;else for(r=0;r<i;r++)o=h[r][1],o=u.value[o],u.array[s]=o.x,u.array[s+1]=o.y,u.array[s+2]=o.z,s+=3;else if(4===u.size)for(r=0;r<i;r++)o=h[r][1],o=u.value[o],u.array[s]=o.x,u.array[s+1]=o.y,u.array[s+2]=o.z,u.array[s+3]=o.w,s+=4}}else{if(p)for(r=0;r<o;r++)i=u[r],s=3*r,l[s]=i.x,l[s+1]=i.y,l[s+2]=i.z;if(d)for(r=0;r<f;r++)i=a[r],s=3*r,c[s]=i.r,c[s+1]=i.g,c[s+2]=i.b;if(v){a=0;for(f=v.length;a<f;a++)if(u=v[a],u.needsUpdate&&(void 0===u.boundTo||"vertices"===u.boundTo))if(i=u.value.length,s=0,1===u.size)for(r=0;r<i;r++)u.array[r]=u.value[r];else if(2===u.size)for(r=0;r<i;r++)o=u.value[r],u.array[s]=o.x,u.array[s+1]=o.y,s+=2;else if(3===u.size)if("c"===u.type)for(r=0;r<i;r++)o=u.value[r],u.array[s]=o.r,u.array[s+1]=o.g,u.array[s+2]=o.b,s+=3;else for(r=0;r<i;r++)o=u.value[r],u.array[s]=o.x,u.array[s+1]=o.y,u.array[s+2]=o.z,s+=3;else if(4===u.size)for(r=0;r<i;r++)o=u.value[r],u.array[s]=o.x,u.array[s+1]=o.y,u.array[s+2]=o.z,u.array[s+3]=o.w,s+=4}}if(p||n.sortParticles)St.bindBuffer(St.ARRAY_BUFFER,e.__webglVertexBuffer),St.bufferData(St.ARRAY_BUFFER,l,t);if(d||n.sortParticles)St.bindBuffer(St.ARRAY_BUFFER,e.__webglColorBuffer),St.bufferData(St.ARRAY_BUFFER,c,t);if(v){a=0;for(f=v.length;a<f;a++)if(u=v[a],u.needsUpdate||n.sortParticles)St.bindBuffer(St.ARRAY_BUFFER,u.buffer),St.bufferData(St.ARRAY_BUFFER,u.array,t)}}function f(e,t,n){var r=e.attributes,i=r.index,s=r.position,o=r.normal,u=r.uv,a=r.color,r=r.tangent;e.elementsNeedUpdate&&void 0!==i&&(St.bindBuffer(St.ELEMENT_ARRAY_BUFFER,i.buffer),St.bufferData(St.ELEMENT_ARRAY_BUFFER,i.array,t)),e.verticesNeedUpdate&&void 0!==s&&(St.bindBuffer(St.ARRAY_BUFFER,s.buffer),St.bufferData(St.ARRAY_BUFFER,s.array,t)),e.normalsNeedUpdate&&void 0!==o&&(St.bindBuffer(St.ARRAY_BUFFER,o.buffer),St.bufferData(St.ARRAY_BUFFER,o.array,t)),e.uvsNeedUpdate&&void 0!==u&&(St.bindBuffer(St.ARRAY_BUFFER,u.buffer),St.bufferData(St.ARRAY_BUFFER,u.array,t)),e.colorsNeedUpdate&&void 0!==a&&(St.bindBuffer(St.ARRAY_BUFFER,a.buffer),St.bufferData(St.ARRAY_BUFFER,a.array,t)),e.tangentsNeedUpdate&&void 0!==r&&(St.bindBuffer(St.ARRAY_BUFFER,r.buffer),St.bufferData(St.ARRAY_BUFFER,r.array,t));if(n)for(var f in e.attributes)delete e.attributes[f].array}function l(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}function c(e,t){return t[1]-e[1]}function h(e,t,n){if(e.length)for(var r=0,i=e.length;r<i;r++)J=W=null,V=$=Y=G=it=rt=Z=-1,wt=!0,e[r].render(t,n,pt,dt),J=W=null,V=$=Y=G=it=rt=Z=-1,wt=!0}function p(e,t,n,r,i,s,o,u){var a,f,l,c;t?(f=e.length-1,c=t=-1):(f=0,t=e.length,c=1);for(var h=f;h!==t;h+=c)if(a=e[h],a.render){f=a.object,l=a.buffer;if(u)a=u;else{a=a[n];if(!a)continue;o&&R.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst),R.setDepthTest(a.depthTest),R.setDepthWrite(a.depthWrite),N(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)}R.setMaterialFaces(a),l instanceof THREE.BufferGeometry?R.renderBufferDirect(r,i,s,a,l,f):R.renderBuffer(r,i,s,a,l,f)}}function d(e,t,n,r,i,s,o){for(var u,a,f=0,l=e.length;f<l;f++)if(u=e[f],a=u.object,a.visible){if(o)u=o;else{u=u[t];if(!u)continue;s&&R.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),R.setDepthTest(u.depthTest),R.setDepthWrite(u.depthWrite),N(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits)}R.renderImmediateObject(n,r,i,u,a)}}function v(e,t,n){e.push({buffer:t,object:n,opaque:null,transparent:null})}function m(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function g(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function y(e,t){for(var n=e.length-1;0<=n;n--)e[n].object===t&&e.splice(n,1)}function b(e,t){for(var n=e.length-1;0<=n;n--)e[n]===t&&e.splice(n,1)}function w(e,t,n,r,i){Q=0,r.needsUpdate&&(r.program&&R.deallocateMaterial(r),R.initMaterial(r,t,n,i),r.needsUpdate=!1),r.morphTargets&&!i.__webglMorphTargetInfluences&&(i.__webglMorphTargetInfluences=new Float32Array(R.maxMorphTargets));var s=!1,o=r.program,u=o.uniforms,a=r.uniforms;o!==W&&(St.useProgram(o),W=o,s=!0),r.id!==V&&(V=r.id,s=!0);if(s||e!==J)St.uniformMatrix4fv(u.projectionMatrix,!1,e._projectionMatrixArray),e!==J&&(J=e);if(r.skinning)if(Ot&&i.useVertexTexture){if(null!==u.boneTexture){var f=E();St.uniform1i(u.boneTexture,f),R.setTexture(i.boneTexture,f)}}else null!==u.boneGlobalMatrices&&St.uniformMatrix4fv(u.boneGlobalMatrices,!1,i.boneMatrices);if(s){n&&r.fog&&(a.fogColor.value=n.color,n instanceof THREE.Fog?(a.fogNear.value=n.near,a.fogFar.value=n.far):n instanceof THREE.FogExp2&&(a.fogDensity.value=n.density));if(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r.lights){if(wt){for(var l=0,c=0,h=0,p,d,v,m=Et,g=m.directional.colors,y=m.directional.positions,b=m.point.colors,w=m.point.positions,S=m.point.distances,N=m.spot.colors,C=m.spot.positions,k=m.spot.distances,A=m.spot.directions,O=m.spot.anglesCos,D=m.spot.exponents,P=m.hemi.skyColors,H=m.hemi.groundColors,B=m.hemi.positions,j=0,F=0,I=0,q=0,U=0,z=0,X=0,$=0,K=d=0,n=K=K=0,s=t.length;n<s;n++)f=t[n],f.onlyShadow||(p=f.color,v=f.intensity,d=f.distance,f instanceof THREE.AmbientLight?f.visible&&(R.gammaInput?(l+=p.r*p.r,c+=p.g*p.g,h+=p.b*p.b):(l+=p.r,c+=p.g,h+=p.b)):f instanceof THREE.DirectionalLight?(U+=1,f.visible&&(d=3*j,R.gammaInput?x(g,d,p,v*v):T(g,d,p,v),bt.copy(f.matrixWorld.getPosition()),bt.subSelf(f.target.matrixWorld.getPosition()),bt.normalize(),y[d]=bt.x,y[d+1]=bt.y,y[d+2]=bt.z,j+=1)):f instanceof THREE.PointLight?(z+=1,f.visible&&(K=3*F,R.gammaInput?x(b,K,p,v*v):T(b,K,p,v),v=f.matrixWorld.getPosition(),w[K]=v.x,w[K+1]=v.y,w[K+2]=v.z,S[F]=d,F+=1)):f instanceof THREE.SpotLight?(X+=1,f.visible&&(K=3*I,R.gammaInput?x(N,K,p,v*v):T(N,K,p,v),v=f.matrixWorld.getPosition(),C[K]=v.x,C[K+1]=v.y,C[K+2]=v.z,k[I]=d,bt.copy(v),bt.subSelf(f.target.matrixWorld.getPosition()),bt.normalize(),A[K]=bt.x,A[K+1]=bt.y,A[K+2]=bt.z,O[I]=Math.cos(f.angle),D[I]=f.exponent,I+=1)):f instanceof THREE.HemisphereLight&&($+=1,f.visible&&(p=f.color,d=f.groundColor,K=3*q,R.gammaInput?(v*=v,x(P,K,p,v),x(H,K,d,v)):(T(P,K,p,v),T(H,K,d,v)),bt.copy(f.matrixWorld.getPosition()),bt.normalize(),B[K]=bt.x,B[K+1]=bt.y,B[K+2]=bt.z,q+=1)));n=3*j;for(s=Math.max(g.length,3*U);n<s;n++)g[n]=0;n=3*j;for(s=Math.max(y.length,3*U);n<s;n++)y[n]=0;n=3*F;for(s=Math.max(b.length,3*z);n<s;n++)b[n]=0;n=3*F;for(s=Math.max(w.length,3*z);n<s;n++)w[n]=0;n=F;for(s=Math.max(S.length,z);n<s;n++)S[n]=0;n=3*I;for(s=Math.max(N.length,3*X);n<s;n++)N[n]=0;n=3*I;for(s=Math.max(C.length,3*X);n<s;n++)C[n]=0;n=3*I;for(s=Math.max(A.length,3*X);n<s;n++)A[n]=0;n=I;for(s=Math.max(O.length,X);n<s;n++)O[n]=0;n=I;for(s=Math.max(D.length,X);n<s;n++)D[n]=0;n=I;for(s=Math.max(k.length,X);n<s;n++)k[n]=0;n=3*q;for(s=Math.max(P.length,3*$);n<s;n++)P[n]=0;n=3*q;for(s=Math.max(H.length,3*$);n<s;n++)H[n]=0;n=3*q;for(s=Math.max(B.length,3*$);n<s;n++)B[n]=0;m.directional.length=j,m.point.length=F,m.spot.length=I,m.hemi.length=q,m.ambient[0]=l,m.ambient[1]=c,m.ambient[2]=h,wt=!1}n=Et,a.ambientLightColor.value=n.ambient,a.directionalLightColor.value=n.directional.colors,a.directionalLightDirection.value=n.directional.positions,a.pointLightColor.value=n.point.colors,a.pointLightPosition.value=n.point.positions,a.pointLightDistance.value=n.point.distances,a.spotLightColor.value=n.spot.colors,a.spotLightPosition.value=n.spot.positions,a.spotLightDistance.value=n.spot.distances,a.spotLightDirection.value=n.spot.directions,a.spotLightAngleCos.value=n.spot.anglesCos,a.spotLightExponent.value=n.spot.exponents,a.hemisphereLightSkyColor.value=n.hemi.skyColors,a.hemisphereLightGroundColor.value=n.hemi.groundColors,a.hemisphereLightDirection.value=n.hemi.positions}if(r instanceof THREE.MeshBasicMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshPhongMaterial){a.opacity.value=r.opacity,R.gammaInput?a.diffuse.value.copyGammaToLinear(r.color):a.diffuse.value=r.color,a.map.value=r.map,a.lightMap.value=r.lightMap,a.specularMap.value=r.specularMap,r.bumpMap&&(a.bumpMap.value=r.bumpMap,a.bumpScale.value=r.bumpScale),r.normalMap&&(a.normalMap.value=r.normalMap,a.normalScale.value.copy(r.normalScale));var G;r.map?G=r.map:r.specularMap?G=r.specularMap:r.normalMap?G=r.normalMap:r.bumpMap&&(G=r.bumpMap),void 0!==G&&(n=G.offset,G=G.repeat,a.offsetRepeat.value.set(n.x,n.y,G.x,G.y)),a.envMap.value=r.envMap,a.flipEnvMap.value=r.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,a.reflectivity.value=r.reflectivity,a.refractionRatio.value=r.refractionRatio,a.combine.value=r.combine,a.useRefract.value=r.envMap&&r.envMap.mapping instanceof THREE.CubeRefractionMapping}r instanceof THREE.LineBasicMaterial?(a.diffuse.value=r.color,a.opacity.value=r.opacity):r instanceof THREE.LineDashedMaterial?(a.diffuse.value=r.color,a.opacity.value=r.opacity,a.dashSize.value=r.dashSize,a.totalSize.value=r.dashSize+r.gapSize,a.scale.value=r.scale):r instanceof THREE.ParticleBasicMaterial?(a.psColor.value=r.color,a.opacity.value=r.opacity,a.size.value=r.size,a.scale.value=_.height/2,a.map.value=r.map):r instanceof THREE.MeshPhongMaterial?(a.shininess.value=r.shininess,R.gammaInput?(a.ambient.value.copyGammaToLinear(r.ambient),a.emissive.value.copyGammaToLinear(r.emissive),a.specular.value.copyGammaToLinear(r.specular)):(a.ambient.value=r.ambient,a.emissive.value=r.emissive,a.specular.value=r.specular),r.wrapAround&&a.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshLambertMaterial?(R.gammaInput?(a.ambient.value.copyGammaToLinear(r.ambient),a.emissive.value.copyGammaToLinear(r.emissive)):(a.ambient.value=r.ambient,a.emissive.value=r.emissive),r.wrapAround&&a.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshDepthMaterial?(a.mNear.value=e.near,a.mFar.value=e.far,a.opacity.value=r.opacity):r instanceof THREE.MeshNormalMaterial&&(a.opacity.value=r.opacity);if(i.receiveShadow&&!r._shadowPass&&a.shadowMatrix){n=G=0;for(s=t.length;n<s;n++)if(f=t[n],f.castShadow&&(f instanceof THREE.SpotLight||f instanceof THREE.DirectionalLight&&!f.shadowCascade))a.shadowMap.value[G]=f.shadowMap,a.shadowMapSize.value[G]=f.shadowMapSize,a.shadowMatrix.value[G]=f.shadowMatrix,a.shadowDarkness.value[G]=f.shadowDarkness,a.shadowBias.value[G]=f.shadowBias,G++}t=r.uniformsList,a=0;for(G=t.length;a<G;a++)if(s=o.uniforms[t[a][1]])if(n=t[a][0],l=n.type,f=n.value,"i"===l)St.uniform1i(s,f);else if("f"===l)St.uniform1f(s,f);else if("v2"===l)St.uniform2f(s,f.x,f.y);else if("v3"===l)St.uniform3f(s,f.x,f.y,f.z);else if("v4"===l)St.uniform4f(s,f.x,f.y,f.z,f.w);else if("c"===l)St.uniform3f(s,f.r,f.g,f.b);else if("iv1"===l)St.uniform1iv(s,f);else if("iv"===l)St.uniform3iv(s,f);else if("fv1"===l)St.uniform1fv(s,f);else if("fv"===l)St.uniform3fv(s,f);else if("v2v"===l){void 0===n._array&&(n._array=new Float32Array(2*f.length)),l=0;for(c=f.length;l<c;l++)h=2*l,n._array[h]=f[l].x,n._array[h+1]=f[l].y;St.uniform2fv(s,n._array)}else if("v3v"===l){void 0===n._array&&(n._array=new Float32Array(3*f.length)),l=0;for(c=f.length;l<c;l++)h=3*l,n._array[h]=f[l].x,n._array[h+1]=f[l].y,n._array[h+2]=f[l].z;St.uniform3fv(s,n._array)}else if("v4v"===l){void 0===n._array&&(n._array=new Float32Array(4*f.length)),l=0;for(c=f.length;l<c;l++)h=4*l,n._array[h]=f[l].x,n._array[h+1]=f[l].y,n._array[h+2]=f[l].z,n._array[h+3]=f[l].w;St.uniform4fv(s,n._array)}else if("m4"===l)void 0===n._array&&(n._array=new Float32Array(16)),f.flattenToArray(n._array),St.uniformMatrix4fv(s,!1,n._array);else if("m4v"===l){void 0===n._array&&(n._array=new Float32Array(16*f.length)),l=0;for(c=f.length;l<c;l++)f[l].flattenToArrayOffset(n._array,16*l);St.uniformMatrix4fv(s,!1,n._array)}else if("t"===l){if(h=f,f=E(),St.uniform1i(s,f
),h)if(h.image instanceof Array&&6===h.image.length){if(n=h,s=f,6===n.image.length)if(n.needsUpdate){n.image.__webglTextureCube||(n.image.__webglTextureCube=St.createTexture()),St.activeTexture(St.TEXTURE0+s),St.bindTexture(St.TEXTURE_CUBE_MAP,n.image.__webglTextureCube),St.pixelStorei(St.UNPACK_FLIP_Y_WEBGL,n.flipY),s=n instanceof THREE.CompressedTexture,f=[];for(l=0;6>l;l++)R.autoScaleCubemaps&&!s?(c=f,h=l,m=n.image[l],y=kt,m.width<=y&&m.height<=y||(b=Math.max(m.width,m.height),g=Math.floor(m.width*y/b),y=Math.floor(m.height*y/b),b=document.createElement("canvas"),b.width=g,b.height=y,b.getContext("2d").drawImage(m,0,0,m.width,m.height,0,0,g,y),m=b),c[h]=m):f[l]=n.image[l];l=f[0],c=0===(l.width&l.width-1)&&0===(l.height&l.height-1),h=M(n.format),m=M(n.type),L(St.TEXTURE_CUBE_MAP,n,c);for(l=0;6>l;l++)if(s){y=f[l].mipmaps,b=0;for(w=y.length;b<w;b++)g=y[b],St.compressedTexImage2D(St.TEXTURE_CUBE_MAP_POSITIVE_X+l,b,h,g.width,g.height,0,g.data)}else St.texImage2D(St.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,h,h,m,f[l]);n.generateMipmaps&&c&&St.generateMipmap(St.TEXTURE_CUBE_MAP),n.needsUpdate=!1,n.onUpdate&&n.onUpdate()}else St.activeTexture(St.TEXTURE0+s),St.bindTexture(St.TEXTURE_CUBE_MAP,n.image.__webglTextureCube)}else h instanceof THREE.WebGLRenderTargetCube?(n=h,St.activeTexture(St.TEXTURE0+f),St.bindTexture(St.TEXTURE_CUBE_MAP,n.__webglTexture)):R.setTexture(h,f)}else if("tv"===l){void 0===n._array&&(n._array=[]),l=0;for(c=n.value.length;l<c;l++)n._array[l]=E();St.uniform1iv(s,n._array),l=0;for(c=n.value.length;l<c;l++)h=n.value[l],f=n._array[l],h&&R.setTexture(h,f)}(r instanceof THREE.ShaderMaterial||r instanceof THREE.MeshPhongMaterial||r.envMap)&&null!==u.cameraPosition&&(t=e.matrixWorld.getPosition(),St.uniform3f(u.cameraPosition,t.x,t.y,t.z)),(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.ShaderMaterial||r.skinning)&&null!==u.viewMatrix&&St.uniformMatrix4fv(u.viewMatrix,!1,e._viewMatrixArray)}return St.uniformMatrix4fv(u.modelViewMatrix,!1,i._modelViewMatrix.elements),u.normalMatrix&&St.uniformMatrix3fv(u.normalMatrix,!1,i._normalMatrix.elements),null!==u.modelMatrix&&St.uniformMatrix4fv(u.modelMatrix,!1,i.matrixWorld.elements),o}function E(){var e=Q;return e>=Ct&&console.warn("Trying to use "+e+" texture units while this GPU supports only "+Ct),Q+=1,e}function S(e,t){e._modelViewMatrix.multiply(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getInverse(e._modelViewMatrix),e._normalMatrix.transpose()}function x(e,t,n,r){e[t]=n.r*n.r*r,e[t+1]=n.g*n.g*r,e[t+2]=n.b*n.b*r}function T(e,t,n,r){e[t]=n.r*r,e[t+1]=n.g*r,e[t+2]=n.b*r}function N(e,t,n){st!==e&&(e?St.enable(St.POLYGON_OFFSET_FILL):St.disable(St.POLYGON_OFFSET_FILL),st=e),e&&(ot!==t||ut!==n)&&(St.polygonOffset(t,n),ot=t,ut=n)}function C(e){for(var e=e.split("\n"),t=0,n=e.length;t<n;t++)e[t]=t+1+": "+e[t];return e.join("\n")}function k(e,t){var n;return"fragment"===e?n=St.createShader(St.FRAGMENT_SHADER):"vertex"===e&&(n=St.createShader(St.VERTEX_SHADER)),St.shaderSource(n,t),St.compileShader(n),St.getShaderParameter(n,St.COMPILE_STATUS)?n:(console.error(St.getShaderInfoLog(n)),console.error(C(t)),null)}function L(e,t,n){n?(St.texParameteri(e,St.TEXTURE_WRAP_S,M(t.wrapS)),St.texParameteri(e,St.TEXTURE_WRAP_T,M(t.wrapT)),St.texParameteri(e,St.TEXTURE_MAG_FILTER,M(t.magFilter)),St.texParameteri(e,St.TEXTURE_MIN_FILTER,M(t.minFilter))):(St.texParameteri(e,St.TEXTURE_WRAP_S,St.CLAMP_TO_EDGE),St.texParameteri(e,St.TEXTURE_WRAP_T,St.CLAMP_TO_EDGE),St.texParameteri(e,St.TEXTURE_MAG_FILTER,O(t.magFilter)),St.texParameteri(e,St.TEXTURE_MIN_FILTER,O(t.minFilter))),xt&&t.type!==THREE.FloatType&&(1<t.anisotropy||t.__oldAnisotropy)&&(St.texParameterf(e,xt.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,Lt)),t.__oldAnisotropy=t.anisotropy)}function A(e,t){St.bindRenderbuffer(St.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(St.renderbufferStorage(St.RENDERBUFFER,St.DEPTH_COMPONENT16,t.width,t.height),St.framebufferRenderbuffer(St.FRAMEBUFFER,St.DEPTH_ATTACHMENT,St.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(St.renderbufferStorage(St.RENDERBUFFER,St.DEPTH_STENCIL,t.width,t.height),St.framebufferRenderbuffer(St.FRAMEBUFFER,St.DEPTH_STENCIL_ATTACHMENT,St.RENDERBUFFER,e)):St.renderbufferStorage(St.RENDERBUFFER,St.RGBA4,t.width,t.height)}function O(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?St.NEAREST:St.LINEAR}function M(e){if(e===THREE.RepeatWrapping)return St.REPEAT;if(e===THREE.ClampToEdgeWrapping)return St.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return St.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return St.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return St.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return St.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return St.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return St.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return St.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return St.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return St.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return St.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return St.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return St.BYTE;if(e===THREE.ShortType)return St.SHORT;if(e===THREE.UnsignedShortType)return St.UNSIGNED_SHORT;if(e===THREE.IntType)return St.INT;if(e===THREE.UnsignedIntType)return St.UNSIGNED_INT;if(e===THREE.FloatType)return St.FLOAT;if(e===THREE.AlphaFormat)return St.ALPHA;if(e===THREE.RGBFormat)return St.RGB;if(e===THREE.RGBAFormat)return St.RGBA;if(e===THREE.LuminanceFormat)return St.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return St.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return St.FUNC_ADD;if(e===THREE.SubtractEquation)return St.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return St.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return St.ZERO;if(e===THREE.OneFactor)return St.ONE;if(e===THREE.SrcColorFactor)return St.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return St.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return St.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return St.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return St.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return St.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return St.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return St.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return St.SRC_ALPHA_SATURATE;if(void 0!==Tt){if(e===THREE.RGB_S3TC_DXT1_Format)return Tt.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return Tt.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return Tt.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return Tt.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var e=e||{},_=void 0!==e.canvas?e.canvas:document.createElement("canvas"),D=void 0!==e.precision?e.precision:"highp",P=void 0!==e.alpha?e.alpha:!0,H=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,B=void 0!==e.antialias?e.antialias:!1,j=void 0!==e.stencil?e.stencil:!0,F=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,I=void 0!==e.clearColor?new THREE.Color(e.clearColor):new THREE.Color(0),q=void 0!==e.clearAlpha?e.clearAlpha:0;this.domElement=_,this.context=null,this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1,this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=!0,this.shadowMapCascade=this.shadowMapDebug=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var R=this,U=[],z=0,W=null,X=null,V=-1,$=null,J=null,K=0,Q=0,G=-1,Y=-1,Z=-1,et=-1,tt=-1,nt=-1,rt=-1,it=-1,st=null,ot=null,ut=null,at=null,ft=0,lt=0,ct=0,ht=0,pt=0,dt=0,vt=new THREE.Frustum,mt=new THREE.Matrix4,gt=new THREE.Matrix4,yt=new THREE.Vector4,bt=new THREE.Vector3,wt=!0,Et={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},St,xt,Tt;try{if(!(St=_.getContext("experimental-webgl",{alpha:P,premultipliedAlpha:H,antialias:B,stencil:j,preserveDrawingBuffer:F})))throw"Error creating WebGL context."}catch(Nt){console.error(Nt)}e=St.getExtension("OES_texture_float"),P=St.getExtension("OES_standard_derivatives"),xt=St.getExtension("EXT_texture_filter_anisotropic")||St.getExtension("MOZ_EXT_texture_filter_anisotropic")||St.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),Tt=St.getExtension("WEBGL_compressed_texture_s3tc")||St.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||St.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),e||console.log("THREE.WebGLRenderer: Float textures not supported."),P||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),xt||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),Tt||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),St.clearColor(0,0,0,1),St.clearDepth(1),St.clearStencil(0),St.enable(St.DEPTH_TEST),St.depthFunc(St.LEQUAL),St.frontFace(St.CCW),St.cullFace(St.BACK),St.enable(St.CULL_FACE),St.enable(St.BLEND),St.blendEquation(St.FUNC_ADD),St.blendFunc(St.SRC_ALPHA,St.ONE_MINUS_SRC_ALPHA),St.clearColor(I.r,I.g,I.b,q),this.context=St;var Ct=St.getParameter(St.MAX_TEXTURE_IMAGE_UNITS),P=St.getParameter(St.MAX_VERTEX_TEXTURE_IMAGE_UNITS);St.getParameter(St.MAX_TEXTURE_SIZE);var kt=St.getParameter(St.MAX_CUBE_MAP_TEXTURE_SIZE),Lt=xt?St.getParameter(xt.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,At=0<P,Ot=At&&e;Tt&&St.getParameter(St.COMPRESSED_TEXTURE_FORMATS),this.getContext=function(){return St},this.supportsVertexTextures=function(){return At},this.getMaxAnisotropy=function(){return Lt},this.setSize=function(e,t){_.width=e,_.height=t,this.setViewport(0,0,_.width,_.height)},this.setViewport=function(e,t,n,r){ft=void 0!==e?e:0,lt=void 0!==t?t:0,ct=void 0!==n?n:_.width,ht=void 0!==r?r:_.height,St.viewport(ft,lt,ct,ht)},this.setScissor=function(e,t,n,r){St.scissor(e,t,n,r)},this.enableScissorTest=function(e){e?St.enable(St.SCISSOR_TEST):St.disable(St.SCISSOR_TEST)},this.setClearColorHex=function(e,t){I.setHex(e),q=t,St.clearColor(I.r,I.g,I.b,q)},this.setClearColor=function(e,t){I.copy(e),q=t,St.clearColor(I.r,I.g,I.b,q)},this.getClearColor=function(){return I},this.getClearAlpha=function(){return q},this.clear=function(e,t,n){var r=0;if(void 0===e||e)r|=St.COLOR_BUFFER_BIT;if(void 0===t||t)r|=St.DEPTH_BUFFER_BIT;if(void 0===n||n)r|=St.STENCIL_BUFFER_BIT;St.clear(r)},this.clearTarget=function(e,t,n,r){this.setRenderTarget(e),this.clear(t,n,r)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.deallocateObject=function(e){if(e.__webglInit)if(e.__webglInit=!1,delete e._modelViewMatrix,delete e._normalMatrix,delete e._normalMatrixArray,delete e._modelViewMatrixArray,delete e._modelMatrixArray,e instanceof THREE.Mesh)for(var n in e.geometry.geometryGroups){var r=e.geometry.geometryGroups[n];St.deleteBuffer(r.__webglVertexBuffer),St.deleteBuffer(r.__webglNormalBuffer),St.deleteBuffer(r.__webglTangentBuffer),St.deleteBuffer(r.__webglColorBuffer),St.deleteBuffer(r.__webglUVBuffer),St.deleteBuffer(r.__webglUV2Buffer),St.deleteBuffer(r.__webglSkinIndicesBuffer),St.deleteBuffer(r.__webglSkinWeightsBuffer),St.deleteBuffer(r.__webglFaceBuffer),St.deleteBuffer(r.__webglLineBuffer);var i=void 0,s=void 0;if(r.numMorphTargets){i=0;for(s=r.numMorphTargets;i<s;i++)St.deleteBuffer(r.__webglMorphTargetsBuffers[i])}if(r.numMorphNormals){i=0;for(s=r.numMorphNormals;i<s;i++)St.deleteBuffer(r.__webglMorphNormalsBuffers[i])}t(r),R.info.memory.geometries--}else e instanceof THREE.Ribbon?(e=e.geometry,St.deleteBuffer(e.__webglVertexBuffer),St.deleteBuffer(e.__webglColorBuffer),St.deleteBuffer(e.__webglNormalBuffer),t(e),R.info.memory.geometries--):e instanceof THREE.Line?(e=e.geometry,St.deleteBuffer(e.__webglVertexBuffer),St.deleteBuffer(e.__webglColorBuffer),St.deleteBuffer(e.__webglLineDistanceBuffer),t(e),R.info.memory.geometries--):e instanceof THREE.ParticleSystem&&(e=e.geometry,St.deleteBuffer(e.__webglVertexBuffer),St.deleteBuffer(e.__webglColorBuffer),t(e),R.info.memory.geometries--)},this.deallocateTexture=function(e){e.__webglInit&&(e.__webglInit=!1,St.deleteTexture(e.__webglTexture),R.info.memory.textures--)},this.deallocateRenderTarget=function(e){if(e&&e.__webglTexture)if(St.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;6>t;t++)St.deleteFramebuffer(e.__webglFramebuffer[t]),St.deleteRenderbuffer(e.__webglRenderbuffer[t]);else St.deleteFramebuffer(e.__webglFramebuffer),St.deleteRenderbuffer(e.__webglRenderbuffer)},this.deallocateMaterial=function(e){var t=e.program;if(t){e.program=void 0;var n,r,i=!1,e=0;for(n=U.length;e<n;e++)if(r=U[e],r.program===t){r.usedTimes--,0===r.usedTimes&&(i=!0);break}if(i){i=[],e=0;for(n=U.length;e<n;e++)r=U[e],r.program!==t&&i.push(r);U=i,St.deleteProgram(t),R.info.memory.programs--}}},this.updateShadowMap=function(e,t){W=null,V=$=it=rt=Z=-1,wt=!0,Y=G=-1,this.shadowMapPlugin.update(e,t)},this.renderBufferImmediate=function(e,t,n){e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=St.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=St.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=St.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=St.createBuffer()),e.hasPositions&&(St.bindBuffer(St.ARRAY_BUFFER,e.__webglVertexBuffer),St.bufferData(St.ARRAY_BUFFER,e.positionArray,St.DYNAMIC_DRAW),St.enableVertexAttribArray(t.attributes.position),St.vertexAttribPointer(t.attributes.position,3,St.FLOAT,!1,0,0));if(e.hasNormals){St.bindBuffer(St.ARRAY_BUFFER,e.__webglNormalBuffer);if(n.shading===THREE.FlatShading){var r,i,s,o,u,a,f,l,c,h,p,d=3*e.count;for(p=0;p<d;p+=9)h=e.normalArray,r=h[p],i=h[p+1],s=h[p+2],o=h[p+3],a=h[p+4],l=h[p+5],u=h[p+6],f=h[p+7],c=h[p+8],r=(r+o+u)/3,i=(i+a+f)/3,s=(s+l+c)/3,h[p]=r,h[p+1]=i,h[p+2]=s,h[p+3]=r,h[p+4]=i,h[p+5]=s,h[p+6]=r,h[p+7]=i,h[p+8]=s}St.bufferData(St.ARRAY_BUFFER,e.normalArray,St.DYNAMIC_DRAW),St.enableVertexAttribArray(t.attributes.normal),St.vertexAttribPointer(t.attributes.normal,3,St.FLOAT,!1,0,0)}e.hasUvs&&n.map&&(St.bindBuffer(St.ARRAY_BUFFER,e.__webglUvBuffer),St.bufferData(St.ARRAY_BUFFER,e.uvArray,St.DYNAMIC_DRAW),St.enableVertexAttribArray(t.attributes.uv),St.vertexAttribPointer(t.attributes.uv,2,St.FLOAT,!1,0,0)),e.hasColors&&n.vertexColors!==THREE.NoColors&&(St.bindBuffer(St.ARRAY_BUFFER,e.__webglColorBuffer),St.bufferData(St.ARRAY_BUFFER,e.colorArray,St.DYNAMIC_DRAW),St.enableVertexAttribArray(t.attributes.color),St.vertexAttribPointer(t.attributes.color,3,St.FLOAT,!1,0,0)),St.drawArrays(St.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,n,r,i,s){if(!1!==r.visible)if(n=w(e,t,n,r,s),e=n.attributes,t=!1,r=16777215*i.id+2*n.id+(r.wireframe?1:0),r!==$&&($=r,t=!0),s instanceof THREE.Mesh){s=i.offsets,1<s.length&&(t=!0),r=0;for(n=s.length;r<n;++r){var o=s[r].index;if(t){var u=i.attributes.position,a=u.itemSize;St.bindBuffer(St.ARRAY_BUFFER,u.buffer),St.vertexAttribPointer(e.position,a,St.FLOAT,!1,0,4*o*a),u=i.attributes.normal,0<=e.normal&&u&&(a=u.itemSize,St.bindBuffer(St.ARRAY_BUFFER,u.buffer),St.vertexAttribPointer(e.normal,a,St.FLOAT,!1,0,4*o*a)),u=i.attributes.uv,0<=e.uv&&u&&(u.buffer?(a=u.itemSize,St.bindBuffer(St.ARRAY_BUFFER,u.buffer),St.vertexAttribPointer(e.uv,a,St.FLOAT,!1,0,4*o*a),St.enableVertexAttribArray(e.uv)):St.disableVertexAttribArray(e.uv)),a=i.attributes.color;if(0<=e.color&&a){var f=a.itemSize;St.bindBuffer(St.ARRAY_BUFFER,a.buffer),St.vertexAttribPointer(e.color,f,St.FLOAT,!1,0,4*o*f)}u=i.attributes.tangent,0<=e.tangent&&u&&(a=u.itemSize,St.bindBuffer(St.ARRAY_BUFFER,u.buffer),St.vertexAttribPointer(e.tangent,a,St.FLOAT,!1,0,4*o*a)),St.bindBuffer(St.ELEMENT_ARRAY_BUFFER,i.attributes.index.buffer)}St.drawElements(St.TRIANGLES,s[r].count,St.UNSIGNED_SHORT,2*s[r].start),R.info.render.calls++,R.info.render.vertices+=s[r].count,R.info.render.faces+=s[r].count/3}}else s instanceof THREE.ParticleSystem&&t&&(u=i.attributes.position,a=u.itemSize,St.bindBuffer(St.ARRAY_BUFFER,u.buffer),St.vertexAttribPointer(e.position,a,St.FLOAT,!1,0,0),a=i.attributes.color,0<=e.color&&a&&(f=a.itemSize,St.bindBuffer(St.ARRAY_BUFFER,a.buffer),St.vertexAttribPointer(e.color,f,St.FLOAT,!1,0,0)),St.drawArrays(St.POINTS,0,u.numItems/3),R.info.render.calls++,R.info.render.points+=u.numItems/3)},this.renderBuffer=function(e,t,n,r,i,s){if(!1!==r.visible){var o,u,n=w(e,t,n,r,s),t=n.attributes,e=!1,n=16777215*i.id+2*n.id+(r.wireframe?1:0);n!==$&&($=n,e=!0);if(!r.morphTargets&&0<=t.position)e&&(St.bindBuffer(St.ARRAY_BUFFER,i.__webglVertexBuffer),St.vertexAttribPointer(t.position,3,St.FLOAT,!1,0,0));else if(s.morphTargetBase){n=r.program.attributes,-1!==s.morphTargetBase?(St.bindBuffer(St.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[s.morphTargetBase]),St.vertexAttribPointer(n.position,3,St.FLOAT,!1,0,0)):0<=n.position&&(St.bindBuffer(St.ARRAY_BUFFER,i.__webglVertexBuffer),St.vertexAttribPointer(n.position,3,St.FLOAT,!1,0,0));if(s.morphTargetForcedOrder.length){var a=0;u=s.morphTargetForcedOrder;for(o=s.morphTargetInfluences;a<r.numSupportedMorphTargets&&a<u.length;)St.bindBuffer(St.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[u[a]]),St.vertexAttribPointer(n["morphTarget"+a],3,St.FLOAT,!1,0,0),r.morphNormals&&(St.bindBuffer(St.ARRAY_BUFFER,i.__webglMorphNormalsBuffers[u[a]]),St.vertexAttribPointer(n["morphNormal"+a],3,St.FLOAT,!1,0,0)),s.__webglMorphTargetInfluences[a]=o[u[a]],a++}else{u=[],o=s.morphTargetInfluences;var f,l=o.length;for(f=0;f<l;f++)a=o[f],0<a&&u.push([f,a]);u.length>r.numSupportedMorphTargets?(u.sort(c),u.length=r.numSupportedMorphTargets):u.length>r.numSupportedMorphNormals?u.sort(c):0===u.length&&u.push([0,0]);for(a=0;a<r.numSupportedMorphTargets;)u[a]?(f=u[a][0],St.bindBuffer(St.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[f]),St.vertexAttribPointer(n["morphTarget"+a],3,St.FLOAT,!1,0,0),r.morphNormals&&(St.bindBuffer(St.ARRAY_BUFFER,i.__webglMorphNormalsBuffers[f]),St.vertexAttribPointer(n["morphNormal"+a],3,St.FLOAT,!1,0,0)),s.__webglMorphTargetInfluences[a]=o[f]):(St.vertexAttribPointer(n["morphTarget"+a],3,St.FLOAT,!1,0,0),r.morphNormals&&St.vertexAttribPointer(n["morphNormal"+a],3,St.FLOAT,!1,0,0),s.__webglMorphTargetInfluences[a]=0),a++}null!==r.program.uniforms.morphTargetInfluences&&St.uniform1fv(r.program.uniforms.morphTargetInfluences,s.__webglMorphTargetInfluences)}if(e){if(i.__webglCustomAttributesList){o=0;for(u=i.__webglCustomAttributesList.length;o<u;o++)n=i.__webglCustomAttributesList[o],0<=t[n.buffer.belongsToAttribute]&&(St.bindBuffer(St.ARRAY_BUFFER,n.buffer),St.vertexAttribPointer(t[n.buffer.belongsToAttribute],n.size,St.FLOAT,!1,0,0))}0<=t.color&&(St.bindBuffer(St.ARRAY_BUFFER,i.__webglColorBuffer),St.vertexAttribPointer(t.color,3,St.FLOAT,!1,0,0)),0<=t.normal&&(St.bindBuffer(St.ARRAY_BUFFER,i.__webglNormalBuffer),St.vertexAttribPointer(t.normal,3,St.FLOAT,!1,0,0)),0<=t.tangent&&(St.bindBuffer(St.ARRAY_BUFFER,i.__webglTangentBuffer),St.vertexAttribPointer(t.tangent,4,St.FLOAT,!1,0,0)),0<=t.uv&&(i.__webglUVBuffer?(St.bindBuffer(St.ARRAY_BUFFER,i.__webglUVBuffer),St.vertexAttribPointer(t.uv,2,St.FLOAT,!1,0,0),St.enableVertexAttribArray(t.uv)):St.disableVertexAttribArray(t.uv)),0<=t.uv2&&(i.__webglUV2Buffer?(St.bindBuffer(St.ARRAY_BUFFER,i.__webglUV2Buffer),St.vertexAttribPointer(t.uv2,2,St.FLOAT,!1,0,0),St.enableVertexAttribArray(t.uv2)):St.disableVertexAttribArray(t.uv2)),r.skinning&&0<=t.skinIndex&&0<=t.skinWeight&&(St.bindBuffer(St.ARRAY_BUFFER,i.__webglSkinIndicesBuffer),St.vertexAttribPointer(t.skinIndex,4,St.FLOAT,!1,0,0),St.bindBuffer(St.ARRAY_BUFFER,i.__webglSkinWeightsBuffer),St.vertexAttribPointer(t.skinWeight,4,St.FLOAT,!1,0,0)),0<=t.lineDistance&&(St.bindBuffer(St.ARRAY_BUFFER,i.__webglLineDistanceBuffer),St.vertexAttribPointer(t.lineDistance,1,St.FLOAT,!1,0,0))}s instanceof THREE.Mesh?(r.wireframe?(r=r.wireframeLinewidth,r!==at&&(St.lineWidth(r),at=r),e&&St.bindBuffer(St.ELEMENT_ARRAY_BUFFER,i.__webglLineBuffer),St.drawElements(St.LINES,i.__webglLineCount,St.UNSIGNED_SHORT,0)):(e&&St.bindBuffer(St.ELEMENT_ARRAY_BUFFER,i.__webglFaceBuffer),St.drawElements(St.TRIANGLES,i.__webglFaceCount,St.UNSIGNED_SHORT,0)),R.info.render.calls++,R.info.render.vertices+=i.__webglFaceCount,R.info.render.faces+=i.__webglFaceCount/3):s instanceof THREE.Line?(s=s.type===THREE.LineStrip?St.LINE_STRIP:St.LINES,r=r.linewidth,r!==at&&(St.lineWidth(r),at=r),St.drawArrays(s,0,i.__webglLineCount),R.info.render.calls++):s instanceof THREE.ParticleSystem?(St.drawArrays(St.POINTS,0,i.__webglParticleCount),R.info.render.calls++,R.info.render.points+=i.__webglParticleCount):s instanceof THREE.Ribbon&&(St.drawArrays(St.TRIANGLE_STRIP,0,i.__webglVertexCount),R.info.render.calls++)}},this.render=function(e,t,n,r){if(0==t instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var i,s,o,u,a=e.__lights,f=e.fog;V=-1,wt=!0,this.autoUpdateScene&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),t._viewMatrixArray||(t._viewMatrixArray=new Float32Array(16)),t._projectionMatrixArray||(t._projectionMatrixArray=new Float32Array(16)),t.matrixWorldInverse.getInverse(t.matrixWorld),t.matrixWorldInverse.flattenToArray(t._viewMatrixArray),t.projectionMatrix.flattenToArray(t._projectionMatrixArray),mt.multiply(t.projectionMatrix,t.matrixWorldInverse),vt.setFromMatrix(mt),this.autoUpdateObjects&&this.initWebGLObjects(e),h(this.renderPluginsPre,e,t),R.info.render.calls=0,R.info.render.vertices=0,R.info.render.faces=0,R.info.render.points=0,this.setRenderTarget(n),(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),u=e.__webglObjects,r=0;for(i=u.length;r<i;r++)if(s=u[r],o=s.object,s.render=!1,o.visible&&(!(o instanceof THREE.Mesh||o instanceof THREE.ParticleSystem)||!o.frustumCulled||vt.contains(o))){S(o,t);var c=s,v=c.buffer,m=void 0,g=m=void 0,g=c.object.material;if(g instanceof THREE.MeshFaceMaterial)m=v.materialIndex,0<=m&&(m=g.materials[m],m.transparent?(c.transparent=m,c.opaque=null):(c.opaque=m,c.transparent=null));else if(m=g)m.transparent?(c.transparent=m,c.opaque=null):(c.opaque=m,c.transparent=null);s.render=!0,!0===this.sortObjects&&(null!==o.renderDepth?s.z=o.renderDepth:(yt.copy(o.matrixWorld.getPosition()),mt.multiplyVector3(yt),s.z=yt.z),s.id=o.id)}this.sortObjects&&u.sort(l),u=e.__webglObjectsImmediate,r=0;for(i=u.length;r<i;r++)s=u[r],o=s.object,o.visible&&(S(o,t),o=s.object.material,o.transparent?(s.transparent=o,s.opaque=null):(s.opaque=o,s.transparent=null));e.overrideMaterial?(r=e.overrideMaterial,this.setBlending(r.blending,r.blendEquation,r.blendSrc,r.blendDst),this.setDepthTest(r.depthTest),this.setDepthWrite(r.depthWrite),N(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits),p(e.__webglObjects,!1,"",t,a,f,!0,r),d(e.__webglObjectsImmediate,"",t,a,f,!1,r)):(this.setBlending(THREE.NormalBlending),p(e.__webglObjects,!0,"opaque",t,a,f,!1),d(e.__webglObjectsImmediate,"opaque",t,a,f,!1),p(e.__webglObjects,!1,"transparent",t,a,f,!0),d(e.__webglObjectsImmediate,"transparent",t,a,f,!0)),h(this.renderPluginsPost,e,t),n&&n.generateMipmaps&&n.minFilter!==THREE.NearestFilter&&n.minFilter!==THREE.LinearFilter&&(n instanceof THREE.WebGLRenderTargetCube?(St.bindTexture(St.TEXTURE_CUBE_MAP,n.__webglTexture),St.generateMipmap(St.TEXTURE_CUBE_MAP),St.bindTexture(St.TEXTURE_CUBE_MAP,null)):(St.bindTexture(St.TEXTURE_2D,n.__webglTexture),St.generateMipmap(St.TEXTURE_2D),St.bindTexture(St.TEXTURE_2D,null))),this.setDepthTest(!0),this.setDepthWrite(!0)}},this.renderImmediateObject=function(e,t,n,r,i){var s=w(e,t,n,r,i);$=-1,R.setMaterialFaces(r),i.immediateRenderCallback?i.immediateRenderCallback(s,St,vt):i.render(function(e){R.renderBufferImmediate(e,s,r)})},this.initWebGLObjects=function(e){e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);for(;e.__objectsAdded.length;){var t=e.__objectsAdded[0],l=e,c=void 0,h=void 0,p=void 0,d=void 0;if(!t.__webglInit)if(t.__webglInit=!0,t._modelViewMatrix=new THREE.Matrix4,t._normalMatrix=new THREE.Matrix3,t instanceof THREE.Mesh)if(h=t.geometry,p=t.material,h instanceof THREE.Geometry){if(void 0===h.geometryGroups){var w=h,E=void 0,S=void 0,x=void 0,T=void 0,N=void 0,C=void 0,k=void 0,L={},A=w.morphTargets.length,O=w.morphNormals.length,M=p instanceof THREE.MeshFaceMaterial;w.geometryGroups={},E=0;for(S=w.faces.length;E<S;E++)x=w.faces[E],T=M?x.materialIndex:void 0,C=void 0!==T?T:-1,void 0===L[C]&&(L[C]={hash:C,counter:0}),k=L[C].hash+"_"+L[C].counter,void 0===w.geometryGroups[k]&&(w.geometryGroups[k]={faces3:[],faces4:[],materialIndex:T,vertices:0,numMorphTargets:A,numMorphNormals:O}),N=x instanceof THREE.Face3?3:4,65535<w.geometryGroups[k].vertices+N&&(L[C].counter+=1,k=L[C].hash+"_"+L[C].counter,void 0===w.geometryGroups[k]&&(w.geometryGroups[k]={faces3:[],faces4:[],materialIndex:T,vertices:0,numMorphTargets:A,numMorphNormals:O})),x instanceof THREE.Face3?w.geometryGroups[k].faces3.push(E):w.geometryGroups[k].faces4.push(E),w.geometryGroups[k].vertices+=N;w.geometryGroupsList=[];var _=void 0;for(_ in w.geometryGroups)w.geometryGroups[_].id=K++,w.geometryGroupsList.push(w.geometryGroups[_])}for(c in h.geometryGroups)if(d=h.geometryGroups[c],!d.__webglVertexBuffer){var D=d;D.__webglVertexBuffer=St.createBuffer(),D.__webglNormalBuffer=St.createBuffer(),D.__webglTangentBuffer=St.createBuffer(),D.__webglColorBuffer=St.createBuffer(),D.__webglUVBuffer=St.createBuffer(),D.__webglUV2Buffer=St.createBuffer(),D.__webglSkinIndicesBuffer=St.createBuffer(),D.__webglSkinWeightsBuffer=St.createBuffer(),D.__webglFaceBuffer=St.createBuffer(),D.__webglLineBuffer=St.createBuffer();var P=void 0,H=void 0;if(D.numMorphTargets){D.__webglMorphTargetsBuffers=[],P=0;for(H=D.numMorphTargets;P<H;P++)D.__webglMorphTargetsBuffers.push(St.createBuffer())}if(D.numMorphNormals){D.__webglMorphNormalsBuffers=[],P=0;for(H=D.numMorphNormals;P<H;P++)D.__webglMorphNormalsBuffers.push(St.createBuffer())}R.info.memory.geometries++,r(d,t),h.verticesNeedUpdate=!0,h.morphTargetsNeedUpdate=!0,h.elementsNeedUpdate=!0,h.uvsNeedUpdate=!0,h.normalsNeedUpdate=!0,h.tangentsNeedUpdate=!0,h.colorsNeedUpdate=!0}}else h instanceof THREE.BufferGeometry&&u(h);else if(t instanceof THREE.Ribbon){if(h=t.geometry,!h.__webglVertexBuffer){var B=h;B.__webglVertexBuffer=St.createBuffer(),B.__webglColorBuffer=St.createBuffer(),B.__webglNormalBuffer=St.createBuffer(),R.info.memory.geometries++;var j=h,F=t,I=j.vertices.length;j.__vertexArray=new Float32Array(3*I),j.__colorArray=new Float32Array(3*I),j.__normalArray=new Float32Array(3*I),j.__webglVertexCount=I,n(j,F),h.verticesNeedUpdate=!0,h.colorsNeedUpdate=!0,h.normalsNeedUpdate=!0}}else if(t instanceof THREE.Line){if(h=t.geometry,!h.__webglVertexBuffer){var q=h;q.__webglVertexBuffer=St.createBuffer(),q.__webglColorBuffer=St.createBuffer(),q.__webglLineDistanceBuffer=St.createBuffer(),R.info.memory.geometries++;var U=h,z=t,W=U.vertices.length;U.__vertexArray=new Float32Array(3*W),U.__colorArray=new Float32Array(3*W),U.__lineDistanceArray=new Float32Array(1*W),U.__webglLineCount=W,n(U,z),h.verticesNeedUpdate=!0,h.colorsNeedUpdate=!0,h.lineDistancesNeedUpdate=!0}}else if(t instanceof THREE.ParticleSystem&&(h=t.geometry,!h.__webglVertexBuffer))if(h instanceof THREE.Geometry){var X=h;X.__webglVertexBuffer=St.createBuffer(),X.__webglColorBuffer=St.createBuffer(),R.info.memory.geometries++;var V=h,$=t,J=V.vertices.length;V.__vertexArray=new Float32Array(3*J),V.__colorArray=new Float32Array(3*J),V.__sortArray=[],V.__webglParticleCount=J,n(V,$),h.verticesNeedUpdate=!0,h.colorsNeedUpdate=!0}else h instanceof THREE.BufferGeometry&&u(h);if(!t.__webglActive){if(t instanceof THREE.Mesh)if(h=t.geometry,h instanceof THREE.BufferGeometry)v(l.__webglObjects,h,t);else for(c in h.geometryGroups)d=h.geometryGroups[c],v(l.__webglObjects,d,t);else t instanceof THREE.Ribbon||t instanceof THREE.Line||t instanceof THREE.ParticleSystem?(h=t.geometry,v(l.__webglObjects,h,t)):t instanceof THREE.ImmediateRenderObject||t.immediateRenderCallback?l.__webglObjectsImmediate.push({object:t,opaque:null,transparent:null}):t instanceof THREE.Sprite?l.__webglSprites.push(t):t instanceof THREE.LensFlare&&l.__webglFlares.push(t);t.__webglActive=!0}e.__objectsAdded.splice(0,1)}for(;e.__objectsRemoved.length;){var Q=e.__objectsRemoved[0],G=e;Q instanceof THREE.Mesh||Q instanceof THREE.ParticleSystem||Q instanceof THREE.Ribbon||Q instanceof THREE.Line?y(G.__webglObjects,Q):Q instanceof THREE.Sprite?b(G.__webglSprites,Q):Q instanceof THREE.LensFlare?b(G.__webglFlares,Q):(Q instanceof THREE.ImmediateRenderObject||Q.immediateRenderCallback)&&y(G.__webglObjectsImmediate,Q),Q.__webglActive=!1,e.__objectsRemoved.splice(0,1)}for(var Y=0,Z=e.__webglObjects.length;Y<Z;Y++){var et=e.__webglObjects[Y].object,tt=et.geometry,nt=void 0,rt=void 0,it=void 0;if(et instanceof THREE.Mesh)if(tt instanceof THREE.BufferGeometry)(tt.verticesNeedUpdate||tt.elementsNeedUpdate||tt.uvsNeedUpdate||tt.normalsNeedUpdate||tt.colorsNeedUpdate||tt.tangentsNeedUpdate)&&f(tt,St.DYNAMIC_DRAW,!tt.dynamic),tt.verticesNeedUpdate=!1,tt.elementsNeedUpdate=!1,tt.uvsNeedUpdate=!1,tt.normalsNeedUpdate=!1,tt.colorsNeedUpdate=!1,tt.tangentsNeedUpdate=!1;else{for(var st=0,ot=tt.geometryGroupsList.length;st<ot;st++)if(nt=tt.geometryGroupsList[st],it=i(et,nt),tt.buffersNeedUpdate&&r(nt,et),rt=it.attributes&&m(it),tt.verticesNeedUpdate||tt.morphTargetsNeedUpdate||tt.elementsNeedUpdate||tt.uvsNeedUpdate||tt.normalsNeedUpdate||tt.colorsNeedUpdate||tt.tangentsNeedUpdate||rt){var ut=nt,at=et,ft=St.DYNAMIC_DRAW,lt=!tt.dynamic,ct=it;if(ut.__inittedArrays){var ht=s(ct),pt=ct.vertexColors?ct.vertexColors:!1,dt=o(ct),vt=ht===THREE.SmoothShading,mt=void 0,gt=void 0,yt=void 0,bt=void 0,wt=void 0,Et=void 0,xt=void 0,Tt=void 0,Nt=void 0,Ct=void 0,kt=void 0,Lt=void 0,At=void 0,Ot=void 0,Mt=void 0,_t=void 0,Dt=void 0,Pt=void 0,Ht=void 0,Bt=void 0,jt=void 0,Ft=void 0,It=void 0,qt=void 0,Rt=void 0,Ut=void 0,zt=void 0,Wt=void 0,Xt=void 0,Vt=void 0,$t=void 0,Jt=void 0,Kt=void 0,Qt=void 0,Gt=void 0,Yt=void 0,Zt=void 0,en=void 0,tn=void 0,nn=void 0,rn=void 0,sn=void 0,on=void 0,un=void 0,an=void 0,fn=void 0,ln=0,cn=0,hn=0,pn=0,dn=0,vn=0,mn=0,gn=0,yn=0,bn=0,wn=0,En=0,Sn=void 0,xn=ut.__vertexArray,Tn=ut.__uvArray,Nn=ut.__uv2Array,Cn=ut.__normalArray,kn=ut.__tangentArray,Ln=ut.__colorArray,An=ut.__skinIndexArray,On=ut.__skinWeightArray,Mn=ut.__morphTargetsArrays,_n=ut.__morphNormalsArrays,Dn=ut.__webglCustomAttributesList,Pn=void 0,Hn=ut.__faceArray,Bn=ut.__lineArray,jn=at.geometry,Fn=jn.elementsNeedUpdate,In=jn.uvsNeedUpdate,qn=jn.normalsNeedUpdate,Rn=jn.tangentsNeedUpdate,Un=jn.colorsNeedUpdate,zn=jn.morphTargetsNeedUpdate,Wn=jn.vertices,Xn=ut.faces3,Vn=ut.faces4,$n=jn.faces,Jn=jn.faceVertexUvs[0],Kn=jn.faceVertexUvs[1],Qn=jn.skinIndices,Gn=jn.skinWeights,Yn=jn.morphTargets,Zn=jn.morphNormals;if(jn.verticesNeedUpdate){mt=0;for(gt=Xn.length;mt<gt;mt++)bt=$n[Xn[mt]],Lt=Wn[bt.a],At=Wn[bt.b],Ot=Wn[bt.c],xn[cn]=Lt.x,xn[cn+1]=Lt.y,xn[cn+2]=Lt.z,xn[cn+3]=At.x,xn[cn+4]=At.y,xn[cn+5]=At.z,xn[cn+6]=Ot.x,xn[cn+7]=Ot.y,xn[cn+8]=Ot.z,cn+=9;mt=0;for(gt=Vn.length;mt<gt;mt++)bt=$n[Vn[mt]],Lt=Wn[bt.a],At=Wn[bt.b],Ot=Wn[bt.c],Mt=Wn[bt.d],xn[cn]=Lt.x,xn[cn+1]=Lt.y,xn[cn+2]=Lt.z,xn[cn+3]=At.x,xn[cn+4]=At.y,xn[cn+5]=At.z,xn[cn+6]=Ot.x,xn[cn+7]=Ot.y,xn[cn+8]=Ot.z,xn[cn+9]=Mt.x,xn[cn+10]=Mt.y,xn[cn+11]=Mt.z,cn+=12;St.bindBuffer(St.ARRAY_BUFFER,ut.__webglVertexBuffer),St.bufferData(St.ARRAY_BUFFER,xn,ft)}if(zn){rn=0;for(sn=Yn.length;rn<sn;rn++){mt=wn=0;for(gt=Xn.length;mt<gt;mt++)an=Xn[mt],bt=$n[an],Lt=Yn[rn].vertices[bt.a],At=Yn[rn].vertices[bt.b],Ot=Yn[rn].vertices[bt.c],on=Mn[rn],on[wn]=Lt.x,on[wn+1]=Lt.y,on[wn+2]=Lt.z,on[wn+3]=At.x,on[wn+4]=At.y,on[wn+5]=At.z,on[wn+6]=Ot.x,on[wn+7]=Ot.y,on[wn+8]=Ot.z,ct.morphNormals&&(vt?(fn=Zn[rn].vertexNormals[an],Bt=fn.a,jt=fn.b,Ft=fn.c):Ft=jt=Bt=Zn[rn].faceNormals[an],un=_n[rn],un[wn]=Bt.x,un[wn+1]=Bt.y,un[wn+2]=Bt.z,un[wn+3]=jt.x,un[wn+4]=jt.y,un[wn+5]=jt.z,un[wn+6]=Ft.x,un[wn+7]=Ft.y,un[wn+8]=Ft.z),wn+=9;mt=0;for(gt=Vn.length;mt<gt;mt++)an=Vn[mt],bt=$n[an],Lt=Yn[rn].vertices
[bt.a],At=Yn[rn].vertices[bt.b],Ot=Yn[rn].vertices[bt.c],Mt=Yn[rn].vertices[bt.d],on=Mn[rn],on[wn]=Lt.x,on[wn+1]=Lt.y,on[wn+2]=Lt.z,on[wn+3]=At.x,on[wn+4]=At.y,on[wn+5]=At.z,on[wn+6]=Ot.x,on[wn+7]=Ot.y,on[wn+8]=Ot.z,on[wn+9]=Mt.x,on[wn+10]=Mt.y,on[wn+11]=Mt.z,ct.morphNormals&&(vt?(fn=Zn[rn].vertexNormals[an],Bt=fn.a,jt=fn.b,Ft=fn.c,It=fn.d):It=Ft=jt=Bt=Zn[rn].faceNormals[an],un=_n[rn],un[wn]=Bt.x,un[wn+1]=Bt.y,un[wn+2]=Bt.z,un[wn+3]=jt.x,un[wn+4]=jt.y,un[wn+5]=jt.z,un[wn+6]=Ft.x,un[wn+7]=Ft.y,un[wn+8]=Ft.z,un[wn+9]=It.x,un[wn+10]=It.y,un[wn+11]=It.z),wn+=12;St.bindBuffer(St.ARRAY_BUFFER,ut.__webglMorphTargetsBuffers[rn]),St.bufferData(St.ARRAY_BUFFER,Mn[rn],ft),ct.morphNormals&&(St.bindBuffer(St.ARRAY_BUFFER,ut.__webglMorphNormalsBuffers[rn]),St.bufferData(St.ARRAY_BUFFER,_n[rn],ft))}}if(Gn.length){mt=0;for(gt=Xn.length;mt<gt;mt++)bt=$n[Xn[mt]],Wt=Gn[bt.a],Xt=Gn[bt.b],Vt=Gn[bt.c],On[bn]=Wt.x,On[bn+1]=Wt.y,On[bn+2]=Wt.z,On[bn+3]=Wt.w,On[bn+4]=Xt.x,On[bn+5]=Xt.y,On[bn+6]=Xt.z,On[bn+7]=Xt.w,On[bn+8]=Vt.x,On[bn+9]=Vt.y,On[bn+10]=Vt.z,On[bn+11]=Vt.w,Jt=Qn[bt.a],Kt=Qn[bt.b],Qt=Qn[bt.c],An[bn]=Jt.x,An[bn+1]=Jt.y,An[bn+2]=Jt.z,An[bn+3]=Jt.w,An[bn+4]=Kt.x,An[bn+5]=Kt.y,An[bn+6]=Kt.z,An[bn+7]=Kt.w,An[bn+8]=Qt.x,An[bn+9]=Qt.y,An[bn+10]=Qt.z,An[bn+11]=Qt.w,bn+=12;mt=0;for(gt=Vn.length;mt<gt;mt++)bt=$n[Vn[mt]],Wt=Gn[bt.a],Xt=Gn[bt.b],Vt=Gn[bt.c],$t=Gn[bt.d],On[bn]=Wt.x,On[bn+1]=Wt.y,On[bn+2]=Wt.z,On[bn+3]=Wt.w,On[bn+4]=Xt.x,On[bn+5]=Xt.y,On[bn+6]=Xt.z,On[bn+7]=Xt.w,On[bn+8]=Vt.x,On[bn+9]=Vt.y,On[bn+10]=Vt.z,On[bn+11]=Vt.w,On[bn+12]=$t.x,On[bn+13]=$t.y,On[bn+14]=$t.z,On[bn+15]=$t.w,Jt=Qn[bt.a],Kt=Qn[bt.b],Qt=Qn[bt.c],Gt=Qn[bt.d],An[bn]=Jt.x,An[bn+1]=Jt.y,An[bn+2]=Jt.z,An[bn+3]=Jt.w,An[bn+4]=Kt.x,An[bn+5]=Kt.y,An[bn+6]=Kt.z,An[bn+7]=Kt.w,An[bn+8]=Qt.x,An[bn+9]=Qt.y,An[bn+10]=Qt.z,An[bn+11]=Qt.w,An[bn+12]=Gt.x,An[bn+13]=Gt.y,An[bn+14]=Gt.z,An[bn+15]=Gt.w,bn+=16;0<bn&&(St.bindBuffer(St.ARRAY_BUFFER,ut.__webglSkinIndicesBuffer),St.bufferData(St.ARRAY_BUFFER,An,ft),St.bindBuffer(St.ARRAY_BUFFER,ut.__webglSkinWeightsBuffer),St.bufferData(St.ARRAY_BUFFER,On,ft))}if(Un&&pt){mt=0;for(gt=Xn.length;mt<gt;mt++)bt=$n[Xn[mt]],xt=bt.vertexColors,Tt=bt.color,3===xt.length&&pt===THREE.VertexColors?(qt=xt[0],Rt=xt[1],Ut=xt[2]):Ut=Rt=qt=Tt,Ln[yn]=qt.r,Ln[yn+1]=qt.g,Ln[yn+2]=qt.b,Ln[yn+3]=Rt.r,Ln[yn+4]=Rt.g,Ln[yn+5]=Rt.b,Ln[yn+6]=Ut.r,Ln[yn+7]=Ut.g,Ln[yn+8]=Ut.b,yn+=9;mt=0;for(gt=Vn.length;mt<gt;mt++)bt=$n[Vn[mt]],xt=bt.vertexColors,Tt=bt.color,4===xt.length&&pt===THREE.VertexColors?(qt=xt[0],Rt=xt[1],Ut=xt[2],zt=xt[3]):zt=Ut=Rt=qt=Tt,Ln[yn]=qt.r,Ln[yn+1]=qt.g,Ln[yn+2]=qt.b,Ln[yn+3]=Rt.r,Ln[yn+4]=Rt.g,Ln[yn+5]=Rt.b,Ln[yn+6]=Ut.r,Ln[yn+7]=Ut.g,Ln[yn+8]=Ut.b,Ln[yn+9]=zt.r,Ln[yn+10]=zt.g,Ln[yn+11]=zt.b,yn+=12;0<yn&&(St.bindBuffer(St.ARRAY_BUFFER,ut.__webglColorBuffer),St.bufferData(St.ARRAY_BUFFER,Ln,ft))}if(Rn&&jn.hasTangents){mt=0;for(gt=Xn.length;mt<gt;mt++)bt=$n[Xn[mt]],Nt=bt.vertexTangents,_t=Nt[0],Dt=Nt[1],Pt=Nt[2],kn[mn]=_t.x,kn[mn+1]=_t.y,kn[mn+2]=_t.z,kn[mn+3]=_t.w,kn[mn+4]=Dt.x,kn[mn+5]=Dt.y,kn[mn+6]=Dt.z,kn[mn+7]=Dt.w,kn[mn+8]=Pt.x,kn[mn+9]=Pt.y,kn[mn+10]=Pt.z,kn[mn+11]=Pt.w,mn+=12;mt=0;for(gt=Vn.length;mt<gt;mt++)bt=$n[Vn[mt]],Nt=bt.vertexTangents,_t=Nt[0],Dt=Nt[1],Pt=Nt[2],Ht=Nt[3],kn[mn]=_t.x,kn[mn+1]=_t.y,kn[mn+2]=_t.z,kn[mn+3]=_t.w,kn[mn+4]=Dt.x,kn[mn+5]=Dt.y,kn[mn+6]=Dt.z,kn[mn+7]=Dt.w,kn[mn+8]=Pt.x,kn[mn+9]=Pt.y,kn[mn+10]=Pt.z,kn[mn+11]=Pt.w,kn[mn+12]=Ht.x,kn[mn+13]=Ht.y,kn[mn+14]=Ht.z,kn[mn+15]=Ht.w,mn+=16;St.bindBuffer(St.ARRAY_BUFFER,ut.__webglTangentBuffer),St.bufferData(St.ARRAY_BUFFER,kn,ft)}if(qn&&ht){mt=0;for(gt=Xn.length;mt<gt;mt++)if(bt=$n[Xn[mt]],wt=bt.vertexNormals,Et=bt.normal,3===wt.length&&vt)for(Yt=0;3>Yt;Yt++)en=wt[Yt],Cn[vn]=en.x,Cn[vn+1]=en.y,Cn[vn+2]=en.z,vn+=3;else for(Yt=0;3>Yt;Yt++)Cn[vn]=Et.x,Cn[vn+1]=Et.y,Cn[vn+2]=Et.z,vn+=3;mt=0;for(gt=Vn.length;mt<gt;mt++)if(bt=$n[Vn[mt]],wt=bt.vertexNormals,Et=bt.normal,4===wt.length&&vt)for(Yt=0;4>Yt;Yt++)en=wt[Yt],Cn[vn]=en.x,Cn[vn+1]=en.y,Cn[vn+2]=en.z,vn+=3;else for(Yt=0;4>Yt;Yt++)Cn[vn]=Et.x,Cn[vn+1]=Et.y,Cn[vn+2]=Et.z,vn+=3;St.bindBuffer(St.ARRAY_BUFFER,ut.__webglNormalBuffer),St.bufferData(St.ARRAY_BUFFER,Cn,ft)}if(In&&Jn&&dt){mt=0;for(gt=Xn.length;mt<gt;mt++)if(yt=Xn[mt],Ct=Jn[yt],void 0!==Ct)for(Yt=0;3>Yt;Yt++)tn=Ct[Yt],Tn[hn]=tn.u,Tn[hn+1]=tn.v,hn+=2;mt=0;for(gt=Vn.length;mt<gt;mt++)if(yt=Vn[mt],Ct=Jn[yt],void 0!==Ct)for(Yt=0;4>Yt;Yt++)tn=Ct[Yt],Tn[hn]=tn.u,Tn[hn+1]=tn.v,hn+=2;0<hn&&(St.bindBuffer(St.ARRAY_BUFFER,ut.__webglUVBuffer),St.bufferData(St.ARRAY_BUFFER,Tn,ft))}if(In&&Kn&&dt){mt=0;for(gt=Xn.length;mt<gt;mt++)if(yt=Xn[mt],kt=Kn[yt],void 0!==kt)for(Yt=0;3>Yt;Yt++)nn=kt[Yt],Nn[pn]=nn.u,Nn[pn+1]=nn.v,pn+=2;mt=0;for(gt=Vn.length;mt<gt;mt++)if(yt=Vn[mt],kt=Kn[yt],void 0!==kt)for(Yt=0;4>Yt;Yt++)nn=kt[Yt],Nn[pn]=nn.u,Nn[pn+1]=nn.v,pn+=2;0<pn&&(St.bindBuffer(St.ARRAY_BUFFER,ut.__webglUV2Buffer),St.bufferData(St.ARRAY_BUFFER,Nn,ft))}if(Fn){mt=0;for(gt=Xn.length;mt<gt;mt++)Hn[dn]=ln,Hn[dn+1]=ln+1,Hn[dn+2]=ln+2,dn+=3,Bn[gn]=ln,Bn[gn+1]=ln+1,Bn[gn+2]=ln,Bn[gn+3]=ln+2,Bn[gn+4]=ln+1,Bn[gn+5]=ln+2,gn+=6,ln+=3;mt=0;for(gt=Vn.length;mt<gt;mt++)Hn[dn]=ln,Hn[dn+1]=ln+1,Hn[dn+2]=ln+3,Hn[dn+3]=ln+1,Hn[dn+4]=ln+2,Hn[dn+5]=ln+3,dn+=6,Bn[gn]=ln,Bn[gn+1]=ln+1,Bn[gn+2]=ln,Bn[gn+3]=ln+3,Bn[gn+4]=ln+1,Bn[gn+5]=ln+2,Bn[gn+6]=ln+2,Bn[gn+7]=ln+3,gn+=8,ln+=4;St.bindBuffer(St.ELEMENT_ARRAY_BUFFER,ut.__webglFaceBuffer),St.bufferData(St.ELEMENT_ARRAY_BUFFER,Hn,ft),St.bindBuffer(St.ELEMENT_ARRAY_BUFFER,ut.__webglLineBuffer),St.bufferData(St.ELEMENT_ARRAY_BUFFER,Bn,ft)}if(Dn){Yt=0;for(Zt=Dn.length;Yt<Zt;Yt++)if(Pn=Dn[Yt],Pn.__original.needsUpdate){En=0;if(1===Pn.size){if(void 0===Pn.boundTo||"vertices"===Pn.boundTo){mt=0;for(gt=Xn.length;mt<gt;mt++)bt=$n[Xn[mt]],Pn.array[En]=Pn.value[bt.a],Pn.array[En+1]=Pn.value[bt.b],Pn.array[En+2]=Pn.value[bt.c],En+=3;mt=0;for(gt=Vn.length;mt<gt;mt++)bt=$n[Vn[mt]],Pn.array[En]=Pn.value[bt.a],Pn.array[En+1]=Pn.value[bt.b],Pn.array[En+2]=Pn.value[bt.c],Pn.array[En+3]=Pn.value[bt.d],En+=4}else if("faces"===Pn.boundTo){mt=0;for(gt=Xn.length;mt<gt;mt++)Sn=Pn.value[Xn[mt]],Pn.array[En]=Sn,Pn.array[En+1]=Sn,Pn.array[En+2]=Sn,En+=3;mt=0;for(gt=Vn.length;mt<gt;mt++)Sn=Pn.value[Vn[mt]],Pn.array[En]=Sn,Pn.array[En+1]=Sn,Pn.array[En+2]=Sn,Pn.array[En+3]=Sn,En+=4}}else if(2===Pn.size){if(void 0===Pn.boundTo||"vertices"===Pn.boundTo){mt=0;for(gt=Xn.length;mt<gt;mt++)bt=$n[Xn[mt]],Lt=Pn.value[bt.a],At=Pn.value[bt.b],Ot=Pn.value[bt.c],Pn.array[En]=Lt.x,Pn.array[En+1]=Lt.y,Pn.array[En+2]=At.x,Pn.array[En+3]=At.y,Pn.array[En+4]=Ot.x,Pn.array[En+5]=Ot.y,En+=6;mt=0;for(gt=Vn.length;mt<gt;mt++)bt=$n[Vn[mt]],Lt=Pn.value[bt.a],At=Pn.value[bt.b],Ot=Pn.value[bt.c],Mt=Pn.value[bt.d],Pn.array[En]=Lt.x,Pn.array[En+1]=Lt.y,Pn.array[En+2]=At.x,Pn.array[En+3]=At.y,Pn.array[En+4]=Ot.x,Pn.array[En+5]=Ot.y,Pn.array[En+6]=Mt.x,Pn.array[En+7]=Mt.y,En+=8}else if("faces"===Pn.boundTo){mt=0;for(gt=Xn.length;mt<gt;mt++)Ot=At=Lt=Sn=Pn.value[Xn[mt]],Pn.array[En]=Lt.x,Pn.array[En+1]=Lt.y,Pn.array[En+2]=At.x,Pn.array[En+3]=At.y,Pn.array[En+4]=Ot.x,Pn.array[En+5]=Ot.y,En+=6;mt=0;for(gt=Vn.length;mt<gt;mt++)Mt=Ot=At=Lt=Sn=Pn.value[Vn[mt]],Pn.array[En]=Lt.x,Pn.array[En+1]=Lt.y,Pn.array[En+2]=At.x,Pn.array[En+3]=At.y,Pn.array[En+4]=Ot.x,Pn.array[En+5]=Ot.y,Pn.array[En+6]=Mt.x,Pn.array[En+7]=Mt.y,En+=8}}else if(3===Pn.size){var er;er="c"===Pn.type?["r","g","b"]:["x","y","z"];if(void 0===Pn.boundTo||"vertices"===Pn.boundTo){mt=0;for(gt=Xn.length;mt<gt;mt++)bt=$n[Xn[mt]],Lt=Pn.value[bt.a],At=Pn.value[bt.b],Ot=Pn.value[bt.c],Pn.array[En]=Lt[er[0]],Pn.array[En+1]=Lt[er[1]],Pn.array[En+2]=Lt[er[2]],Pn.array[En+3]=At[er[0]],Pn.array[En+4]=At[er[1]],Pn.array[En+5]=At[er[2]],Pn.array[En+6]=Ot[er[0]],Pn.array[En+7]=Ot[er[1]],Pn.array[En+8]=Ot[er[2]],En+=9;mt=0;for(gt=Vn.length;mt<gt;mt++)bt=$n[Vn[mt]],Lt=Pn.value[bt.a],At=Pn.value[bt.b],Ot=Pn.value[bt.c],Mt=Pn.value[bt.d],Pn.array[En]=Lt[er[0]],Pn.array[En+1]=Lt[er[1]],Pn.array[En+2]=Lt[er[2]],Pn.array[En+3]=At[er[0]],Pn.array[En+4]=At[er[1]],Pn.array[En+5]=At[er[2]],Pn.array[En+6]=Ot[er[0]],Pn.array[En+7]=Ot[er[1]],Pn.array[En+8]=Ot[er[2]],Pn.array[En+9]=Mt[er[0]],Pn.array[En+10]=Mt[er[1]],Pn.array[En+11]=Mt[er[2]],En+=12}else if("faces"===Pn.boundTo){mt=0;for(gt=Xn.length;mt<gt;mt++)Ot=At=Lt=Sn=Pn.value[Xn[mt]],Pn.array[En]=Lt[er[0]],Pn.array[En+1]=Lt[er[1]],Pn.array[En+2]=Lt[er[2]],Pn.array[En+3]=At[er[0]],Pn.array[En+4]=At[er[1]],Pn.array[En+5]=At[er[2]],Pn.array[En+6]=Ot[er[0]],Pn.array[En+7]=Ot[er[1]],Pn.array[En+8]=Ot[er[2]],En+=9;mt=0;for(gt=Vn.length;mt<gt;mt++)Mt=Ot=At=Lt=Sn=Pn.value[Vn[mt]],Pn.array[En]=Lt[er[0]],Pn.array[En+1]=Lt[er[1]],Pn.array[En+2]=Lt[er[2]],Pn.array[En+3]=At[er[0]],Pn.array[En+4]=At[er[1]],Pn.array[En+5]=At[er[2]],Pn.array[En+6]=Ot[er[0]],Pn.array[En+7]=Ot[er[1]],Pn.array[En+8]=Ot[er[2]],Pn.array[En+9]=Mt[er[0]],Pn.array[En+10]=Mt[er[1]],Pn.array[En+11]=Mt[er[2]],En+=12}else if("faceVertices"===Pn.boundTo){mt=0;for(gt=Xn.length;mt<gt;mt++)Sn=Pn.value[Xn[mt]],Lt=Sn[0],At=Sn[1],Ot=Sn[2],Pn.array[En]=Lt[er[0]],Pn.array[En+1]=Lt[er[1]],Pn.array[En+2]=Lt[er[2]],Pn.array[En+3]=At[er[0]],Pn.array[En+4]=At[er[1]],Pn.array[En+5]=At[er[2]],Pn.array[En+6]=Ot[er[0]],Pn.array[En+7]=Ot[er[1]],Pn.array[En+8]=Ot[er[2]],En+=9;mt=0;for(gt=Vn.length;mt<gt;mt++)Sn=Pn.value[Vn[mt]],Lt=Sn[0],At=Sn[1],Ot=Sn[2],Mt=Sn[3],Pn.array[En]=Lt[er[0]],Pn.array[En+1]=Lt[er[1]],Pn.array[En+2]=Lt[er[2]],Pn.array[En+3]=At[er[0]],Pn.array[En+4]=At[er[1]],Pn.array[En+5]=At[er[2]],Pn.array[En+6]=Ot[er[0]],Pn.array[En+7]=Ot[er[1]],Pn.array[En+8]=Ot[er[2]],Pn.array[En+9]=Mt[er[0]],Pn.array[En+10]=Mt[er[1]],Pn.array[En+11]=Mt[er[2]],En+=12}}else if(4===Pn.size)if(void 0===Pn.boundTo||"vertices"===Pn.boundTo){mt=0;for(gt=Xn.length;mt<gt;mt++)bt=$n[Xn[mt]],Lt=Pn.value[bt.a],At=Pn.value[bt.b],Ot=Pn.value[bt.c],Pn.array[En]=Lt.x,Pn.array[En+1]=Lt.y,Pn.array[En+2]=Lt.z,Pn.array[En+3]=Lt.w,Pn.array[En+4]=At.x,Pn.array[En+5]=At.y,Pn.array[En+6]=At.z,Pn.array[En+7]=At.w,Pn.array[En+8]=Ot.x,Pn.array[En+9]=Ot.y,Pn.array[En+10]=Ot.z,Pn.array[En+11]=Ot.w,En+=12;mt=0;for(gt=Vn.length;mt<gt;mt++)bt=$n[Vn[mt]],Lt=Pn.value[bt.a],At=Pn.value[bt.b],Ot=Pn.value[bt.c],Mt=Pn.value[bt.d],Pn.array[En]=Lt.x,Pn.array[En+1]=Lt.y,Pn.array[En+2]=Lt.z,Pn.array[En+3]=Lt.w,Pn.array[En+4]=At.x,Pn.array[En+5]=At.y,Pn.array[En+6]=At.z,Pn.array[En+7]=At.w,Pn.array[En+8]=Ot.x,Pn.array[En+9]=Ot.y,Pn.array[En+10]=Ot.z,Pn.array[En+11]=Ot.w,Pn.array[En+12]=Mt.x,Pn.array[En+13]=Mt.y,Pn.array[En+14]=Mt.z,Pn.array[En+15]=Mt.w,En+=16}else if("faces"===Pn.boundTo){mt=0;for(gt=Xn.length;mt<gt;mt++)Ot=At=Lt=Sn=Pn.value[Xn[mt]],Pn.array[En]=Lt.x,Pn.array[En+1]=Lt.y,Pn.array[En+2]=Lt.z,Pn.array[En+3]=Lt.w,Pn.array[En+4]=At.x,Pn.array[En+5]=At.y,Pn.array[En+6]=At.z,Pn.array[En+7]=At.w,Pn.array[En+8]=Ot.x,Pn.array[En+9]=Ot.y,Pn.array[En+10]=Ot.z,Pn.array[En+11]=Ot.w,En+=12;mt=0;for(gt=Vn.length;mt<gt;mt++)Mt=Ot=At=Lt=Sn=Pn.value[Vn[mt]],Pn.array[En]=Lt.x,Pn.array[En+1]=Lt.y,Pn.array[En+2]=Lt.z,Pn.array[En+3]=Lt.w,Pn.array[En+4]=At.x,Pn.array[En+5]=At.y,Pn.array[En+6]=At.z,Pn.array[En+7]=At.w,Pn.array[En+8]=Ot.x,Pn.array[En+9]=Ot.y,Pn.array[En+10]=Ot.z,Pn.array[En+11]=Ot.w,Pn.array[En+12]=Mt.x,Pn.array[En+13]=Mt.y,Pn.array[En+14]=Mt.z,Pn.array[En+15]=Mt.w,En+=16}else if("faceVertices"===Pn.boundTo){mt=0;for(gt=Xn.length;mt<gt;mt++)Sn=Pn.value[Xn[mt]],Lt=Sn[0],At=Sn[1],Ot=Sn[2],Pn.array[En]=Lt.x,Pn.array[En+1]=Lt.y,Pn.array[En+2]=Lt.z,Pn.array[En+3]=Lt.w,Pn.array[En+4]=At.x,Pn.array[En+5]=At.y,Pn.array[En+6]=At.z,Pn.array[En+7]=At.w,Pn.array[En+8]=Ot.x,Pn.array[En+9]=Ot.y,Pn.array[En+10]=Ot.z,Pn.array[En+11]=Ot.w,En+=12;mt=0;for(gt=Vn.length;mt<gt;mt++)Sn=Pn.value[Vn[mt]],Lt=Sn[0],At=Sn[1],Ot=Sn[2],Mt=Sn[3],Pn.array[En]=Lt.x,Pn.array[En+1]=Lt.y,Pn.array[En+2]=Lt.z,Pn.array[En+3]=Lt.w,Pn.array[En+4]=At.x,Pn.array[En+5]=At.y,Pn.array[En+6]=At.z,Pn.array[En+7]=At.w,Pn.array[En+8]=Ot.x,Pn.array[En+9]=Ot.y,Pn.array[En+10]=Ot.z,Pn.array[En+11]=Ot.w,Pn.array[En+12]=Mt.x,Pn.array[En+13]=Mt.y,Pn.array[En+14]=Mt.z,Pn.array[En+15]=Mt.w,En+=16}St.bindBuffer(St.ARRAY_BUFFER,Pn.buffer),St.bufferData(St.ARRAY_BUFFER,Pn.array,ft)}}lt&&(delete ut.__inittedArrays,delete ut.__colorArray,delete ut.__normalArray,delete ut.__tangentArray,delete ut.__uvArray,delete ut.__uv2Array,delete ut.__faceArray,delete ut.__vertexArray,delete ut.__lineArray,delete ut.__skinIndexArray,delete ut.__skinWeightArray)}}tt.verticesNeedUpdate=!1,tt.morphTargetsNeedUpdate=!1,tt.elementsNeedUpdate=!1,tt.uvsNeedUpdate=!1,tt.normalsNeedUpdate=!1,tt.colorsNeedUpdate=!1,tt.tangentsNeedUpdate=!1,tt.buffersNeedUpdate=!1,it.attributes&&g(it)}else if(et instanceof THREE.Ribbon){it=i(et,tt),rt=it.attributes&&m(it);if(tt.verticesNeedUpdate||tt.colorsNeedUpdate||tt.normalsNeedUpdate||rt){var tr=tt,nr=St.DYNAMIC_DRAW,rr=void 0,ir=void 0,sr=void 0,or=void 0,ur=void 0,ar=void 0,fr=void 0,lr=void 0,cr=void 0,hr=void 0,pr=void 0,dr=void 0,vr=void 0,mr=tr.vertices,gr=tr.colors,yr=tr.normals,br=mr.length,wr=gr.length,Er=yr.length,Sr=tr.__vertexArray,xr=tr.__colorArray,Tr=tr.__normalArray,Nr=tr.colorsNeedUpdate,Cr=tr.normalsNeedUpdate,kr=tr.__webglCustomAttributesList;if(tr.verticesNeedUpdate){for(rr=0;rr<br;rr++)or=mr[rr],ur=3*rr,Sr[ur]=or.x,Sr[ur+1]=or.y,Sr[ur+2]=or.z;St.bindBuffer(St.ARRAY_BUFFER,tr.__webglVertexBuffer),St.bufferData(St.ARRAY_BUFFER,Sr,nr)}if(Nr){for(ir=0;ir<wr;ir++)ar=gr[ir],ur=3*ir,xr[ur]=ar.r,xr[ur+1]=ar.g,xr[ur+2]=ar.b;St.bindBuffer(St.ARRAY_BUFFER,tr.__webglColorBuffer),St.bufferData(St.ARRAY_BUFFER,xr,nr)}if(Cr){for(sr=0;sr<Er;sr++)fr=yr[sr],ur=3*sr,Tr[ur]=fr.x,Tr[ur+1]=fr.y,Tr[ur+2]=fr.z;St.bindBuffer(St.ARRAY_BUFFER,tr.__webglNormalBuffer),St.bufferData(St.ARRAY_BUFFER,Tr,nr)}if(kr){lr=0;for(cr=kr.length;lr<cr;lr++)if(dr=kr[lr],dr.needsUpdate&&(void 0===dr.boundTo||"vertices"===dr.boundTo)){ur=0,pr=dr.value.length;if(1===dr.size)for(hr=0;hr<pr;hr++)dr.array[hr]=dr.value[hr];else if(2===dr.size)for(hr=0;hr<pr;hr++)vr=dr.value[hr],dr.array[ur]=vr.x,dr.array[ur+1]=vr.y,ur+=2;else if(3===dr.size)if("c"===dr.type)for(hr=0;hr<pr;hr++)vr=dr.value[hr],dr.array[ur]=vr.r,dr.array[ur+1]=vr.g,dr.array[ur+2]=vr.b,ur+=3;else for(hr=0;hr<pr;hr++)vr=dr.value[hr],dr.array[ur]=vr.x,dr.array[ur+1]=vr.y,dr.array[ur+2]=vr.z,ur+=3;else if(4===dr.size)for(hr=0;hr<pr;hr++)vr=dr.value[hr],dr.array[ur]=vr.x,dr.array[ur+1]=vr.y,dr.array[ur+2]=vr.z,dr.array[ur+3]=vr.w,ur+=4;St.bindBuffer(St.ARRAY_BUFFER,dr.buffer),St.bufferData(St.ARRAY_BUFFER,dr.array,nr)}}}tt.verticesNeedUpdate=!1,tt.colorsNeedUpdate=!1,tt.normalsNeedUpdate=!1,it.attributes&&g(it)}else if(et instanceof THREE.Line){it=i(et,tt),rt=it.attributes&&m(it);if(tt.verticesNeedUpdate||tt.colorsNeedUpdate||tt.lineDistancesNeedUpdate||rt){var Lr=tt,Ar=St.DYNAMIC_DRAW,Or=void 0,Mr=void 0,_r=void 0,Dr=void 0,Pr=void 0,Hr=void 0,Br=Lr.vertices,jr=Lr.colors,Fr=Lr.lineDistances,Ir=Br.length,qr=jr.length,Rr=Fr.length,Ur=Lr.__vertexArray,zr=Lr.__colorArray,Wr=Lr.__lineDistanceArray,Xr=Lr.colorsNeedUpdate,Vr=Lr.lineDistancesNeedUpdate,$r=Lr.__webglCustomAttributesList,Jr=void 0,Kr=void 0,Qr=void 0,Gr=void 0,Yr=void 0,Zr=void 0;if(Lr.verticesNeedUpdate){for(Or=0;Or<Ir;Or++)Dr=Br[Or],Pr=3*Or,Ur[Pr]=Dr.x,Ur[Pr+1]=Dr.y,Ur[Pr+2]=Dr.z;St.bindBuffer(St.ARRAY_BUFFER,Lr.__webglVertexBuffer),St.bufferData(St.ARRAY_BUFFER,Ur,Ar)}if(Xr){for(Mr=0;Mr<qr;Mr++)Hr=jr[Mr],Pr=3*Mr,zr[Pr]=Hr.r,zr[Pr+1]=Hr.g,zr[Pr+2]=Hr.b;St.bindBuffer(St.ARRAY_BUFFER,Lr.__webglColorBuffer),St.bufferData(St.ARRAY_BUFFER,zr,Ar)}if(Vr){for(_r=0;_r<Rr;_r++)Wr[_r]=Fr[_r];St.bindBuffer(St.ARRAY_BUFFER,Lr.__webglLineDistanceBuffer),St.bufferData(St.ARRAY_BUFFER,Wr,Ar)}if($r){Jr=0;for(Kr=$r.length;Jr<Kr;Jr++)if(Zr=$r[Jr],Zr.needsUpdate&&(void 0===Zr.boundTo||"vertices"===Zr.boundTo)){Pr=0,Gr=Zr.value.length;if(1===Zr.size)for(Qr=0;Qr<Gr;Qr++)Zr.array[Qr]=Zr.value[Qr];else if(2===Zr.size)for(Qr=0;Qr<Gr;Qr++)Yr=Zr.value[Qr],Zr.array[Pr]=Yr.x,Zr.array[Pr+1]=Yr.y,Pr+=2;else if(3===Zr.size)if("c"===Zr.type)for(Qr=0;Qr<Gr;Qr++)Yr=Zr.value[Qr],Zr.array[Pr]=Yr.r,Zr.array[Pr+1]=Yr.g,Zr.array[Pr+2]=Yr.b,Pr+=3;else for(Qr=0;Qr<Gr;Qr++)Yr=Zr.value[Qr],Zr.array[Pr]=Yr.x,Zr.array[Pr+1]=Yr.y,Zr.array[Pr+2]=Yr.z,Pr+=3;else if(4===Zr.size)for(Qr=0;Qr<Gr;Qr++)Yr=Zr.value[Qr],Zr.array[Pr]=Yr.x,Zr.array[Pr+1]=Yr.y,Zr.array[Pr+2]=Yr.z,Zr.array[Pr+3]=Yr.w,Pr+=4;St.bindBuffer(St.ARRAY_BUFFER,Zr.buffer),St.bufferData(St.ARRAY_BUFFER,Zr.array,Ar)}}}tt.verticesNeedUpdate=!1,tt.colorsNeedUpdate=!1,tt.lineDistancesNeedUpdate=!1,it.attributes&&g(it)}else et instanceof THREE.ParticleSystem&&(tt instanceof THREE.BufferGeometry?((tt.verticesNeedUpdate||tt.colorsNeedUpdate)&&f(tt,St.DYNAMIC_DRAW,!tt.dynamic),tt.verticesNeedUpdate=!1,tt.colorsNeedUpdate=!1):(it=i(et,tt),rt=it.attributes&&m(it),(tt.verticesNeedUpdate||tt.colorsNeedUpdate||et.sortParticles||rt)&&a(tt,St.DYNAMIC_DRAW,et),tt.verticesNeedUpdate=!1,tt.colorsNeedUpdate=!1,it.attributes&&g(it)))}},this.initMaterial=function(e,t,n,r){var i,s,o,u,a,f,l,c,h;e instanceof THREE.MeshDepthMaterial?h="depth":e instanceof THREE.MeshNormalMaterial?h="normal":e instanceof THREE.MeshBasicMaterial?h="basic":e instanceof THREE.MeshLambertMaterial?h="lambert":e instanceof THREE.MeshPhongMaterial?h="phong":e instanceof THREE.LineBasicMaterial?h="basic":e instanceof THREE.LineDashedMaterial?h="dashed":e instanceof THREE.ParticleBasicMaterial&&(h="particle_basic");if(h){var p=THREE.ShaderLib[h];e.uniforms=THREE.UniformsUtils.clone(p.uniforms),e.vertexShader=p.vertexShader,e.fragmentShader=p.fragmentShader}var d,v,m;i=d=v=m=p=0;for(s=t.length;i<s;i++)o=t[i],o.onlyShadow||(o instanceof THREE.DirectionalLight&&d++,o instanceof THREE.PointLight&&v++,o instanceof THREE.SpotLight&&m++,o instanceof THREE.HemisphereLight&&p++);i=d,s=v,o=m,u=p,p=d=0;for(m=t.length;p<m;p++)v=t[p],v.castShadow&&(v instanceof THREE.SpotLight&&d++,v instanceof THREE.DirectionalLight&&!v.shadowCascade&&d++);c=d,Ot&&r&&r.useVertexTexture?l=1024:(t=St.getParameter(St.MAX_VERTEX_UNIFORM_VECTORS),t=Math.floor((t-20)/4),void 0!==r&&r instanceof THREE.SkinnedMesh&&(t=Math.min(r.bones.length,t),t<r.bones.length&&console.warn("WebGLRenderer: too many bones - "+r.bones.length+", this GPU supports just "+t+" (try OpenGL instead of ANGLE)")),l=t);var g;e:{v=e.fragmentShader,m=e.vertexShader,p=e.uniforms,t=e.attributes,d=e.defines;var n={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:n,useFog:e.fog,fogExp:n instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:l,useVertexTexture:Ot&&r&&r.useVertexTexture,boneTextureWidth:r&&r.boneTextureWidth,boneTextureHeight:r&&r.boneTextureHeight,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:i,maxPointLights:s,maxSpotLights:o,maxHemiLights:u,maxShadows:c,shadowMapEnabled:this.shadowMapEnabled&&r.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,perPixel:e.perPixel,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},y,b,w,r=[];h?r.push(h):(r.push(v),r.push(m));for(b in d)r.push(b),r.push(d[b]);for(y in n)r.push(y),r.push(n[y]);h=r.join(),y=0;for(b=U.length;y<b;y++)if(r=U[y],r.code===h){r.usedTimes++,g=r.program;break e}y=[];for(w in d)b=d[w],!1!==b&&(b="#define "+w+" "+b,y.push(b));b=y.join("\n"),w=St.createProgram(),y=["precision "+D+" float;",b,At?"#define VERTEX_TEXTURES":"",R.gammaInput?"#define GAMMA_INPUT":"",R.gammaOutput?"#define GAMMA_OUTPUT":"",R.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,"#define MAX_BONES "+n.maxBones,n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.vertexColors?"#define USE_COLOR":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.boneTextureWidth?"#define N_BONE_PIXEL_X "+n.boneTextureWidth.toFixed(1):"",n.boneTextureHeight?"#define N_BONE_PIXEL_Y "+n.boneTextureHeight.toFixed(1):"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals?"#define USE_MORPHNORMALS":"",n.perPixel?"#define PHONG_PER_PIXEL":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapSoft?"#define SHADOWMAP_SOFT":"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n"),b=["precision "+D+" float;",n.bumpMap||n.normalMap?"#extension GL_OES_standard_derivatives : enable":"",b,"#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,n.alphaTest?"#define ALPHATEST "+n.alphaTest:"",R.gammaInput?"#define GAMMA_INPUT":"",R.gammaOutput?"#define GAMMA_OUTPUT":"",R.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.vertexColors?"#define USE_COLOR":"",n.metal?"#define METAL":"",n.perPixel?"#define PHONG_PER_PIXEL":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapSoft?"#define SHADOWMAP_SOFT":"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"),b=k("fragment",b+v),y=k("vertex",y+m),St.attachShader(w,y),St.attachShader(w,b),St.linkProgram(w),St.getProgramParameter(w,St.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+St.getProgramParameter(w,St.VALIDATE_STATUS)+", gl error ["+St.getError()+"]"),St.deleteShader(b),St.deleteShader(y),w.uniforms={},w.attributes={};var E;y="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" "),n.useVertexTexture?y.push("boneTexture"):y.push("boneGlobalMatrices");for(E in p)y.push(E);E=y,y=0;for(b=E.length;y<b;y++)r=E[y],w.uniforms[r]=St.getUniformLocation(w,r);y="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(E=0;E<n.maxMorphTargets;E++)y.push("morphTarget"+E);for(E=0;E<n.maxMorphNormals;E++)y.push("morphNormal"+E);for(g in t)y.push(g);g=y,E=0;for(t=g.length;E<t;E++)y=g[E],w.attributes[y]=St.getAttribLocation(w,y);w.id=z++,U.push({program:w,code:h,usedTimes:1}),R.info.memory.programs=U.length,g=w}e.program=g,g=e.program.attributes,0<=g.position&&St.enableVertexAttribArray(g.position),0<=g.color&&St.enableVertexAttribArray(g.color),0<=g.normal&&St.enableVertexAttribArray(g.normal),0<=g.tangent&&St.enableVertexAttribArray(g.tangent),0<=g.lineDistance&&St.enableVertexAttribArray(g.lineDistance),e.skinning&&0<=g.skinIndex&&0<=g.skinWeight&&(St.enableVertexAttribArray(g.skinIndex),St.enableVertexAttribArray(g.skinWeight));if(e.attributes)for(f in e.attributes)void 0!==g[f]&&0<=g[f]&&St.enableVertexAttribArray(g[f]);if(e.morphTargets){e.numSupportedMorphTargets=0,w="morphTarget";for(f=0;f<this.maxMorphTargets;f++)E=w+f,0<=g[E]&&(St.enableVertexAttribArray(g[E]),e.numSupportedMorphTargets++)}if(e.morphNormals){e.numSupportedMorphNormals=0,w="morphNormal";for(f=0;f<this.maxMorphNormals;f++)E=w+f,0<=g[E]&&(St.enableVertexAttribArray(g[E]),e.numSupportedMorphNormals++)}e.uniformsList=[];for(a in e.uniforms)e.uniformsList.push([e.uniforms[a],a])},this.setFaceCulling=function(e,t){e?(!t||"ccw"===t?St.frontFace(St.CCW):St.frontFace(St.CW),"back"===e?St.cullFace(St.BACK):"front"===e?St.cullFace(St.FRONT):St.cullFace(St.FRONT_AND_BACK),St.enable(St.CULL_FACE)):St.disable(St.CULL_FACE)},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide,e=e.side===THREE.BackSide;G!==t&&(t?St.disable(St.CULL_FACE):St.enable(St.CULL_FACE),G=t),Y!==e&&(e?St.frontFace(St.CW):St.frontFace(St.CCW),Y=e)},this.setDepthTest=function(e){rt!==e&&(e?St.enable(St.DEPTH_TEST):St.disable(St.DEPTH_TEST),rt=e)},this.setDepthWrite=function(e){it!==e&&(St.depthMask(e),it=e)},this.setBlending=function(e,t,n,r){e!==Z&&(e===THREE.NoBlending?St.disable(St.BLEND):e===THREE.AdditiveBlending?(St.enable(St.BLEND),St.blendEquation(St.FUNC_ADD),St.blendFunc(St.SRC_ALPHA,St.ONE)):e===THREE.SubtractiveBlending?(St.enable(St.BLEND),St.blendEquation(St.FUNC_ADD),St.blendFunc(St.ZERO,St.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(St.enable(St.BLEND),St.blendEquation(St.FUNC_ADD),St.blendFunc(St.ZERO,St.SRC_COLOR)):e===THREE.CustomBlending?St.enable(St.BLEND):(St.enable(St.BLEND),St.blendEquationSeparate(St.FUNC_ADD,St.FUNC_ADD),St.blendFuncSeparate(St.SRC_ALPHA,St.ONE_MINUS_SRC_ALPHA,St.ONE,St.ONE_MINUS_SRC_ALPHA)),Z=e);if(e===THREE.CustomBlending){if(t!==et&&(St.blendEquation(M(t)),et=t),n!==tt||r!==nt)St.blendFunc(M(n),M(r)),tt=n,nt=r}else nt=tt=et=null},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.__webglTexture=St.createTexture(),R.info.memory.textures++),St.activeTexture(St.TEXTURE0+t),St.bindTexture(St.TEXTURE_2D,e.__webglTexture),St.pixelStorei(St.UNPACK_FLIP_Y_WEBGL,e.flipY),St.pixelStorei(St.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha);var n=e.image,r=0===(n.width&n.width-1)&&0===(n.height&n.height-1),i=M(e.format),s=M(e.type);L(St.TEXTURE_2D,e,r);if(e instanceof THREE.CompressedTexture)for(var s=e.mipmaps,o=0,u=s.length;o<u;o++)n=s[o],St.compressedTexImage2D(St.TEXTURE_2D,o,i,n.width,n.height,0,n.data);else e instanceof THREE.DataTexture?St.texImage2D(St.TEXTURE_2D,0,i,n.width,n.height,0,i,s,n.data):St.texImage2D(St.TEXTURE_2D,0,i,i,s,e.image);e.generateMipmaps&&r&&St.generateMipmap(St.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else St.activeTexture(St.TEXTURE0+t),St.bindTexture(St.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.__webglTexture=St.createTexture();var n=0===(e.width&e.width-1)&&0===(e.height&e.height-1),r=M(e.format),i=M(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],St.bindTexture(St.TEXTURE_CUBE_MAP,e.__webglTexture),L(St.TEXTURE_CUBE_MAP,e,n);for(var s=0;6>s;s++){e.__webglFramebuffer[s]=St.createFramebuffer(),e.__webglRenderbuffer[s]=St.createRenderbuffer(),St.texImage2D(St.TEXTURE_CUBE_MAP_POSITIVE_X+s,0,r,e.width,e.height,0,r,i,null);var o=e,u=St.TEXTURE_CUBE_MAP_POSITIVE_X+s;St.bindFramebuffer(St.FRAMEBUFFER,e.__webglFramebuffer[s]),St.framebufferTexture2D(St.FRAMEBUFFER,St.COLOR_ATTACHMENT0,u,o.__webglTexture,0),A(e.__webglRenderbuffer[s],e)}n&&St.generateMipmap(St.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=St.createFramebuffer(),e.__webglRenderbuffer=St.createRenderbuffer(),St.bindTexture(St.TEXTURE_2D,e.__webglTexture),L(St.TEXTURE_2D,e,n),St.texImage2D(St.TEXTURE_2D,0,r,e.width,e.height,0,r,i,null),r=St.TEXTURE_2D,St.bindFramebuffer(St.FRAMEBUFFER,e.__webglFramebuffer),St.framebufferTexture2D(St.FRAMEBUFFER,St.COLOR_ATTACHMENT0,r,e.__webglTexture,0),A(e.__webglRenderbuffer,e),n&&St.generateMipmap(St.TEXTURE_2D);t?St.bindTexture(St.TEXTURE_CUBE_MAP,null):St.bindTexture(St.TEXTURE_2D,null),St.bindRenderbuffer(St.RENDERBUFFER,null),St.bindFramebuffer(St.FRAMEBUFFER,null)}e?(t=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,n=e.width,e=e.height,i=r=0):(t=null,n=ct,e=ht,r=ft,i=lt),t!==X&&(St.bindFramebuffer(St.FRAMEBUFFER,t),St.viewport(r,i,n,e),X=t),pt=n,dt=e},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(e,t,n){this.width=e,this.height=t,n=n||{},this.wrapS=void 0!==n.wrapS?n.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==n.wrapT?n.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n.magFilter?n.magFilter:THREE.LinearFilter,this.minFilter=void 0!==n.minFilter?n.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==n.format?n.format:THREE.RGBAFormat,this.type=void 0!==n.type?n.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==n.depthBuffer?n.depthBuffer:!0,this.stencilBuffer=void 0!==n.stencilBuffer?n.stencilBuffer:!0,this.generateMipmaps=!0},THREE.WebGLRenderTarget.prototype.clone=function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.anisotropy=this.anisotropy,e.minFilter=this.minFilter,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e},THREE.WebGLRenderTargetCube=function(e,t,n){THREE.WebGLRenderTarget.call(this,e,t,n),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidWorld=new THREE.Vector3,this.centroidScreen=new THREE.Vector3,this.normalWorld=new THREE.Vector3,this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.material=this.color=null,this.uvs=[[]],this.z=null},THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.v4=new THREE.RenderableVertex,this.centroidWorld=new THREE.Vector3,this.centroidScreen=new THREE.Vector3,this.normalWorld=new THREE.Vector3,this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.material=this.color=null,this.uvs=[[]],this.z=null},THREE.RenderableObject=function(){this.z=this.object=null},THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.z=null,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.material=null},THREE.ColorUtils={adjustHSV:function(e,t,n,r){var i=THREE.ColorUtils.__hsv;e.getHSV(i),i.h=THREE.Math.clamp(i.h+t,0,1),i.s=THREE.Math.clamp(i.s+n,0,1),i.v=THREE.Math.clamp(i.v+r,0,1),e.setHSV(i.h,i.s,i.v)}},THREE.ColorUtils.__hsv={h:0,s:0,v:0},THREE.GeometryUtils={merge:function(e,t){var n,r,i=e.vertices.length,s=t instanceof THREE.Mesh?t.geometry:t,o=e.vertices,u=s.vertices,a=e.faces,f=s.faces,l=e.faceVertexUvs[0],s=s.faceVertexUvs[0];t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),n=t.matrix,r=new THREE.Matrix4,r.extractRotation(n,t.scale));for(var c=0,h=u.length;c<h;c++){var p=u[c].clone();n&&n.multiplyVector3(p),o.push(p)}c=0;for(h=f.length;c<h;c++){var p=f[c],d,v,m=p.vertexNormals,g=p.vertexColors;p instanceof THREE.Face3?d=new THREE.Face3(p.a+i,p.b+i
,p.c+i):p instanceof THREE.Face4&&(d=new THREE.Face4(p.a+i,p.b+i,p.c+i,p.d+i)),d.normal.copy(p.normal),r&&r.multiplyVector3(d.normal),o=0;for(u=m.length;o<u;o++)v=m[o].clone(),r&&r.multiplyVector3(v),d.vertexNormals.push(v);d.color.copy(p.color),o=0;for(u=g.length;o<u;o++)v=g[o],d.vertexColors.push(v.clone());d.materialIndex=p.materialIndex,d.centroid.copy(p.centroid),n&&n.multiplyVector3(d.centroid),a.push(d)}c=0;for(h=s.length;c<h;c++){n=s[c],r=[],o=0;for(u=n.length;o<u;o++)r.push(new THREE.UV(n[o].u,n[o].v));l.push(r)}},removeMaterials:function(e,t){for(var n={},r=0,i=t.length;r<i;r++)n[t[r]]=!0;for(var s,o=[],r=0,i=e.faces.length;r<i;r++)s=e.faces[r],s.materialIndex in n||o.push(s);e.faces=o},randomPointInTriangle:function(e,t,n){var r,i,s,o=new THREE.Vector3,u=THREE.GeometryUtils.__v1;return r=THREE.GeometryUtils.random(),i=THREE.GeometryUtils.random(),1<r+i&&(r=1-r,i=1-i),s=1-r-i,o.copy(e),o.multiplyScalar(r),u.copy(t),u.multiplyScalar(i),o.addSelf(u),u.copy(n),u.multiplyScalar(s),o.addSelf(u),o},randomPointInFace:function(e,t,n){var r,i,s;if(e instanceof THREE.Face3)return r=t.vertices[e.a],i=t.vertices[e.b],s=t.vertices[e.c],THREE.GeometryUtils.randomPointInTriangle(r,i,s);if(e instanceof THREE.Face4){r=t.vertices[e.a],i=t.vertices[e.b],s=t.vertices[e.c];var t=t.vertices[e.d],o;return n?e._area1&&e._area2?(n=e._area1,o=e._area2):(n=THREE.GeometryUtils.triangleArea(r,i,t),o=THREE.GeometryUtils.triangleArea(i,s,t),e._area1=n,e._area2=o):(n=THREE.GeometryUtils.triangleArea(r,i,t),o=THREE.GeometryUtils.triangleArea(i,s,t)),THREE.GeometryUtils.random()*(n+o)<n?THREE.GeometryUtils.randomPointInTriangle(r,i,t):THREE.GeometryUtils.randomPointInTriangle(i,s,t)}},randomPointsInGeometry:function(e,t){function n(e){function t(n,r){if(r<n)return n;var i=n+Math.floor((r-n)/2);return f[i]>e?t(n,i-1):f[i]<e?t(i+1,r):i}return t(0,f.length-1)}var r,i,s=e.faces,o=e.vertices,u=s.length,a=0,f=[],l,c,h,p;for(i=0;i<u;i++)r=s[i],r instanceof THREE.Face3?(l=o[r.a],c=o[r.b],h=o[r.c],r._area=THREE.GeometryUtils.triangleArea(l,c,h)):r instanceof THREE.Face4&&(l=o[r.a],c=o[r.b],h=o[r.c],p=o[r.d],r._area1=THREE.GeometryUtils.triangleArea(l,c,p),r._area2=THREE.GeometryUtils.triangleArea(c,h,p),r._area=r._area1+r._area2),a+=r._area,f[i]=a;r=[];for(i=0;i<t;i++)o=THREE.GeometryUtils.random()*a,o=n(o),r[i]=THREE.GeometryUtils.randomPointInFace(s[o],e,!0);return r},triangleArea:function(e,t,n){var r,i=THREE.GeometryUtils.__v1;return i.sub(e,t),r=i.length(),i.sub(e,n),e=i.length(),i.sub(t,n),n=i.length(),t=.5*(r+e+n),Math.sqrt(t*(t-r)*(t-e)*(t-n))},center:function(e){e.computeBoundingBox();var t=e.boundingBox,n=new THREE.Vector3;return n.add(t.min,t.max),n.multiplyScalar(-0.5),e.applyMatrix((new THREE.Matrix4).makeTranslation(n.x,n.y,n.z)),e.computeBoundingBox(),n},normalizeUVs:function(e){for(var e=e.faceVertexUvs[0],t=0,n=e.length;t<n;t++)for(var r=e[t],i=0,s=r.length;i<s;i++)if(1!==r[i].u&&(r[i].u-=Math.floor(r[i].u)),1!==r[i].v)r[i].v-=Math.floor(r[i].v)},triangulateQuads:function(e){var t,n,r,i,s=[],o=[],u=[];t=0;for(n=e.faceUvs.length;t<n;t++)o[t]=[];t=0;for(n=e.faceVertexUvs.length;t<n;t++)u[t]=[];t=0;for(n=e.faces.length;t<n;t++)if(r=e.faces[t],r instanceof THREE.Face4){i=r.a;var a=r.b,f=r.c,l=r.d,c=new THREE.Face3,h=new THREE.Face3;c.color.copy(r.color),h.color.copy(r.color),c.materialIndex=r.materialIndex,h.materialIndex=r.materialIndex,c.a=i,c.b=a,c.c=l,h.a=a,h.b=f,h.c=l,4===r.vertexColors.length&&(c.vertexColors[0]=r.vertexColors[0].clone(),c.vertexColors[1]=r.vertexColors[1].clone(),c.vertexColors[2]=r.vertexColors[3].clone(),h.vertexColors[0]=r.vertexColors[1].clone(),h.vertexColors[1]=r.vertexColors[2].clone(),h.vertexColors[2]=r.vertexColors[3].clone()),s.push(c,h),r=0;for(i=e.faceVertexUvs.length;r<i;r++)e.faceVertexUvs[r].length&&(c=e.faceVertexUvs[r][t],a=c[1],f=c[2],l=c[3],c=[c[0].clone(),a.clone(),l.clone()],a=[a.clone(),f.clone(),l.clone()],u[r].push(c,a));r=0;for(i=e.faceUvs.length;r<i;r++)e.faceUvs[r].length&&(a=e.faceUvs[r][t],o[r].push(a,a))}else{s.push(r),r=0;for(i=e.faceUvs.length;r<i;r++)o[r].push(e.faceUvs[r][t]);r=0;for(i=e.faceVertexUvs.length;r<i;r++)u[r].push(e.faceVertexUvs[r][t])}e.faces=s,e.faceUvs=o,e.faceVertexUvs=u,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals(),e.hasTangents&&e.computeTangents()},explode:function(e){for(var t=[],n=0,r=e.faces.length;n<r;n++){var i=t.length,s=e.faces[n];if(s instanceof THREE.Face4){var o=s.a,u=s.b,a=s.c,o=e.vertices[o],u=e.vertices[u],a=e.vertices[a],f=e.vertices[s.d];t.push(o.clone()),t.push(u.clone()),t.push(a.clone()),t.push(f.clone()),s.a=i,s.b=i+1,s.c=i+2,s.d=i+3}else o=s.a,u=s.b,a=s.c,o=e.vertices[o],u=e.vertices[u],a=e.vertices[a],t.push(o.clone()),t.push(u.clone()),t.push(a.clone()),s.a=i,s.b=i+1,s.c=i+2}e.vertices=t,delete e.__tmpVertices},tessellate:function(e,t){var n,r,i,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b,w,E=[],S=[];n=0;for(r=e.faceVertexUvs.length;n<r;n++)S[n]=[];n=0;for(r=e.faces.length;n<r;n++)if(i=e.faces[n],i instanceof THREE.Face3)if(s=i.a,o=i.b,u=i.c,f=e.vertices[s],l=e.vertices[o],c=e.vertices[u],p=f.distanceTo(l),d=l.distanceTo(c),h=f.distanceTo(c),p>t||d>t||h>t){a=e.vertices.length,b=i.clone(),w=i.clone(),p>=d&&p>=h?(f=f.clone(),f.lerpSelf(l,.5),b.a=s,b.b=a,b.c=u,w.a=a,w.b=o,w.c=u,3===i.vertexNormals.length&&(s=i.vertexNormals[0].clone(),s.lerpSelf(i.vertexNormals[1],.5),b.vertexNormals[1].copy(s),w.vertexNormals[0].copy(s)),3===i.vertexColors.length&&(s=i.vertexColors[0].clone(),s.lerpSelf(i.vertexColors[1],.5),b.vertexColors[1].copy(s),w.vertexColors[0].copy(s)),i=0):d>=p&&d>=h?(f=l.clone(),f.lerpSelf(c,.5),b.a=s,b.b=o,b.c=a,w.a=a,w.b=u,w.c=s,3===i.vertexNormals.length&&(s=i.vertexNormals[1].clone(),s.lerpSelf(i.vertexNormals[2],.5),b.vertexNormals[2].copy(s),w.vertexNormals[0].copy(s),w.vertexNormals[1].copy(i.vertexNormals[2]),w.vertexNormals[2].copy(i.vertexNormals[0])),3===i.vertexColors.length&&(s=i.vertexColors[1].clone(),s.lerpSelf(i.vertexColors[2],.5),b.vertexColors[2].copy(s),w.vertexColors[0].copy(s),w.vertexColors[1].copy(i.vertexColors[2]),w.vertexColors[2].copy(i.vertexColors[0])),i=1):(f=f.clone(),f.lerpSelf(c,.5),b.a=s,b.b=o,b.c=a,w.a=a,w.b=o,w.c=u,3===i.vertexNormals.length&&(s=i.vertexNormals[0].clone(),s.lerpSelf(i.vertexNormals[2],.5),b.vertexNormals[2].copy(s),w.vertexNormals[0].copy(s)),3===i.vertexColors.length&&(s=i.vertexColors[0].clone(),s.lerpSelf(i.vertexColors[2],.5),b.vertexColors[2].copy(s),w.vertexColors[0].copy(s)),i=2),E.push(b,w),e.vertices.push(f),s=0;for(o=e.faceVertexUvs.length;s<o;s++)e.faceVertexUvs[s].length&&(f=e.faceVertexUvs[s][n],w=f[0],u=f[1],b=f[2],0===i?(l=w.clone(),l.lerpSelf(u,.5),f=[w.clone(),l.clone(),b.clone()],u=[l.clone(),u.clone(),b.clone()]):1===i?(l=u.clone(),l.lerpSelf(b,.5),f=[w.clone(),u.clone(),l.clone()],u=[l.clone(),b.clone(),w.clone()]):(l=w.clone(),l.lerpSelf(b,.5),f=[w.clone(),u.clone(),l.clone()],u=[l.clone(),u.clone(),b.clone()]),S[s].push(f,u))}else{E.push(i),s=0;for(o=e.faceVertexUvs.length;s<o;s++)S[s].push(e.faceVertexUvs[s][n])}else if(s=i.a,o=i.b,u=i.c,a=i.d,f=e.vertices[s],l=e.vertices[o],c=e.vertices[u],h=e.vertices[a],p=f.distanceTo(l),d=l.distanceTo(c),v=c.distanceTo(h),m=f.distanceTo(h),p>t||d>t||v>t||m>t){g=e.vertices.length,y=e.vertices.length+1,b=i.clone(),w=i.clone(),p>=d&&p>=v&&p>=m||v>=d&&v>=p&&v>=m?(p=f.clone(),p.lerpSelf(l,.5),l=c.clone(),l.lerpSelf(h,.5),b.a=s,b.b=g,b.c=y,b.d=a,w.a=g,w.b=o,w.c=u,w.d=y,4===i.vertexNormals.length&&(s=i.vertexNormals[0].clone(),s.lerpSelf(i.vertexNormals[1],.5),o=i.vertexNormals[2].clone(),o.lerpSelf(i.vertexNormals[3],.5),b.vertexNormals[1].copy(s),b.vertexNormals[2].copy(o),w.vertexNormals[0].copy(s),w.vertexNormals[3].copy(o)),4===i.vertexColors.length&&(s=i.vertexColors[0].clone(),s.lerpSelf(i.vertexColors[1],.5),o=i.vertexColors[2].clone(),o.lerpSelf(i.vertexColors[3],.5),b.vertexColors[1].copy(s),b.vertexColors[2].copy(o),w.vertexColors[0].copy(s),w.vertexColors[3].copy(o)),i=0):(p=l.clone(),p.lerpSelf(c,.5),l=h.clone(),l.lerpSelf(f,.5),b.a=s,b.b=o,b.c=g,b.d=y,w.a=y,w.b=g,w.c=u,w.d=a,4===i.vertexNormals.length&&(s=i.vertexNormals[1].clone(),s.lerpSelf(i.vertexNormals[2],.5),o=i.vertexNormals[3].clone(),o.lerpSelf(i.vertexNormals[0],.5),b.vertexNormals[2].copy(s),b.vertexNormals[3].copy(o),w.vertexNormals[0].copy(o),w.vertexNormals[1].copy(s)),4===i.vertexColors.length&&(s=i.vertexColors[1].clone(),s.lerpSelf(i.vertexColors[2],.5),o=i.vertexColors[3].clone(),o.lerpSelf(i.vertexColors[0],.5),b.vertexColors[2].copy(s),b.vertexColors[3].copy(o),w.vertexColors[0].copy(o),w.vertexColors[1].copy(s)),i=1),E.push(b,w),e.vertices.push(p,l),s=0;for(o=e.faceVertexUvs.length;s<o;s++)e.faceVertexUvs[s].length&&(f=e.faceVertexUvs[s][n],w=f[0],u=f[1],b=f[2],f=f[3],0===i?(l=w.clone(),l.lerpSelf(u,.5),c=b.clone(),c.lerpSelf(f,.5),w=[w.clone(),l.clone(),c.clone(),f.clone()],u=[l.clone(),u.clone(),b.clone(),c.clone()]):(l=u.clone(),l.lerpSelf(b,.5),c=f.clone(),c.lerpSelf(w,.5),w=[w.clone(),u.clone(),l.clone(),c.clone()],u=[c.clone(),l.clone(),b.clone(),f.clone()]),S[s].push(w,u))}else{E.push(i),s=0;for(o=e.faceVertexUvs.length;s<o;s++)S[s].push(e.faceVertexUvs[s][n])}e.faces=E,e.faceVertexUvs=S}},THREE.GeometryUtils.random=THREE.Math.random16,THREE.GeometryUtils.__v1=new THREE.Vector3,THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,n,r){var i=new Image,s=new THREE.Texture(i,t),t=new THREE.ImageLoader;return t.addEventListener("load",function(e){s.image=e.content,s.needsUpdate=!0,n&&n(s)}),t.addEventListener("error",function(e){r&&r(e.message)}),t.crossOrigin=this.crossOrigin,t.load(e,i),s.sourceFile=e,s},loadCompressedTexture:function(e,t,n,r){var i=new THREE.CompressedTexture;i.mapping=t;var s=new XMLHttpRequest;return s.onload=function(){var e=THREE.ImageUtils.parseDDS(s.response,!0);i.format=e.format,i.mipmaps=e.mipmaps,i.image.width=e.width,i.image.height=e.height,i.generateMipmaps=!1,i.needsUpdate=!0,n&&n(i)},s.onerror=r,s.open("GET",e,!0),s.responseType="arraybuffer",s.send(null),i},loadTextureCube:function(e,t,n,r){var i=[];i.loadCount=0;var s=new THREE.Texture;s.image=i,void 0!==t&&(s.mapping=t),s.flipY=!1;for(var t=0,o=e.length;t<o;++t){var u=new Image;i[t]=u,u.onload=function(){i.loadCount=i.loadCount+1,i.loadCount===6&&(s.needsUpdate=!0,n&&n())},u.onerror=r,u.crossOrigin=this.crossOrigin,u.src=e[t]}return s},loadCompressedTextureCube:function(e,t,n,r){var i=[];i.loadCount=0;var s=new THREE.CompressedTexture;s.image=i,void 0!==t&&(s.mapping=t),s.flipY=!1,s.generateMipmaps=!1;for(var t=function(e,t){return function(){var r=THREE.ImageUtils.parseDDS(e.response,!0);t.format=r.format,t.mipmaps=r.mipmaps,t.width=r.width,t.height=r.height,i.loadCount=i.loadCount+1,i.loadCount===6&&(s.format=r.format,s.needsUpdate=!0,n&&n())}},o=0,u=e.length;o<u;++o){var a={};i[o]=a;var f=new XMLHttpRequest;f.onload=t(f,a),f.onerror=r,f.open("GET",e[o],!0),f.responseType="arraybuffer",f.send(null)}return s},parseDDS:function(e,t){function n(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}var r={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},i=n("DXT1"),s=n("DXT3"),o=n("DXT5"),u=new Int32Array(e,0,31);if(542327876!==u[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),r;if(!u[20]&4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),r;var a=u[21];switch(a){case i:i=8,r.format=THREE.RGB_S3TC_DXT1_Format;break;case s:i=16,r.format=THREE.RGBA_S3TC_DXT3_Format;break;case o:i=16,r.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(a&255,a>>8&255,a>>16&255,a>>24&255)),r}r.mipmapCount=1,u[2]&131072&&!1!==t&&(r.mipmapCount=Math.max(1,u[7])),r.width=u[4],r.height=u[3],u=u[1]+4,s=r.width,o=r.height;for(a=0;a<r.mipmapCount;a++){var f=Math.max(4,s)/4*Math.max(4,o)/4*i,l={data:new Uint8Array(e,u,f),width:s,height:o};r.mipmaps.push(l),u+=f,s=Math.max(.5*s,1),o=Math.max(.5*o,1)}return r},getNormalMap:function(e,t){var n=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]},t=t|1,r=e.width,i=e.height,s=document.createElement("canvas");s.width=r,s.height=i;var o=s.getContext("2d");o.drawImage(e,0,0);for(var u=o.getImageData(0,0,r,i).data,a=o.createImageData(r,i),f=a.data,l=0;l<r;l++)for(var c=0;c<i;c++){var h=0>c-1?0:c-1,p=c+1>i-1?i-1:c+1,d=0>l-1?0:l-1,v=l+1>r-1?r-1:l+1,m=[],g=[0,0,u[4*(c*r+l)]/255*t];m.push([-1,0,u[4*(c*r+d)]/255*t]),m.push([-1,-1,u[4*(h*r+d)]/255*t]),m.push([0,-1,u[4*(h*r+l)]/255*t]),m.push([1,-1,u[4*(h*r+v)]/255*t]),m.push([1,0,u[4*(c*r+v)]/255*t]),m.push([1,1,u[4*(p*r+v)]/255*t]),m.push([0,1,u[4*(p*r+l)]/255*t]),m.push([-1,1,u[4*(p*r+d)]/255*t]),h=[],d=m.length;for(p=0;p<d;p++){var v=m[p],y=m[(p+1)%d],v=[v[0]-g[0],v[1]-g[1],v[2]-g[2]],y=[y[0]-g[0],y[1]-g[1],y[2]-g[2]];h.push(n([v[1]*y[2]-v[2]*y[1],v[2]*y[0]-v[0]*y[2],v[0]*y[1]-v[1]*y[0]]))}m=[0,0,0];for(p=0;p<h.length;p++)m[0]+=h[p][0],m[1]+=h[p][1],m[2]+=h[p][2];m[0]/=h.length,m[1]/=h.length,m[2]/=h.length,g=4*(c*r+l),f[g]=255*((m[0]+1)/2)|0,f[g+1]=255*((m[1]+1)/2)|0,f[g+2]=255*m[2]|0,f[g+3]=255}return o.putImageData(a,0,0),s},generateDataTexture:function(e,t,n){for(var r=e*t,i=new Uint8Array(3*r),s=Math.floor(255*n.r),o=Math.floor(255*n.g),n=Math.floor(255*n.b),u=0;u<r;u++)i[3*u]=s,i[3*u+1]=o,i[3*u+2]=n;return e=new THREE.DataTexture(i,e,t,THREE.RGBFormat),e.needsUpdate=!0,e}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var n=new THREE.Object3D,r=0,i=t.length;r<i;r++)n.add(new THREE.Mesh(e,t[r]));return n},detach:function(e,t,n){e.applyMatrix(t.matrixWorld),t.remove(e),n.add(e)},attach:function(e,t,n){var r=new THREE.Matrix4;r.getInverse(n.matrixWorld),e.applyMatrix(r),t.remove(e),n.add(e)}},THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\nvec3 I = worldPosition.xyz - cameraPosition;\nvReflect = reflect( I, worldNormal );\nvRefract[0] = refract( normalize( I ), worldNormal, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), worldNormal ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"}}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase();return this.faces[t]=this.faces[t]||{},this.faces[t][e.cssFontWeight]=this.faces[t][e.cssFontWeight]||{},this.faces[t][e.cssFontWeight][e.cssFontStyle]=e,this.faces[t][e.cssFontWeight][e.cssFontStyle]=e},drawText:function(e){for(var t=this.getFace(),n=this.size/t.resolution,r=0,i=String(e).split(""),s=i.length,o=[],e=0;e<s;e++){var u=new THREE.Path,u=this.extractGlyphPoints(i[e],t,n,r,u),r=r+u.offset;o.push(u.path)}return{paths:o,offset:r/2}},extractGlyphPoints:function(e,t,n,r,i){var s=[],o,u,a,f,l,c,h,p,d,v,m,g=t.glyphs[e]||t.glyphs["?"];if(g){if(g.o){t=g._cachedOutline||(g._cachedOutline=g.o.split(" ")),f=t.length;for(e=0;e<f;)switch(a=t[e++],a){case"m":a=t[e++]*n+r,l=t[e++]*n,i.moveTo(a,l);break;case"l":a=t[e++]*n+r,l=t[e++]*n,i.lineTo(a,l);break;case"q":a=t[e++]*n+r,l=t[e++]*n,p=t[e++]*n+r,d=t[e++]*n,i.quadraticCurveTo(p,d,a,l);if(o=s[s.length-1]){c=o.x,h=o.y,o=1;for(u=this.divisions;o<=u;o++){var y=o/u;THREE.Shape.Utils.b2(y,c,p,a),THREE.Shape.Utils.b2(y,h,d,l)}}break;case"b":if(a=t[e++]*n+r,l=t[e++]*n,p=t[e++]*n+r,d=t[e++]*-n,v=t[e++]*n+r,m=t[e++]*-n,i.bezierCurveTo(a,l,p,d,v,m),o=s[s.length-1]){c=o.x,h=o.y,o=1;for(u=this.divisions;o<=u;o++)y=o/u,THREE.Shape.Utils.b3(y,c,p,v,a),THREE.Shape.Utils.b3(y,h,d,m,l)}}}return{offset:g.ha*n,path:i}}}},THREE.FontUtils.generateShapes=function(e,t){var t=t||{},n=void 0!==t.curveSegments?t.curveSegments:4,r=void 0!==t.font?t.font:"helvetiker",i=void 0!==t.weight?t.weight:"normal",s=void 0!==t.style?t.style:"normal";THREE.FontUtils.size=void 0!==t.size?t.size:100,THREE.FontUtils.divisions=n,THREE.FontUtils.face=r,THREE.FontUtils.weight=i,THREE.FontUtils.style=s,n=THREE.FontUtils.drawText(e).paths,r=[],i=0;for(s=n.length;i<s;i++)Array.prototype.push.apply(r,n[i].toShapes());return r},function(e){var t=function(e){for(var t=e.length,n=0,r=t-1,i=0;i<t;r=i++)n+=e[r].x*e[i].y-e[i].x*e[r].y;return.5*n};return e.Triangulate=function(e,n){var r=e.length;if(3>r)return null;var i=[],s=[],o=[],u,a,f;if(0<t(e))for(a=0;a<r;a++)s[a]=a;else for(a=0;a<r;a++)s[a]=r-1-a;var l=2*r;for(a=r-1;2<r;){if(0>=l--){console.log("Warning, unable to triangulate polygon!");break}u=a,r<=u&&(u=0),a=u+1,r<=a&&(a=0),f=a+1,r<=f&&(f=0);var c;e:{c=e;var h=u,p=a,d=f,v=r,m=s,g=void 0,y=void 0,w=void 0,E=void 0,S=void 0,x=void 0,T=void 0,N=void 0,C=void 0,y=c[m[h]].x,w=c[m[h]].y,E=c[m[p]].x,S=c[m[p]].y,x=c[m[d]].x,T=c[m[d]].y;if(1e-10>(E-y)*(T-w)-(S-w)*(x-y))c=!1;else{for(g=0;g<v;g++)if(g!=h&&g!=p&&g!=d){var N=c[m[g]].x,C=c[
m[g]].y,k=void 0,L=void 0,A=void 0,O=void 0,M=void 0,_=void 0,D=void 0,P=void 0,H=void 0,B=void 0,j=void 0,F=void 0,k=A=M=void 0,k=x-E,L=T-S,A=y-x,O=w-T,M=E-y,_=S-w,D=N-y,P=C-w,H=N-E,B=C-S,j=N-x,F=C-T,k=k*B-L*H,M=M*P-_*D,A=A*F-O*j;if(0<=k&&0<=A&&0<=M){c=!1;break e}}c=!0}}if(c){i.push([e[s[u]],e[s[a]],e[s[f]]]),o.push([s[u],s[a],s[f]]),u=a;for(f=a+1;f<r;u++,f++)s[u]=s[f];r--,l=2*r}}return n?o:i},e.Triangulate.area=t,e}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(e){return e=this.getUtoTmapping(e),this.getPoint(e)},THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,n=[];for(t=0;t<=e;t++)n.push(this.getPoint(t/e));return n},THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,n=[];for(t=0;t<=e;t++)n.push(this.getPointAt(t/e));return n},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t=[],n,r=this.getPoint(0),i,s=0;t.push(0);for(i=1;i<=e;i++)n=this.getPoint(i/e),s+=n.distanceTo(r),t.push(s),r=n;return this.cacheArcLengths=t},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){var n=this.getLengths(),r=0,i=n.length,s;s=t?t:e*n[i-1];for(var o=0,u=i-1,a;o<=u;)if(r=Math.floor(o+(u-o)/2),a=n[r]-s,0>a)o=r+1;else{if(!(0<a)){u=r;break}u=r-1}return r=u,n[r]==s?r/(i-1):(o=n[r],n=(r+(s-o)/(n[r+1]-o))/(i-1))},THREE.Curve.prototype.getNormalVector=function(e){return e=this.getTangent(e),new THREE.Vector2(-e.y,e.x)},THREE.Curve.prototype.getTangent=function(e){var t=e-1e-4,e=e+1e-4;return 0>t&&(t=0),1<e&&(e=1),t=this.getPoint(t),this.getPoint(e).clone().subSelf(t).normalize()},THREE.Curve.prototype.getTangentAt=function(e){return e=this.getUtoTmapping(e),this.getTangent(e)},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().subSelf(this.v1);return t.multiplyScalar(e).addSelf(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().subSelf(this.v1).normalize()},THREE.QuadraticBezierCurve=function(e,t,n){this.v0=e,this.v1=t,this.v2=n},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),e=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(t,e)},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t;return t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),e=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y),t=new THREE.Vector2(t,e),t.normalize(),t},THREE.CubicBezierCurve=function(e,t,n,r){this.v0=e,this.v1=t,this.v2=n,this.v3=r},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(e){var t;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,e)},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t;return t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t=new THREE.Vector2(t,e),t.normalize(),t},THREE.SplineCurve=function(e){this.points=void 0==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(e){var t=new THREE.Vector2,n=[],r=this.points,i;return i=(r.length-1)*e,e=Math.floor(i),i-=e,n[0]=0==e?e:e-1,n[1]=e,n[2]=e>r.length-2?r.length-1:e+1,n[3]=e>r.length-3?r.length-1:e+2,t.x=THREE.Curve.Utils.interpolate(r[n[0]].x,r[n[1]].x,r[n[2]].x,r[n[3]].x,i),t.y=THREE.Curve.Utils.interpolate(r[n[0]].y,r[n[1]].y,r[n[2]].y,r[n[3]].y,i),t},THREE.EllipseCurve=function(e,t,n,r,i,s,o){this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=s,this.aClockwise=o},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(e){var t=this.aEndAngle-this.aStartAngle;return this.aClockwise||(e=1-e),t=this.aStartAngle+e*t,e=this.aX+this.xRadius*Math.cos(t),t=this.aY+this.yRadius*Math.sin(t),new THREE.Vector2(e,t)},THREE.ArcCurve=function(e,t,n,r,i,s){THREE.EllipseCurve.call(this,e,t,n,n,r,i,s)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,n,r){return 2*(1-e)*(n-t)+2*e*(r-n)},tangentCubicBezier:function(e,t,n,r,i){return-3*t*(1-e)*(1-e)+3*n*(1-e)*(1-e)-6*e*n*(1-e)+6*e*r*(1-e)-3*e*e*r+3*e*e*i},tangentSpline:function(e){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,n,r,i){var e=.5*(n-e),r=.5*(r-t),s=i*i;return(2*t-2*n+e+r)*i*s+(-3*t+3*n-2*e-r)*s+e*i+t}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.getPoint=t,e},THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new THREE.Vector3;return t.sub(this.v2,this.v1),t.multiplyScalar(e),t.addSelf(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,n){this.v0=e,this.v1=t,this.v2=n},function(e){var t,n;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),n=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),e=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(t,n,e)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,n,r){this.v0=e,this.v1=t,this.v2=n,this.v3=r},function(e){var t,n;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),n=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),e=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(t,n,e)}),THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=new THREE.Vector3,n=[],r=this.points,i,e=(r.length-1)*e;i=Math.floor(e),e-=i,n[0]=0==i?i:i-1,n[1]=i,n[2]=i>r.length-2?r.length-1:i+1,n[3]=i>r.length-3?r.length-1:i+2,i=r[n[0]];var s=r[n[1]],o=r[n[2]],n=r[n[3]];return t.x=THREE.Curve.Utils.interpolate(i.x,s.x,o.x,n.x,e),t.y=THREE.Curve.Utils.interpolate(i.y,s.y,o.y,n.y,e),t.z=THREE.Curve.Utils.interpolate(i.z,s.z,o.z,n.z,e),t}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=new THREE.Vector3,n=[],r=this.points,i;return i=(r.length-0)*e,e=Math.floor(i),i-=e,e+=0<e?0:(Math.floor(Math.abs(e)/r.length)+1)*r.length,n[0]=(e-1)%r.length,n[1]=e%r.length,n[2]=(e+1)%r.length,n[3]=(e+2)%r.length,t.x=THREE.Curve.Utils.interpolate(r[n[0]].x,r[n[1]].x,r[n[2]].x,r[n[3]].x,i),t.y=THREE.Curve.Utils.interpolate(r[n[0]].y,r[n[1]].y,r[n[2]].y,r[n[3]].y,i),t.z=THREE.Curve.Utils.interpolate(r[n[0]].z,r[n[1]].z,r[n[2]].z,r[n[3]].z,i),t}),THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){for(var t=e*this.getLength(),n=this.getCurveLengths(),e=0;e<n.length;){if(n[e]>=t)return t=n[e]-t,e=this.curves[e],t=1-t/e.getLength(),e.getPointAt(t);e++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e=[],t=0,n,r=this.curves.length;for(n=0;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e},THREE.CurvePath.prototype.getBoundingBox=function(){var e=this.getPoints(),t,n,r,i,s,o;t=n=Number.NEGATIVE_INFINITY,i=s=Number.POSITIVE_INFINITY;var u,a,f,l,c=e[0]instanceof THREE.Vector3;l=c?new THREE.Vector3:new THREE.Vector2,a=0;for(f=e.length;a<f;a++)u=e[a],u.x>t?t=u.x:u.x<i&&(i=u.x),u.y>n?n=u.y:u.y<s&&(s=u.y),c&&(u.z>r?r=u.z:u.z<o&&(o=u.z)),l.addSelf(u);return e={minX:i,minY:s,maxX:t,maxY:n,centroid:l.divideScalar(f)},c&&(e.maxZ=r,e.minZ=o),e},THREE.CurvePath.prototype.createPointsGeometry=function(e){return e=this.getPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){return e=this.getSpacedPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,n=0;n<e.length;n++)t.vertices.push(new THREE.Vector3(e[n].x,e[n].y,e[n].z||0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var n=this.getPoints(e),r,i;t||(t=this.bends),r=0;for(i=t.length;r<i;r++)n=this.getWrapPoints(n,t[r]);return n},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var n=this.getSpacedPoints(e),r,i;t||(t=this.bends),r=0;for(i=t.length;r<i;r++)n=this.getWrapPoints(n,t[r]);return n},THREE.CurvePath.prototype.getWrapPoints=function(e,t){var n=this.getBoundingBox(),r,i,s,o,u,a;r=0;for(i=e.length;r<i;r++)s=e[r],o=s.x,u=s.y,a=o/n.maxX,a=t.getUtoTmapping(a,o),o=t.getPoint(a),u=t.getNormalVector(a).multiplyScalar(u),s.x=o.x+u.x,s.y=o.y+u.y;return e},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||e)this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0;for(var t=0,n=this.children.length;t<n;t++)this.children[t].updateMatrixWorld(e)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(e,t){var n=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:n})},THREE.Path.prototype.lineTo=function(e,t){var n=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,r=new THREE.LineCurve(new THREE.Vector2(r[r.length-2],r[r.length-1]),new THREE.Vector2(e,t));this.curves.push(r),this.actions.push({action:THREE.PathActions.LINE_TO,args:n})},THREE.Path.prototype.quadraticCurveTo=function(e,t,n,r){var i=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,s=new THREE.QuadraticBezierCurve(new THREE.Vector2(s[s.length-2],s[s.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(n,r));this.curves.push(s),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:i})},THREE.Path.prototype.bezierCurveTo=function(e,t,n,r,i,s){var o=Array.prototype.slice.call(arguments),u=this.actions[this.actions.length-1].args,u=new THREE.CubicBezierCurve(new THREE.Vector2(u[u.length-2],u[u.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(n,r),new THREE.Vector2(i,s));this.curves.push(u),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:o})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),n=this.actions[this.actions.length-1].args,n=[new THREE.Vector2(n[n.length-2],n[n.length-1])];Array.prototype.push.apply(n,e),n=new THREE.SplineCurve(n),this.curves.push(n),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,n,r,i,s){var o=this.actions[this.actions.length-1].args;this.absarc(e+o[o.length-2],t+o[o.length-1],n,r,i,s)},THREE.Path.prototype.absarc=function(e,t,n,r,i,s){this.absellipse(e,t,n,n,r,i,s)},THREE.Path.prototype.ellipse=function(e,t,n,r,i,s,o){var u=this.actions[this.actions.length-1].args;this.absellipse(e+u[u.length-2],t+u[u.length-1],n,r,i,s,o)},THREE.Path.prototype.absellipse=function(e,t,n,r,i,s,o){var u=Array.prototype.slice.call(arguments),a=new THREE.EllipseCurve(e,t,n,r,i,s,o);this.curves.push(a),a=a.getPoint(o?1:0),u.push(a.x),u.push(a.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:u})},THREE.Path.prototype.getSpacedPoints=function(e){e||(e=40);for(var t=[],n=0;n<e;n++)t.push(this.getPoint(n/e));return t},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);var e=e||12,n=[],r,i,s,o,u,a,f,l,c,h,p,d,v;r=0;for(i=this.actions.length;r<i;r++)switch(s=this.actions[r],o=s.action,s=s.args,o){case THREE.PathActions.MOVE_TO:n.push(new THREE.Vector2(s[0],s[1]));break;case THREE.PathActions.LINE_TO:n.push(new THREE.Vector2(s[0],s[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:u=s[2],a=s[3],c=s[0],h=s[1],0<n.length?(o=n[n.length-1],p=o.x,d=o.y):(o=this.actions[r-1].args,p=o[o.length-2],d=o[o.length-1]);for(s=1;s<=e;s++)v=s/e,o=THREE.Shape.Utils.b2(v,p,c,u),v=THREE.Shape.Utils.b2(v,d,h,a),n.push(new THREE.Vector2(o,v));break;case THREE.PathActions.BEZIER_CURVE_TO:u=s[4],a=s[5],c=s[0],h=s[1],f=s[2],l=s[3],0<n.length?(o=n[n.length-1],p=o.x,d=o.y):(o=this.actions[r-1].args,p=o[o.length-2],d=o[o.length-1]);for(s=1;s<=e;s++)v=s/e,o=THREE.Shape.Utils.b3(v,p,c,f,u),v=THREE.Shape.Utils.b3(v,d,h,l,a),n.push(new THREE.Vector2(o,v));break;case THREE.PathActions.CSPLINE_THRU:o=this.actions[r-1].args,v=[new THREE.Vector2(o[o.length-2],o[o.length-1])],o=e*s[0].length,v=v.concat(s[0]),v=new THREE.SplineCurve(v);for(s=1;s<=o;s++)n.push(v.getPointAt(s/o));break;case THREE.PathActions.ARC:u=s[0],a=s[1],h=s[2],f=s[3],o=s[4],c=!!s[5],p=o-f,d=2*e;for(s=1;s<=d;s++)v=s/d,c||(v=1-v),v=f+v*p,o=u+h*Math.cos(v),v=a+h*Math.sin(v),n.push(new THREE.Vector2(o,v));break;case THREE.PathActions.ELLIPSE:u=s[0],a=s[1],h=s[2],l=s[3],f=s[4],o=s[5],c=!!s[6],p=o-f,d=2*e;for(s=1;s<=d;s++)v=s/d,c||(v=1-v),v=f+v*p,o=u+h*Math.cos(v),v=a+l*Math.sin(v),n.push(new THREE.Vector2(o,v))}return r=n[n.length-1],1e-10>Math.abs(r.x-n[0].x)&&1e-10>Math.abs(r.y-n[0].y)&&n.splice(n.length-1,1),t&&n.push(n[0]),n},THREE.Path.prototype.toShapes=function(){var e,t,n,r,i=[],s=new THREE.Path;e=0;for(t=this.actions.length;e<t;e++)n=this.actions[e],r=n.args,n=n.action,n==THREE.PathActions.MOVE_TO&&0!=s.actions.length&&(i.push(s),s=new THREE.Path),s[n].apply(s,r);0!=s.actions.length&&i.push(s);if(0==i.length)return[];var o;r=[],e=!THREE.Shape.Utils.isClockWise(i[0].getPoints());if(1==i.length)return s=i[0],o=new THREE.Shape,o.actions=s.actions,o.curves=s.curves,r.push(o),r;if(e){o=new THREE.Shape,e=0;for(t=i.length;e<t;e++)s=i[e],THREE.Shape.Utils.isClockWise(s.getPoints())?(o.actions=s.actions,o.curves=s.curves,r.push(o),o=new THREE.Shape):o.holes.push(s)}else{e=0;for(t=i.length;e<t;e++)s=i[e],THREE.Shape.Utils.isClockWise(s.getPoints())?(o&&r.push(o),o=new THREE.Shape,o.actions=s.actions,o.curves=s.curves):o.holes.push(s);r.push(o)}return r},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)},THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)},THREE.Shape.prototype.getPointsHoles=function(e){var t,n=this.holes.length,r=[];for(t=0;t<n;t++)r[t]=this.holes[t].getTransformedPoints(e,this.bends);return r},THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,n=this.holes.length,r=[];for(t=0;t<n;t++)r[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return r},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={removeHoles:function(e,t){var n=e.concat(),r=n.concat(),i,s,o,u,a,f,l,c,h,p,d=[];for(a=0;a<t.length;a++){f=t[a],Array.prototype.push.apply(r,f),s=Number.POSITIVE_INFINITY;for(i=0;i<f.length;i++){h=f[i],p=[];for(c=0;c<n.length;c++)l=n[c],l=h.distanceToSquared(l),p.push(l),l<s&&(s=l,o=i,u=c)}i=0<=u-1?u-1:n.length-1,s=0<=o-1?o-1:f.length-1;var v=[f[o],n[u],n[i]];c=THREE.FontUtils.Triangulate.area(v);var m=[f[o],f[s],n[u]];h=THREE.FontUtils.Triangulate.area(m),p=u,l=o,u+=1,o+=-1,0>u&&(u+=n.length),u%=n.length,0>o&&(o+=f.length),o%=f.length,i=0<=u-1?u-1:n.length-1,s=0<=o-1?o-1:f.length-1,v=[f[o],n[u],n[i]],v=THREE.FontUtils.Triangulate.area(v),m=[f[o],f[s],n[u]],m=THREE.FontUtils.Triangulate.area(m),c+h>v+m&&(u=p,o=l,0>u&&(u+=n.length),u%=n.length,0>o&&(o+=f.length),o%=f.length,i=0<=u-1?u-1:n.length-1,s=0<=o-1?o-1:f.length-1),c=n.slice(0,u),h=n.slice(u),p=f.slice(o),l=f.slice(0,o),s=[f[o],f[s],n[u]],d.push([f[o],n[u],n[i]]),d.push(s),n=c.concat(p).concat(l).concat(h)}return{shape:n,isolatedPts:d,allpoints:r}},triangulateShape:function(e,t){var n=THREE.Shape.Utils.removeHoles(e,t),r=n.allpoints,i=n.isolatedPts,n=THREE.FontUtils.Triangulate(n.shape,!1),s,o,u,a,f={};s=0;for(o=r.length;s<o;s++)a=r[s].x+":"+r[s].y,void 0!==f[a]&&console.log("Duplicate point",a),f[a]=s;s=0;for(o=n.length;s<o;s++){u=n[s];for(r=0;3>r;r++)a=u[r].x+":"+u[r].y,a=f[a],void 0!==a&&(u[r]=a)}s=0;for(o=i.length;s<o;s++){u=i[s];for(r=0;3>r;r++)a=u[r].x+":"+u[r].y,a=f[a],void 0!==a&&(u[r]=a)}return n.concat(i)},isClockWise:function(e){return 0>THREE.FontUtils.Triangulate.area(e)},b2p0:function(e,t){var n=1-e;return n*n*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,n,r){return this.b2p0(e,t)+this.b2p1(e,n)+this.b2p2(e,r)},b3p0:function(e,t){var n=1-e;return n*n*n*t},b3p1:function(e,t){var n=1-e;return 3*n*n*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,n,r,i){return this.b3p0(e,t)+this.b3p1(e,n)+this.b3p2(e,r)+this.b3p3(e,i)}},THREE.AnimationHandler=function(){var e=[],t={},n={update:function(t){for(var n=0;n<e.length;n++)e[n].update(t)},addToUpdate:function(t){-1===e.indexOf(t)&&e.push(t)},removeFromUpdate:function(t){t=e.indexOf(t),-1!==t&&e.splice(t,1)},add:function(e){void 0!==t[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting."),t[e.name]=e;if(!0!==e.initialized){for(var n=0;n<e.hierarchy.length;n++){for(var r=0;r<e.hierarchy[n].keys.length;r++)if(0>e.hierarchy[n].keys[r].time&&(e.hierarchy[n].keys[r].time=0),void 0!==e.hierarchy[n].keys[r].rot&&!(e.hierarchy[n].keys[r].rot instanceof THREE.Quaternion)){var i=e.hierarchy[n].keys[r].rot;e.hierarchy[n].keys[r].rot=new THREE.Quaternion(i[0],i[1],i[2],i[3])}if(e.hierarchy[n].keys.length&&void 0!==e.hierarchy[n].keys[0].morphTargets){i={};for(r=0;r<e.hierarchy[n].keys.length;r++)for(var s=0;s<e.hierarchy[n].keys[r].morphTargets.length;s++){var o=e.hierarchy[n].keys[r].morphTargets[s];i[o]=-1}e.hierarchy[n].usedMorphTargets=i;for(r=0;r<e.hierarchy[n].keys.length;r++){var u={};for(o in i){for(s=0;s<e.hierarchy[n].keys[r].morphTargets.length;s++)if(e.hierarchy[n].keys[r].morphTargets[s]===o){u[o]=e.hierarchy[n].keys[r].morphTargetsInfluences[s];break}s===e.hierarchy[n].keys[r].morphTargets.length&&(u[o]=0)}e.hierarchy[n].keys[r].morphTargetsInfluences=u}}for(r=1;r<e.hierarchy[n].keys.length;r++)e.hierarchy[n].keys[r].time===e.hierarchy[n].keys[r-1].time&&(e.hierarchy[n].keys.splice(r,1),r--);for(r=0;r<e.hierarchy[n].keys.length;r++)e.hierarchy[n].keys[r].index=r}r=parseInt(e.length*e.fps,10),e.JIT={},e.JIT.hierarchy=[];for(n=0;n<e.hierarchy.length;n++)e.JIT.hierarchy.push(Array(r));e.initialized=!0}},get:function(e){if("string"==typeof e)return t[e]?t[e]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+e),null)},parse:function(e){var t=[];if(e instanceof THREE.SkinnedMesh)for(var n=0;n<e.bones.length;n++)t.push(e.bones[n]);else r(e,t);return t}},r=function(e,t){t.push(e);for(var n=0;n<e.children.length;n++)r(e.children[n],t)};return n.LINEAR=0,n.CATMULLROM=1,n.CATMULLROM_FORWARD=2,n}(),THREE.Animation=function(e,t,n){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=this.isPaused=!0,this.interpolationType=void 0!==n?n:THREE.AnimationHandler.LINEAR,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(e,t){if(!1===this.isPlaying){this.isPlaying=!0,this.loop=void 0!==e?e:!0,this.currentTime=void 0!==t?t:0;var n,r=this.hierarchy.length,i;for(n=0;n<r;n++){i=this.hierarchy[n],this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(i.useQuaternion=!0),i.matrixAutoUpdate=!0,void 0===i.animationCache&&(i.animationCache={},i.animationCache.prevKey={pos:0,rot:0,scl:0},i.animationCache.nextKey={pos:0,rot:0,scl:0},i.animationCache.originalMatrix=i instanceof THREE.Bone?i.skinMatrix:i.matrix);var s=i.animationCache.prevKey;i=i.animationCache.nextKey,s.pos=this.data.hierarchy[n].keys[0],s.rot=this.data.hierarchy[n].keys[0],s.scl=this.data.hierarchy[n].keys[0],i.pos=this.getNextKeyWith("pos",n,1),i.rot=this.getNextKeyWith("rot",n,1),i.scl=this.getNextKeyWith("scl",n,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.update=function(e){if(!1!==this.isPlaying){var t=["pos","rot","scl"],n,r,i,s,o,u,a,f,l;l=this.currentTime+=e*this.timeScale,f=this.currentTime%=this.data.length,parseInt(Math.min(f*this.data.fps,this.data.length*this.data.fps),10);for(var c=0,h=this.hierarchy.length;c<h;c++){e=this.hierarchy[c],a=e.animationCache;for(var p=0;3>p;p++){n=t[p],o=a.prevKey[n],u=a.nextKey[n];if(u.time<=l){if(f<l){if(!this.loop){this.stop();return}o=this.data.hierarchy[c].keys[0];for(u=this.getNextKeyWith(n,c,1);u.time<f;)o=u,u=this.getNextKeyWith(n,c,u.index+1)}else do o=u,u=this.getNextKeyWith(n,c,u.index+1);while(u.time<f);a.prevKey[n]=o,a.nextKey[n]=u}e.matrixAutoUpdate=!0,e.matrixWorldNeedsUpdate=!0,r=(f-o.time)/(u.time-o.time),i=o[n],s=u[n];if(0>r||1<r)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+r+" on bone "+c),r=0>r?0:1;if("pos"===n){if(n=e.position,this.interpolationType===THREE.AnimationHandler.LINEAR)n.x=i[0]+(s[0]-i[0])*r,n.y=i[1]+(s[1]-i[1])*r,n.z=i[2]+(s[2]-i[2])*r;else if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=this.getPrevKeyWith("pos",c,o.index-1).pos,this.points[1]=i,this.points[2]=s,this.points[3]=this.getNextKeyWith("pos",c,u.index+1).pos,r=.33*r+.33,i=this.interpolateCatmullRom(this.points,r),n.x=i[0],n.y=i[1],n.z=i[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(r=this.interpolateCatmullRom(this.points,1.01*r),this.target.set(r[0],r[1],r[2]),this.target.subSelf(n),this.target.y=0,this.target.normalize(),r=Math.atan2(this.target.x,this.target.z),e.rotation.set(0,r,0))}else"rot"===n?THREE.Quaternion.slerp(i,s,e.quaternion,r):"scl"===n&&(n=e.scale,n.x=i[0]+(s[0]-i[0])*r,n.y=i[1]+(s[1]-i[1])*r,n.z=i[2]+(s[2]-i[2])*r)}}}},THREE.Animation.prototype.interpolateCatmullRom=function(e,t){var n=[],r=[],i,s,o,u,a,f;return i=(e.length-1)*t,s=Math.floor(i),i-=s,n[0]=0===s?s:s-1,n[1]=s,n[2]=s>e.length-2?s:s+1,n[3]=s>e.length-3?s:s+2,s=e[n[0]],u=e[n[1]],a=e[n[2]],f=e[n[3]],n=i*i,o=i*n,r[0]=this.interpolate(s[0],u[0],a[0],f[0],i,n,o),r[1]=this.interpolate(s[1],u[1],a[1],f[1],i,n,o),r[2]=this.interpolate(s[2],u[2],a[2],f[2],i,n,o),r},THREE.Animation.prototype.interpolate=function(e,t,n,r,i,s,o){return e=.5*(n-e),r=.5*(r-t),(2*(t-n)+e+r)*o+(-3*(t-n)-2*e-r)*s+e*i+t},THREE.Animation.prototype.getNextKeyWith=function(e,t,n){for(var r=this.data.hierarchy[t].keys,n=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?n<r.length-1?n:r.length-1:n%r.length;n<r.length;n++)if(void 0!==r[n][e])return r[n];return this.data.hierarchy[t].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(e,t,n){for(var r=this.data.hierarchy[t].keys,n=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<n?n:0:0<=n?n:n+r.length;0<=n;n--)if(void 0!==r[n][e])return r[n];return this.data.hierarchy[t].keys[r.length-1]},THREE.KeyFrameAnimation=function(e,t,n){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.loop=this.isPaused=!0,this.JITCompile=void 0!==n?n:!0,e=0;for(t=this.hierarchy.length;e<t;e++){var n=this.data.hierarchy[e].sids,r=this.hierarchy[e];if(this.data.hierarchy[e].keys.length&&n){for(var i=0;i<n.length;i++){var s=n[i],o=this.getNextKeyWith(s,e,0);o&&o.apply(s)}r.matrixAutoUpdate=!1,this.data.hierarchy[e].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(e,t){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0!==e?e:!0,this.currentTime=void 0!==t?t:0,this.startTimeMs=t,this.startTime=1e7,this.endTime=-this.startTime;var n,r=this.hierarchy.length,i,s;for(n=0;n<r;n++)if(i=this.hierarchy[n],s=this.data.hierarchy[n],i.useQuaternion=!0,void 0===s.animationCache&&(s.animationCache={},s.animationCache.prevKey=null,s.animationCache.nextKey=null,s.animationCache.originalMatrix=i instanceof THREE.Bone?i.skinMatrix:i.matrix),i=this.data.hierarchy[n].keys,i.length)s.animationCache.prevKey=i[0],s.animationCache.nextKey=i[1],this.startTime=Math.min(i[0].time,this.startTime),this.endTime=Math.max(i[i.length-1].time,this.endTime);this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],n=this.data.hierarchy[e];if(void 0!==n.animationCache){var r=n.animationCache.originalMatrix;t instanceof THREE.Bone?(r.copy(t.skinMatrix),t.skinMatrix=r):(r.copy(t.matrix),t.matrix=r),delete n.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(e){if(this.isPlaying){var t,n,r,i,s=this.data.JIT.hierarchy,o,u,a;u=this.currentTime+=e*this.timeScale,o=this.currentTime%=this.data.length,o<this.startTimeMs&&(o=this.currentTime=this.startTimeMs+o),i=parseInt(Math.min(o*this.data.fps,this.data.length*this.data.fps),10);if((a=o<u)&&!this.loop){for(var e=0,f=this.hierarchy.length;e<f;e++){var l=this.data.hierarchy[e].keys,s=this.data.hierarchy[e].sids;r=l.length-1,i=this.hierarchy[e];if(l.length){for(l=0;l<s.length;l++)o=s[l],(u=this.getPrevKeyWith(o,e,r))&&u.apply(o);this.data.hierarchy[e].node.updateMatrix(),i.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(o<this.startTime)){e=0;for(f=this.hierarchy.length;e<f;e++){r=this.hierarchy[e],t=this.data.hierarchy[e];var l=t.keys,c=t.animationCache;if(this.JITCompile&&void 0!==s[e][i])r instanceof THREE.Bone?(r.skinMatrix=s[e][i],r.matrixWorldNeedsUpdate=!1):(r.matrix=s[e][i],r.matrixWorldNeedsUpdate=!0);else if(l.length){this.JITCompile&&c&&(r instanceof THREE.Bone?r.skinMatrix=c.originalMatrix:r.matrix=c.originalMatrix),t=c.prevKey,n=c.nextKey;if(t&&n){if(n.time<=u){if(a&&this.loop){t=l[0];for(n=l[1];n.time<o;)t=n,n=l[t.index+1]}else if(!a)for(var h=l.length-1;n.time<o&&n.index!==h;)t=n,n=l[t.index+1];c.prevKey=t,c.nextKey=n}n.time>=o?t.interpolate(n,o):t.interpolate(n,n.time)}this.data.hierarchy[e].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===s[0][i]){this.hierarchy[0].updateMatrixWorld(!0);for(e=0;e<this.hierarchy.length;e++)s[e][i]=this.hierarchy[e]instanceof THREE.Bone?this.hierarchy[e].skinMatrix.clone():this.hierarchy[e].matrix.clone()}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,n){t=this.data.hierarchy[t].keys;for(n%=t.length;n<t.length;n++)if(t[n].hasTarget(e))return t[n];return t[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,n){t=this.data.hierarchy[t].keys;for(n=0<=n?n:n+t.length;0<=n;n--)if(t[n].hasTarget(e))return t[n];return t[t.length-1]},THREE.CubeCamera=function(e,t,n){THREE.Object3D.call(this);var r=new THREE.PerspectiveCamera(90,1,e,t);r.up.set(0,-1,0),r.lookAt(new THREE.Vector3(1,0,0)),this.add(r);var i=new THREE.PerspectiveCamera(90,1,e,t);i.up.set(0,-1,0),i.lookAt(new THREE.Vector3(-1,0,0)),this.add(i);var s=new THREE.PerspectiveCamera(90,1,e,t);s.up.set(0,0,1),s.lookAt(new THREE.Vector3(0,1,0)),this.add(s);var o=new THREE.PerspectiveCamera(90,1,e,t);o.up.set(0,0,-1),o.lookAt(new THREE.Vector3(0,-1,0)),this.add(o);var u=new THREE.PerspectiveCamera(90,1,e,t);u.up.set(0,-1,0),u.lookAt(new THREE.Vector3(0,0,1)),this.add(u);var a=new THREE.PerspectiveCamera(90,1,e,t);a.up.set(0,-1,0),a.lookAt(new THREE.Vector3(0,0,-1)),this.add(a),this.renderTarget=new THREE.WebGLRenderTargetCube(n,n,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var n=this.renderTarget,l=n.generateMipmaps;n.generateMipmaps=!1,n.activeCubeFace=0,e.render(t,r,n),n.activeCubeFace=1,e.render(t,i,n),n.activeCubeFace=2,e.render(t,s,n),n.activeCubeFace=3,e.render(t,o,n),n.activeCubeFace=4,e.render(t,u,n),n.generateMipmaps=l,n.activeCubeFace=5,e.render(t,a,n)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(e,t,n,r,i,s,o){THREE.Camera.call(this),this.fov=n,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2,this.cameraO=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,s,o),this.cameraP=new THREE.PerspectiveCamera(n,e/t,r,i),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var e=this.cameraP.aspect,t=(this.cameraP.near+this.cameraP.far)/2,t=Math.tan(this.fov/2)*t,e=2*t*e/2,t=t/this.zoom,e=e/this.zoom;this.cameraO.left=-e,this.cameraO.right=e,this.cameraO.top=t,this.cameraO.bottom=-t,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2},THREE.CombinedCamera.prototype.setFov=function(e){this.fov=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE
.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);var n=2*Math.atan(t/(2*e))*(180/Math.PI);return this.setFov(n),n},THREE.CombinedCamera.prototype.setZoom=function(e){this.zoom=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.AsteriskGeometry=function(e,t){THREE.Geometry.call(this);for(var n=.707*e,r=.707*t,n=[[e,0,0],[t,0,0],[-e,0,0],[-t,0,0],[0,e,0],[0,t,0],[0,-e,0],[0,-t,0],[0,0,e],[0,0,t],[0,0,-e],[0,0,-t],[n,n,0],[r,r,0],[-n,-n,0],[-r,-r,0],[n,-n,0],[r,-r,0],[-n,n,0],[-r,r,0],[n,0,n],[r,0,r],[-n,0,-n],[-r,0,-r],[n,0,-n],[r,0,-r],[-n,0,n],[-r,0,r],[0,n,n],[0,r,r],[0,-n,-n],[0,-r,-r],[0,n,-n],[0,r,-r],[0,-n,n],[0,-r,r]],r=0,i=n.length;r<i;r++)this.vertices.push(new THREE.Vector3(n[r][0],n[r][1],n[r][2]))},THREE.AsteriskGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry=function(e,t,n,r){THREE.Geometry.call(this);var e=e||50,n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI,t=void 0!==t?Math.max(3,t):8,i,s=[];i=new THREE.Vector3;var o=new THREE.UV(.5,.5);this.vertices.push(i),s.push(o);for(i=0;i<=t;i++){var u=new THREE.Vector3;u.x=e*Math.cos(n+i/t*r),u.y=e*Math.sin(n+i/t*r),this.vertices.push(u),s.push(new THREE.UV((u.x/e+1)/2,-(u.y/e+1)/2+1))}n=new THREE.Vector3(0,0,-1);for(i=1;i<=t;i++)this.faces.push(new THREE.Face3(i,i+1,0,[n,n,n])),this.faceVertexUvs[0].push([s[i],s[i+1],o]);this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere={radius:e}},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(e,t,n,r,i,s){function o(e,t,n,r,i,s,o,a){var f,l=u.widthSegments,c=u.heightSegments,p=i/2,d=s/2,v=u.vertices.length;if("x"===e&&"y"===t||"y"===e&&"x"===t)f="z";else if("x"===e&&"z"===t||"z"===e&&"x"===t)f="y",c=u.depthSegments;else if("z"===e&&"y"===t||"y"===e&&"z"===t)f="x",l=u.depthSegments;var m=l+1,g=c+1,y=i/l,b=s/c,w=new THREE.Vector3;w[f]=0<o?1:-1;for(i=0;i<g;i++)for(s=0;s<m;s++){var E=new THREE.Vector3;E[e]=(s*y-p)*n,E[t]=(i*b-d)*r,E[f]=o,u.vertices.push(E)}for(i=0;i<c;i++)for(s=0;s<l;s++)e=new THREE.Face4(s+m*i+v,s+m*(i+1)+v,s+1+m*(i+1)+v,s+1+m*i+v),e.normal.copy(w),e.vertexNormals.push(w.clone(),w.clone(),w.clone(),w.clone()),e.materialIndex=a,u.faces.push(e),u.faceVertexUvs[0].push([new THREE.UV(s/l,1-i/c),new THREE.UV(s/l,1-(i+1)/c),new THREE.UV((s+1)/l,1-(i+1)/c),new THREE.UV((s+1)/l,1-i/c)])}THREE.Geometry.call(this);var u=this;this.width=e,this.height=t,this.depth=n,this.widthSegments=r||1,this.heightSegments=i||1,this.depthSegments=s||1,e=this.width/2,t=this.height/2,n=this.depth/2,o("z","y",-1,-1,this.depth,this.height,e,0),o("z","y",1,-1,this.depth,this.height,-e,1),o("x","z",1,1,this.width,this.depth,t,2),o("x","z",1,-1,this.width,this.depth,-t,3),o("x","y",1,-1,this.width,this.height,n,4),o("x","y",-1,-1,this.width,this.height,-n,5),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry=function(e,t,n,r,i,s){THREE.Geometry.call(this);var e=void 0!==e?e:20,t=void 0!==t?t:20,n=void 0!==n?n:100,o=n/2,r=r||8,i=i||1,u,a,f=[],l=[];for(a=0;a<=i;a++){var c=[],h=[],p=a/i,d=p*(t-e)+e;for(u=0;u<=r;u++){var v=u/r,m=new THREE.Vector3;m.x=d*Math.sin(2*v*Math.PI),m.y=-p*n+o,m.z=d*Math.cos(2*v*Math.PI),this.vertices.push(m),c.push(this.vertices.length-1),h.push(new THREE.UV(v,1-p))}f.push(c),l.push(h)}n=(t-e)/n;for(u=0;u<r;u++){0!==e?(c=this.vertices[f[0][u]].clone(),h=this.vertices[f[0][u+1]].clone()):(c=this.vertices[f[1][u]].clone(),h=this.vertices[f[1][u+1]].clone()),c.setY(Math.sqrt(c.x*c.x+c.z*c.z)*n).normalize(),h.setY(Math.sqrt(h.x*h.x+h.z*h.z)*n).normalize();for(a=0;a<i;a++){var p=f[a][u],d=f[a+1][u],v=f[a+1][u+1],m=f[a][u+1],g=c.clone(),y=c.clone(),b=h.clone(),w=h.clone(),E=l[a][u].clone(),S=l[a+1][u].clone(),x=l[a+1][u+1].clone(),T=l[a][u+1].clone();this.faces.push(new THREE.Face4(p,d,v,m,[g,y,b,w])),this.faceVertexUvs[0].push([E,S,x,T])}}if(!s&&0<e){this.vertices.push(new THREE.Vector3(0,o,0));for(u=0;u<r;u++)p=f[0][u],d=f[0][u+1],v=this.vertices.length-1,g=new THREE.Vector3(0,1,0),y=new THREE.Vector3(0,1,0),b=new THREE.Vector3(0,1,0),E=l[0][u].clone(),S=l[0][u+1].clone(),x=new THREE.UV(S.u,0),this.faces.push(new THREE.Face3(p,d,v,[g,y,b])),this.faceVertexUvs[0].push([E,S,x])}if(!s&&0<t){this.vertices.push(new THREE.Vector3(0,-o,0));for(u=0;u<r;u++)p=f[a][u+1],d=f[a][u],v=this.vertices.length-1,g=new THREE.Vector3(0,-1,0),y=new THREE.Vector3(0,-1,0),b=new THREE.Vector3(0,-1,0),E=l[a][u+1].clone(),S=l[a][u].clone(),x=new THREE.UV(S.u,1),this.faces.push(new THREE.Face3(p,d,v,[g,y,b])),this.faceVertexUvs[0].push([E,S,x])}this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(e,t){"undefined"!=typeof e&&(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var n=e.length,r=0;r<n;r++)this.addShape(e[r],t)},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function n(e,t,n){return t||console.log("die"),t.clone().multiplyScalar(n).addSelf(e)}function r(e,t,n){var r=THREE.ExtrudeGeometry.__v1,i=THREE.ExtrudeGeometry.__v2,s=THREE.ExtrudeGeometry.__v3,o=THREE.ExtrudeGeometry.__v4,u=THREE.ExtrudeGeometry.__v5,a=THREE.ExtrudeGeometry.__v6;return r.set(e.x-t.x,e.y-t.y),i.set(e.x-n.x,e.y-n.y),r=r.normalize(),i=i.normalize(),s.set(-r.y,r.x),o.set(i.y,-i.x),u.copy(e).addSelf(s),a.copy(e).addSelf(o),u.equals(a)?o.clone():(u.copy(t).addSelf(s),a.copy(n).addSelf(o),s=r.dot(o),o=a.subSelf(u).dot(o),0===s&&(console.log("Either infinite or no solutions!"),0===o?console.log("Its finite solutions."):console.log("Too bad, no solutions.")),o/=s,0>o?(t=Math.atan2(t.y-e.y,t.x-e.x),e=Math.atan2(n.y-e.y,n.x-e.x),t>e&&(e+=2*Math.PI),n=(t+e)/2,e=-Math.cos(n),n=-Math.sin(n),new THREE.Vector2(e,n)):r.multiplyScalar(o).addSelf(u).subSelf(e).clone())}function i(n,r){var i,s;for(F=n.length;0<=--F;){i=F,s=F-1,0>s&&(s=n.length-1);for(var o=0,u=h+2*l,o=0;o<u;o++){var a=H*o,f=H*(o+1),c=r+i+a,a=r+s+a,p=r+s+f,f=r+i+f,d=n,v=o,m=u,b=i,w=s,c=c+k,a=a+k,p=p+k,f=f+k;C.faces.push(new THREE.Face4(c,a,p,f,null,null,g)),c=y.generateSideWallUV(C,e,d,t,c,a,p,f,v,m,b,w),C.faceVertexUvs[0].push(c)}}}function s(e,t,n){C.vertices.push(new THREE.Vector3(e,t,n))}function o(n,r,i,s){n+=k,r+=k,i+=k,C.faces.push(new THREE.Face3(n,r,i,null,null,m)),n=s?y.generateBottomUV(C,e,t,n,r,i):y.generateTopUV(C,e,t,n,r,i),C.faceVertexUvs[0].push(n)}var u=void 0!==t.amount?t.amount:100,a=void 0!==t.bevelThickness?t.bevelThickness:6,f=void 0!==t.bevelSize?t.bevelSize:a-2,l=void 0!==t.bevelSegments?t.bevelSegments:3,c=void 0!==t.bevelEnabled?t.bevelEnabled:!0,h=void 0!==t.steps?t.steps:1,p=t.extrudePath,d,v=!1,m=t.material,g=t.extrudeMaterial,y=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,b,w,E,S;p&&(d=p.getSpacedPoints(h),v=!0,c=!1,b=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(p,h,!1),w=new THREE.Vector3,E=new THREE.Vector3,S=new THREE.Vector3),c||(f=a=l=0);var x,T,N,C=this,k=this.vertices.length,p=e.extractPoints(),L=p.shape,p=p.holes,A=!THREE.Shape.Utils.isClockWise(L);if(A){L=L.reverse(),T=0;for(N=p.length;T<N;T++)x=p[T],THREE.Shape.Utils.isClockWise(x)&&(p[T]=x.reverse());A=!1}var O=THREE.Shape.Utils.triangulateShape(L,p),A=L;T=0;for(N=p.length;T<N;T++)x=p[T],L=L.concat(x);var M,_,D,P,H=L.length,B=O.length,j=[],F=0,I=A.length;M=I-1;for(_=F+1;F<I;F++,M++,_++)M===I&&(M=0),_===I&&(_=0),j[F]=r(A[F],A[M],A[_]);var q=[],R,U=j.concat();T=0;for(N=p.length;T<N;T++){x=p[T],R=[],F=0,I=x.length,M=I-1;for(_=F+1;F<I;F++,M++,_++)M===I&&(M=0),_===I&&(_=0),R[F]=r(x[F],x[M],x[_]);q.push(R),U=U.concat(R)}for(M=0;M<l;M++){x=M/l,D=a*(1-x),_=f*Math.sin(x*Math.PI/2),F=0;for(I=A.length;F<I;F++)P=n(A[F],j[F],_),s(P.x,P.y,-D);T=0;for(N=p.length;T<N;T++){x=p[T],R=q[T],F=0;for(I=x.length;F<I;F++)P=n(x[F],R[F],_),s(P.x,P.y,-D)}}_=f;for(F=0;F<H;F++)P=c?n(L[F],U[F],_):L[F],v?(E.copy(b.normals[0]).multiplyScalar(P.x),w.copy(b.binormals[0]).multiplyScalar(P.y),S.copy(d[0]).addSelf(E).addSelf(w),s(S.x,S.y,S.z)):s(P.x,P.y,0);for(x=1;x<=h;x++)for(F=0;F<H;F++)P=c?n(L[F],U[F],_):L[F],v?(E.copy(b.normals[x]).multiplyScalar(P.x),w.copy(b.binormals[x]).multiplyScalar(P.y),S.copy(d[x]).addSelf(E).addSelf(w),s(S.x,S.y,S.z)):s(P.x,P.y,u/h*x);for(M=l-1;0<=M;M--){x=M/l,D=a*(1-x),_=f*Math.sin(x*Math.PI/2),F=0;for(I=A.length;F<I;F++)P=n(A[F],j[F],_),s(P.x,P.y,u+D);T=0;for(N=p.length;T<N;T++){x=p[T],R=q[T],F=0;for(I=x.length;F<I;F++)P=n(x[F],R[F],_),v?s(P.x,P.y+d[h-1].y,d[h-1].x+D):s(P.x,P.y,u+D)}}if(c){a=0*H;for(F=0;F<B;F++)u=O[F],o(u[2]+a,u[1]+a,u[0]+a,!0);a=H*(h+2*l);for(F=0;F<B;F++)u=O[F],o(u[0]+a,u[1]+a,u[2]+a,!1)}else{for(F=0;F<B;F++)u=O[F],o(u[2],u[1],u[0],!0);for(F=0;F<B;F++)u=O[F],o(u[0]+H*h,u[1]+H*h,u[2]+H*h,!1)}u=0,i(A,u),u+=A.length,T=0;for(N=p.length;T<N;T++)x=p[T],i(x,u),u+=x.length},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,n,r,i,s){return t=e.vertices[i].x,i=e.vertices[i].y,n=e.vertices[s].x,s=e.vertices[s].y,[new THREE.UV(e.vertices[r].x,e.vertices[r].y),new THREE.UV(t,i),new THREE.UV(n,s)]},generateBottomUV:function(e,t,n,r,i,s){return this.generateTopUV(e,t,n,r,i,s)},generateSideWallUV:function(e,t,n,r,i,s,o,u){var t=e.vertices[i].x,n=e.vertices[i].y,i=e.vertices[i].z,r=e.vertices[s].x,a=e.vertices[s].y,s=e.vertices[s].z,f=e.vertices[o].x,l=e.vertices[o].y,o=e.vertices[o].z,c=e.vertices[u].x,h=e.vertices[u].y,e=e.vertices[u].z;return.01>Math.abs(n-a)?[new THREE.UV(t,1-i),new THREE.UV(r,1-s),new THREE.UV(f,1-o),new THREE.UV(c,1-e)]:[new THREE.UV(n,1-i),new THREE.UV(a,1-s),new THREE.UV(l,1-o),new THREE.UV(h,1-e)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),0==e instanceof Array&&(e=[e]),this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var n=0,r=e.length;n<r;n++)this.addShape(e[n],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var n=t.material,r=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,i,s,o,u=this.vertices.length;i=e.extractPoints();var a=i.shape,f=i.holes;if(!THREE.Shape.Utils.isClockWise(a)){a=a.reverse(),i=0;for(s=f.length;i<s;i++)o=f[i],THREE.Shape.Utils.isClockWise(o)&&(f[i]=o.reverse())}var l=THREE.Shape.Utils.triangulateShape(a,f);i=0;for(s=f.length;i<s;i++)o=f[i],a=a.concat(o);f=a.length,s=l.length;for(i=0;i<f;i++)o=a[i],this.vertices.push(new THREE.Vector3(o.x,o.y,0));for(i=0;i<s;i++)f=l[i],a=f[0]+u,o=f[1]+u,f=f[2]+u,this.faces.push(new THREE.Face3(a,o,f,null,null,n)),this.faceVertexUvs[0].push(r.generateBottomUV(this,e,t,a,o,f))},THREE.LatheGeometry=function(e,t,n){THREE.Geometry.call(this);for(var t=t||12,n=n||2*Math.PI,r=[],i=(new THREE.Matrix4).makeRotationZ(n/t),s=0;s<e.length;s++)r[s]=e[s].clone(),this.vertices.push(r[s]);for(var o=t+1,n=0;n<o;n++)for(s=0;s<r.length;s++)r[s]=i.multiplyVector3(r[s].clone()),this.vertices.push(r[s]);for(n=0;n<t;n++){r=0;for(i=e.length;r<i-1;r++)this.faces.push(new THREE.Face4(n*i+r,(n+1)%o*i+r,(n+1)%o*i+(r+1)%i,n*i+(r+1)%i)),this.faceVertexUvs[0].push([new THREE.UV(1-n/t,r/i),new THREE.UV(1-(n+1)/t,r/i),new THREE.UV(1-(n+1)/t,(r+1)/i),new THREE.UV(1-n/t,(r+1)/i)])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(e,t,n,r){THREE.Geometry.call(this),this.width=e,this.height=t,this.widthSegments=n||1,this.heightSegments=r||1;for(var n=e/2,i=t/2,r=this.widthSegments,s=this.heightSegments,o=r+1,u=s+1,a=this.width/r,f=this.height/s,l=new THREE.Vector3(0,0,1),e=0;e<u;e++)for(t=0;t<o;t++)this.vertices.push(new THREE.Vector3(t*a-n,-(e*f-i),0));for(e=0;e<s;e++)for(t=0;t<r;t++)n=new THREE.Face4(t+o*e,t+o*(e+1),t+1+o*(e+1),t+1+o*e),n.normal.copy(l),n.vertexNormals.push(l.clone(),l.clone(),l.clone(),l.clone()),this.faces.push(n),this.faceVertexUvs[0].push([new THREE.UV(t/r,1-e/s),new THREE.UV(t/r,1-(e+1)/s),new THREE.UV((t+1)/r,1-(e+1)/s),new THREE.UV((t+1)/r,1-e/s)]);this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(e,t,n,r,i,s,o){THREE.Geometry.call(this),this.radius=e||50,this.widthSegments=Math.max(3,Math.floor(t)||8),this.heightSegments=Math.max(2,Math.floor(n)||6);for(var r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI,s=void 0!==s?s:0,o=void 0!==o?o:Math.PI,n=[],u=[],t=0;t<=this.heightSegments;t++){for(var a=[],f=[],e=0;e<=this.widthSegments;e++){var l=e/this.widthSegments,c=t/this.heightSegments,h=new THREE.Vector3;h.x=-this.radius*Math.cos(r+l*i)*Math.sin(s+c*o),h.y=this.radius*Math.cos(s+c*o),h.z=this.radius*Math.sin(r+l*i)*Math.sin(s+c*o),this.vertices.push(h),a.push(this.vertices.length-1),f.push(new THREE.UV(l,1-c))}n.push(a),u.push(f)}for(t=0;t<this.heightSegments;t++)for(e=0;e<this.widthSegments;e++){var r=n[t][e+1],i=n[t][e],s=n[t+1][e],o=n[t+1][e+1],a=this.vertices[r].clone().normalize(),f=this.vertices[i].clone().normalize(),l=this.vertices[s].clone().normalize(),c=this.vertices[o].clone().normalize(),h=u[t][e+1].clone(),p=u[t][e].clone(),d=u[t+1][e].clone(),v=u[t+1][e+1].clone();Math.abs(this.vertices[r].y)===this.radius?(this.faces.push(new THREE.Face3(r,s,o,[a,l,c])),this.faceVertexUvs[0].push([h,d,v])):Math.abs(this.vertices[s].y)===this.radius?(this.faces.push(new THREE.Face3(r,i,s,[a,f,l])),this.faceVertexUvs[0].push([h,p,d])):(this.faces.push(new THREE.Face4(r,i,s,o,[a,f,l,c])),this.faceVertexUvs[0].push([h,p,d,v]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere={radius:this.radius}},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(e,t){var n=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,n,t)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(e,t,n,r,i){THREE.Geometry.call(this),this.radius=e||100,this.tube=t||40,this.radialSegments=n||8,this.tubularSegments=r||6,this.arc=i||2*Math.PI,i=new THREE.Vector3,e=[],t=[];for(n=0;n<=this.radialSegments;n++)for(r=0;r<=this.tubularSegments;r++){var s=r/this.tubularSegments*this.arc,o=2*n/this.radialSegments*Math.PI;i.x=this.radius*Math.cos(s),i.y=this.radius*Math.sin(s);var u=new THREE.Vector3;u.x=(this.radius+this.tube*Math.cos(o))*Math.cos(s),u.y=(this.radius+this.tube*Math.cos(o))*Math.sin(s),u.z=this.tube*Math.sin(o),this.vertices.push(u),e.push(new THREE.UV(r/this.tubularSegments,n/this.radialSegments)),t.push(u.clone().subSelf(i).normalize())}for(n=1;n<=this.radialSegments;n++)for(r=1;r<=this.tubularSegments;r++){var i=(this.tubularSegments+1)*n+r-1,s=(this.tubularSegments+1)*(n-1)+r-1,o=(this.tubularSegments+1)*(n-1)+r,u=(this.tubularSegments+1)*n+r,a=new THREE.Face4(i,s,o,u,[t[i],t[s],t[o],t[u]]);a.normal.addSelf(t[i]),a.normal.addSelf(t[s]),a.normal.addSelf(t[o]),a.normal.addSelf(t[u]),a.normal.normalize(),this.faces.push(a),this.faceVertexUvs[0].push([e[i].clone(),e[s].clone(),e[o].clone(),e[u].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(e,t,n,r,i,s,o){function u(e,t,n,r,i,s){var o=Math.cos(e);return Math.cos(t),t=Math.sin(e),e*=n/r,n=Math.cos(e),o*=.5*i*(2+n),t=.5*i*(2+n)*t,i=.5*s*i*Math.sin(e),new THREE.Vector3(o,t,i)}THREE.Geometry.call(this),this.radius=e||200,this.tube=t||40,this.radialSegments=n||64,this.tubularSegments=r||8,this.p=i||2,this.q=s||3,this.heightScale=o||1,this.grid=Array(this.radialSegments),n=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Vector3;for(e=0;e<this.radialSegments;++e){this.grid[e]=Array(this.tubularSegments);for(t=0;t<this.tubularSegments;++t){var a=2*(e/this.radialSegments)*this.p*Math.PI,o=2*(t/this.tubularSegments)*Math.PI,s=u(a,o,this.q,this.p,this.radius,this.heightScale),a=u(a+.01,o,this.q,this.p,this.radius,this.heightScale);n.sub(a,s),r.add(a,s),i.cross(n,r),r.cross(i,n),i.normalize(),r.normalize(),a=-this.tube*Math.cos(o),o=this.tube*Math.sin(o),s.x+=a*r.x+o*i.x,s.y+=a*r.y+o*i.y,s.z+=a*r.z+o*i.z,this.grid[e][t]=this.vertices.push(new THREE.Vector3(s.x,s.y,s.z))-1}}for(e=0;e<this.radialSegments;++e)for(t=0;t<this.tubularSegments;++t){var i=(e+1)%this.radialSegments,s=(t+1)%this.tubularSegments,n=this.grid[e][t],r=this.grid[i][t],i=this.grid[i][s],s=this.grid[e][s],o=new THREE.UV(e/this.radialSegments,t/this.tubularSegments),a=new THREE.UV((e+1)/this.radialSegments,t/this.tubularSegments),f=new THREE.UV((e+1)/this.radialSegments,(t+1)/this.tubularSegments),l=new THREE.UV(e/this.radialSegments,(t+1)/this.tubularSegments);this.faces.push(new THREE.Face4(n,r,i,s)),this.faceVertexUvs[0].push([o,a,f,l])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(e,t,n,r,i,s){THREE.Geometry.call(this),this.path=e,this.segments=t||64,this.radius=n||1,this.radiusSegments=r||8,this.closed=i||!1,s&&(this.debug=new THREE.Object3D),this.grid=[];var o,u,s=this.segments+1,a,f,l,c=new THREE.Vector3,h,p,d,t=new THREE.TubeGeometry.FrenetFrames(e,t,i);h=t.tangents,p=t.normals,d=t.binormals,this.tangents=h,this.normals=p,this.binormals=d;for(t=0;t<s;t++){this.grid[t]=[],r=t/(s-1),l=e.getPointAt(r),r=h[t],o=p[t],u=d[t],this.debug&&(this.debug.add(new THREE.ArrowHelper(r,l,n,255)),this.debug.add(new THREE.ArrowHelper(o,l,n,16711680)),this.debug.add(new THREE.ArrowHelper(u,l,n,65280)));for(r=0;r<this.radiusSegments;r++)a=2*(r/this.radiusSegments)*Math.PI,f=-this.radius*Math.cos(a),a=this.radius*Math.sin(a),c.copy(l),c.x+=f*o.x+a*u.x,c.y+=f*o.y+a*u.y,c.z+=f*o.z+a*u.z,this.grid[t][r]=this.vertices.push(new THREE.Vector3(c.x,c.y,c.z))-1}for(t=0;t<this.segments;t++)for(r=0;r<this.radiusSegments;r++)s=i?(t+1)%this.segments:t+1,c=(r+1)%this.radiusSegments,e=this.grid[t][r],n=this.grid[s][r],s=this.grid[s][c],c=this.grid[t][c],h=new THREE.UV(t/this.segments,r/this.radiusSegments),p=new THREE.UV((t+1)/this.segments,r/this.radiusSegments),d=new THREE.UV((t+1)/this.segments,(r+1)/this.radiusSegments),o=new THREE.UV(t/this.segments,(r+1)/this.radiusSegments),this.faces.push(new THREE.Face4(e,n,s,c)),this.faceVertexUvs[0].push([h,p,d,o]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(e,t,n){new THREE.Vector3;var r=new THREE.Vector3;new THREE.Vector3;var i=[],s=[],o=[],u=new THREE.Vector3,a=new THREE.Matrix4,t=t+1,f,l,c;this.tangents=i,this.normals=s,this.binormals=o;for(f=0;f<t;f++)l=f/(t-1),i[f]=e.getTangentAt(l),i[f].normalize();s[0]=new THREE.Vector3,o[0]=new THREE.Vector3,e=Number.MAX_VALUE,f=Math.abs(i[0].x),l=Math.abs(i[0].y),c=Math.abs(i[0].z),f<=e&&(e=f,r.set(1,0,0)),l<=e&&(e=l,r.set(0,1,0)),c<=e&&r.set(0,0,1),u.cross(i[0],r).normalize(),s[0].cross(i[0],u),o[0].cross(i[0],s[0]);for(f=1;f<t;f++)s[f]=s[f-1].clone(),o[f]=o[f-1].clone(),u.cross(i[f-1],i[f]),1e-4<u.length()&&(u.normalize(),r=Math.acos(i[f-1].dot(i[f])),a.makeRotationAxis(u,r).multiplyVector3(s[f])),o[f].cross(i[f],s[f]);if(n){r=Math.acos(s[0].dot(s[t-1])),r/=t-1,0<i[0].dot(u.cross(s[0],s[t-1]))&&(r=-r);for(f=1;f<t;f++)a.makeRotationAxis(i[f],r*f).multiplyVector3(s[f]),o[f].cross(i[f],s[f])}},THREE.PolyhedronGeometry=function(e,t,n,r){function i(e){var t=e.normalize().clone();t.index=a.vertices.push(t)-1;var n=Math.atan2(e.z,-e.x)/2/Math.PI+.5,e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;return t.uv=new THREE.UV(n,1-e),t}function s(e,t,n,r){1>r?(r=new THREE.Face3(e.index,t.index,n.index,[e.clone(),t.clone(),n.clone()]),r.centroid.addSelf(e).addSelf(t).addSelf(n).divideScalar(3),r.normal=r.centroid.clone().normalize(),a.faces.push(r),r=Math.atan2(r.centroid.z,-r.centroid.x),a.faceVertexUvs[0].push([u(e.uv,e,r),u(t.uv,t,r),u(n.uv,n,r)])):(r-=1,s(e,o(e,t),o(e,n),r),s(o(e,t),t,o(t,n),r),s(o(e,n),o(t,n),n,r),s(o(e,t),o(t,n),o(e,n),r))}function o(e,t){c[e.index]||(c[e.index]=[]),c[t.index]||(c[t.index]=[]);var n=c[e.index][t.index];return void 0===n&&(c[e.index][t.index]=c[t.index][e.index]=n=i((new THREE.Vector3).add(e,t).divideScalar(2))),n}function u(e,t,n){return 0>n&&1===e.u&&(e=new THREE.UV(e.u-1,e.v)),0===t.x&&0===t.z&&(e=new THREE.UV(n/2/Math.PI+.5,e.v)),e}THREE.Geometry.call(this);for(var n=n||1,r=r||0,a=this,f=0,l=e.length;f<l;f++)i(new THREE.Vector3(e[f][0],e[f][1],e[f][2]));for(var c=[],e=this.vertices,f=0,l=t.length;f<l;f++)s(e[t[f][0]],e[t[f][1]],e[t[f][2]],r);this.mergeVertices(),f=0;for(l=this.vertices.length;f<l;f++)this.vertices[f].multiplyScalar(n);this.computeCentroids(),this.boundingSphere={radius:n}},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(e,t){var n=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,n,0],[1,n,0],[-1,-n,0],[1,-n,0],[0,-1,n],[0,1,n],[0,-1,-n],[0,1,-n],[n,0,-1],[n,0,1],[-n,0,-1],[-n,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,t)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],e,t)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],e,t)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(e,t,n,r){THREE.Geometry.call(this);var i=this.vertices,s=this.faces,o=this.faceVertexUvs[0],r=void 0===r?!1:r,u,a,f,l,c=t+1;for(u=0;u<=n;u++){l=u/n;for(a=0;a<=t;a++)f=a/t,f=e(f,l),i.push(f)}var h,p,d,v;for(u=0;u<n;u++)for(a=0;a<t;a++)e=u*c+a,i=u*c+a+1,l=(u+1)*c+a,f=(u+1)*c+a+1,h=new THREE.UV(a/t,u/n),p=new THREE.UV((a+1)/t,u/n),d=new THREE.UV(a/t,(u+1)/n),v=new THREE.UV((a+1)/t,(u+1)/n),r?(s.push(new THREE.Face3(e,i,l)),s.push(new THREE.Face3(i,f,l)),o.push([h,p,d]),o.push([p,v,d])):(s.push(new THREE.Face4(e,i,f,l)),o.push([h,p,v,d]));this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ConvexGeometry=function(e){function t(e){var t=e.length();return new THREE.UV(e.x/t,e.y/t)}THREE.Geometry.call(this);for(var n=[[0,1,2],[0,2,1]],r=3;r<e.length;r++){var i=r,s=e[i].clone(),o=s.length();s.x+=o*2e-6*(Math.random()-.5),s.y+=o*2e-6*(Math.random()-.5),s.z+=o*2e-6*(Math.random()-.5);for(var o=[],u=0;u<n.length;){var a=n[u],f=s,l=e[a[0]],c;c=l;var h=e[a[1]],p=e[a[2]],d=new THREE.Vector3,v=new THREE.Vector3;d.sub(p,h),v.sub(c,h),d.crossSelf(v),d.normalize(),c=d,l=c.dot(l);if(c.dot(f)>=l){for(f=0;3>f;f++){l=[a[f],a[(f+1)%3]],c=!0;for(h=0;h<o.length;h++)if(o[h][0]===l[1]&&o[h][1]===l[0]){o[h]=o[o.length-1],o.pop(),c=!1;break}c&&o.push(l)}n[u]=n[n.length-1],n.pop()}else u++}for(h=0;h<o.length;h++)n.push([o[h][0],o[h][1],i])}i=0,s=Array(e.length);for(r=0;r<n.length;r++){o=n[r];for(u=0;3>u;u++)void 0===s[o[u]]&&(s[o[u]]=i++,this.vertices.push(e[o[u]])),o[u]=s[o[u]]}for(r=0;r<n.length;r++)this.faces.push(new THREE.Face3(n[r][0],n[r][1],n[r][2]));for(r=0;r<this.faces.length;r++)o=this.faces[r],this.faceVertexUvs[0].push([t(this.vertices[o.a]),t(this.vertices[o.b]),t(this.vertices[o.c])]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(e){var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3,new THREE.Vector3(e||1,0,0),new THREE.Vector3,new THREE.Vector3(0,e||1,0),new THREE.Vector3,new THREE.Vector3(0,0,e||1)),t.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775)),e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),THREE.Line.call(this,t,e,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(e,t,n,r){THREE.Object3D.call(this),void 0===r&&(r=16776960),void 0===n&&(n=20);var i=new THREE.Geometry;i.vertices.push(new THREE.Vector3(0,0,0)),i.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(i,new THREE.LineBasicMaterial({color:r})),this.add(this.line),i=new THREE.CylinderGeometry(0,.05,.25,5,1),this.cone=new THREE.Mesh(i,new THREE.MeshBasicMaterial({color:r})),this.cone.position.set(0,1,0),this.add(this.cone),t instanceof THREE.Vector3&&(this.position=t),this.setDirection(e),this.setLength(n)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(e){var t=(new THREE.Vector3(0,1,0)).crossSelf(e),e=Math.acos((new THREE.Vector3(0,1,0)).dot(e.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(t.normalize(),e),this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)},THREE.ArrowHelper.prototype.setLength=function(e){this.scale.set(e,e,e)},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.setHex(e),this.cone.material.color.setHex(e)},THREE.CameraHelper=function(e){function t(e,t,r){n(e,r),n(t,r)}function n(e,t){r.geometry.vertices.push(new THREE.Vector3),r.geometry.colors.push(new THREE.Color(t)),void 0===r.pointMap[e]&&(r.pointMap[e]=[]),r.pointMap[e].push(r.geometry.vertices.length-1)}THREE.Line.call(this);var r=this;this.geometry=new THREE.Geometry,this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),this.type=THREE.LinePieces,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap={},t("n1","n2",16755200),t("n2","n4",16755200),t("n4","n3",16755200),t("n3","n1",16755200),t("f1","f2",16755200),t("f2","f4",16755200),t("f4","f3",16755200),t("f3","f1",16755200),t("n1","f1",16755200),t("n2","f2",16755200),t("n3","f3",16755200),t("n4","f4",16755200),t("p","n1",16711680),t("p","n2",16711680),t("p","n3",16711680),t("p","n4",16711680),t("u1","u2",43775),t("u2","u3",43775),t("u3","u1",43775),t("c","t",16777215),t("p","c",3355443),t("cn1","cn2",3355443),t("cn3","cn4",3355443),t("cf1","cf2",3355443),t("cf3","cf4",3355443),this.camera=e,this.update(e)},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){function e(e,n,r,i){THREE.CameraHelper.__v.set(n,r,i),THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c),e=t.pointMap[e];if(void 0!==e){n=0;for(r=e.length;n<r;n++)t.geometry.vertices[e[n]].copy(THREE.CameraHelper.__v)}}var t=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix),e("c",0,0,-1),e("t",0,0,1),e("n1",-1,-1,-1),e("n2",1,-1,-1),e("n3",-1,1,-1),e("n4",1,1,-1),e("f1",-1,-1,1),e("f2",1,-1,1),e("f3",-1,1,1),e("f4",1,1,1),e("u1",.7,1.1,-1),e("u2",-0.7,1.1,-1),e("u3",0,2,-1),e("cf1",-1,0,1),e("cf2",1,0,1),e("cf3",0,-1,1),e("cf4",0,1,1),e("cn1",-1,0,-1),e("cn2",1,0,-1),e("cn3",0,-1,-1),e("cn4",0,1,-1),this.geometry.verticesNeedUpdate=!0},THREE.CameraHelper.__projector=new THREE.Projector,THREE.CameraHelper.__v=new THREE.Vector3,THREE.CameraHelper.__c=new THREE.Camera,THREE.DirectionalLightHelper=function(e,t,n){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new THREE.Vector3,this.direction.sub(e.target.position,e.position),this.color=e.color.clone();var r=THREE.Math.clamp(e.intensity,0,1);this.color.r*=r,this.color.g*=r,this.color.b*=r;var r=this.color.getHex(),i=new THREE.SphereGeometry(t,16,8),s=new THREE.AsteriskGeometry(1.25*t,2.25*t),o=new THREE.MeshBasicMaterial({color:r,fog:!1}),u=new THREE.LineBasicMaterial({color:r,fog:!1});this.lightArrow=new THREE.ArrowHelper(this.direction,null,n,r),this.lightSphere=new THREE.Mesh(i,o),this.lightArrow.cone.material.fog=!1,this.lightArrow.line.material.fog=!1,this.lightRays=new THREE.Line(s,u,THREE.LinePieces),this.add(this.lightArrow),this.add(this.lightSphere),this.add(this.lightRays),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.targetSphere=null,e.target.properties.targetInverse&&(t=new THREE.SphereGeometry(t,8,4),n=new THREE.MeshBasicMaterial({color:r,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(t,n),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,e=new THREE.LineDashedMaterial({color:r,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),r=new THREE.Geometry,r.vertices.push(this.position.clone()),r.vertices.push(this.targetSphere.position.clone()),r.computeLineDistances(),this.targetLine=new THREE.Line(r,e),this.targetLine.properties.isGizmo=!0),this.properties.isGizmo=!0},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.update=function(){this.direction.sub(this.light.target.position,this.light.position),this.lightArrow.setDirection(this.direction),this.color.copy(this.light.color);var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.r*=e,this.color.g*=e,this.color.b*=e,this.lightArrow.setColor(this.color.getHex()),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0},THREE.HemisphereLightHelper=function(e,t,n){THREE.Object3D.call(this),this.light=e,this.position=e.position;var r=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.r*=r,this.color.g*=r,this.color.b*=r;var i=this.color.getHex();this.groundColor=e.groundColor.clone(),this.groundColor.r*=r,this.groundColor.g*=r,this.groundColor.b*=r;for(var r=this.groundColor.getHex(),s=new THREE.SphereGeometry(t,16,8,0,2*Math.PI,0,.5*Math.PI),o=new THREE.SphereGeometry(t,16,8,0,2*Math.PI,.5*Math.PI,Math.PI),u=new THREE.MeshBasicMaterial({color:i,fog:!1}),a=new THREE.MeshBasicMaterial({color:r,fog:!1}),f=0,l=s.faces.length;f<l;f++)s.faces[f].materialIndex=0;f=0;for(l=o.faces.length;f<l;f++)o.faces[f].materialIndex=1;THREE.GeometryUtils.merge(s,o),this.lightSphere=new THREE.Mesh(s,new THREE.MeshFaceMaterial([u,a])),this.lightArrow=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,1.1*(t+n),0),n,i),this.lightArrow.rotation.x=Math.PI,this.lightArrowGround=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3
(0,-1.1*(t+n),0),n,r),t=new THREE.Object3D,t.rotation.x=.5*-Math.PI,t.add(this.lightSphere),t.add(this.lightArrow),t.add(this.lightArrowGround),this.add(t),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.properties.isGizmo=!0,this.target=new THREE.Vector3,this.lookAt(this.target)},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.update=function(){var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.groundColor.copy(this.light.groundColor),this.color.r*=e,this.color.g*=e,this.color.b*=e,this.groundColor.r*=e,this.groundColor.g*=e,this.groundColor.b*=e,this.lightSphere.material.materials[0].color.copy(this.color),this.lightSphere.material.materials[1].color.copy(this.groundColor),this.lightArrow.setColor(this.color.getHex()),this.lightArrowGround.setColor(this.groundColor.getHex()),this.lookAt(this.target)},THREE.PointLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.color=e.color.clone();var n=THREE.Math.clamp(e.intensity,0,1);this.color.r*=n,this.color.g*=n,this.color.b*=n;var r=this.color.getHex(),n=new THREE.SphereGeometry(t,16,8),i=new THREE.AsteriskGeometry(1.25*t,2.25*t),s=new THREE.IcosahedronGeometry(1,2),o=new THREE.MeshBasicMaterial({color:r,fog:!1}),u=new THREE.LineBasicMaterial({color:r,fog:!1}),r=new THREE.MeshBasicMaterial({color:r,fog:!1,wireframe:!0,opacity:.1,transparent:!0});this.lightSphere=new THREE.Mesh(n,o),this.lightRays=new THREE.Line(i,u,THREE.LinePieces),this.lightDistance=new THREE.Mesh(s,r),n=e.distance,0===n?this.lightDistance.visible=!1:this.lightDistance.scale.set(n,n,n),this.add(this.lightSphere),this.add(this.lightRays),this.add(this.lightDistance),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.properties.isGizmo=!0},THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.PointLightHelper.prototype.update=function(){this.color.copy(this.light.color);var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.r*=e,this.color.g*=e,this.color.b*=e,this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightDistance.material.color.copy(this.color),e=this.light.distance,0===e?this.lightDistance.visible=!1:(this.lightDistance.visible=!0,this.lightDistance.scale.set(e,e,e))},THREE.SpotLightHelper=function(e,t,n){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new THREE.Vector3,this.direction.sub(e.target.position,e.position),this.color=e.color.clone();var r=THREE.Math.clamp(e.intensity,0,1);this.color.r*=r,this.color.g*=r,this.color.b*=r;var r=this.color.getHex(),i=new THREE.SphereGeometry(t,16,8),s=new THREE.AsteriskGeometry(1.25*t,2.25*t),o=new THREE.CylinderGeometry(1e-4,1,1,8,1,!0),u=new THREE.Matrix4;u.rotateX(-Math.PI/2),u.translate(new THREE.Vector3(0,-0.5,0)),o.applyMatrix(u);var a=new THREE.MeshBasicMaterial({color:r,fog:!1}),u=new THREE.LineBasicMaterial({color:r,fog:!1}),f=new THREE.MeshBasicMaterial({color:r,fog:!1,wireframe:!0,opacity:.3,transparent:!0});this.lightArrow=new THREE.ArrowHelper(this.direction,null,n,r),this.lightSphere=new THREE.Mesh(i,a),this.lightCone=new THREE.Mesh(o,f),n=e.distance?e.distance:1e4,i=2*n*Math.tan(.5*e.angle),this.lightCone.scale.set(i,i,n),this.lightArrow.cone.material.fog=!1,this.lightArrow.line.material.fog=!1,this.lightRays=new THREE.Line(s,u,THREE.LinePieces),this.gyroscope=new THREE.Gyroscope,this.gyroscope.add(this.lightArrow),this.gyroscope.add(this.lightSphere),this.gyroscope.add(this.lightRays),this.add(this.gyroscope),this.add(this.lightCone),this.lookAt(e.target.position),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.targetSphere=null,e.target.properties.targetInverse&&(t=new THREE.SphereGeometry(t,8,4),s=new THREE.MeshBasicMaterial({color:r,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(t,s),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,e=new THREE.LineDashedMaterial({color:r,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),r=new THREE.Geometry,r.vertices.push(this.position.clone()),r.vertices.push(this.targetSphere.position.clone()),r.computeLineDistances(),this.targetLine=new THREE.Line(r,e),this.targetLine.properties.isGizmo=!0),this.properties.isGizmo=!0},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.update=function(){this.direction.sub(this.light.target.position,this.light.position),this.lightArrow.setDirection(this.direction),this.lookAt(this.light.target.position);var e=this.light.distance?this.light.distance:1e4,t=2*e*Math.tan(.5*this.light.angle);this.lightCone.scale.set(t,t,e),this.color.copy(this.light.color),e=THREE.Math.clamp(this.light.intensity,0,1),this.color.r*=e,this.color.g*=e,this.color.b*=e,this.lightArrow.setColor(this.color.getHex()),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightCone.material.color.copy(this.color),this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0},THREE.SubdivisionModifier=function(e){this.subdivisions=void 0===e?1:e,this.useOldVertexColors=!1,this.supportUVs=!0,this.debug=!1},THREE.SubdivisionModifier.prototype.modify=function(e){for(var t=this.subdivisions;0<t--;)this.smooth(e)},THREE.GeometryUtils.orderedKey=function(e,t){return Math.min(e,t)+"_"+Math.max(e,t)},THREE.GeometryUtils.computeEdgeFaces=function(e){function t(e,t){void 0===o[e]&&(o[e]=[]),o[e].push(t)}var n,r,i,s,o={},u=THREE.GeometryUtils.orderedKey;n=0;for(r=e.faces.length;n<r;n++)i=e.faces[n],i instanceof THREE.Face3?(s=u(i.a,i.b),t(s,n),s=u(i.b,i.c),t(s,n),s=u(i.c,i.a),t(s,n)):i instanceof THREE.Face4&&(s=u(i.a,i.b),t(s,n),s=u(i.b,i.c),t(s,n),s=u(i.c,i.d),t(s,n),s=u(i.d,i.a),t(s,n));return o},THREE.SubdivisionModifier.prototype.smooth=function(e){function t(){l.debug&&console&&console.assert&&console.assert.apply(console,arguments)}function n(){l.debug&&console.log.apply(console,arguments)}function r(){console&&console.log.apply(console,arguments)}function i(e,t,r,i,o,u,c){var h=new THREE.Face4(e,t,r,i,null,o.color,o.materialIndex);if(l.useOldVertexColors){h.vertexColors=[];for(var p,d,v,m=0;4>m;m++){v=u[m],p=new THREE.Color,p.setRGB(0,0,0);for(var g=0;g<v.length;g++)d=o.vertexColors[v[g]-1],p.r+=d.r,p.g+=d.g,p.b+=d.b;p.r/=v.length,p.g/=v.length,p.b/=v.length,h.vertexColors[m]=p}}a.push(h),l.supportUVs&&(o=[s(e,""),s(t,c),s(r,c),s(i,c)],o[0]?o[1]?o[2]?o[3]?f.push(o):n("d :( ",i+":"+c):n("c :( ",r+":"+c):n("b :( ",t+":"+c):n("a :( ",e+":"+c))}function s(e,t){var i=e+":"+t,s=b[i];return s?s:(e>=v&&e<v+d.length?n("face pt"):n("edge pt"),r("warning, UV not found for",i),null)}function o(e,t,n){var i=e+":"+t;i in b?r("dup vertexNo",e,"oldFaceNo",t,"value",n,"key",i,b[i]):b[i]=n}var u=[],a=[],f=[],l=this,c=THREE.GeometryUtils.orderedKey,h=THREE.GeometryUtils.computeEdgeFaces,p=e.vertices,d=e.faces,v=p.length,u=p.concat(),m=[],g={},y={},b={},w,E,S,x,T,N=e.faceVertexUvs[0],C;n("originalFaces, uvs, originalVerticesLength",d.length,N.length,v);if(l.supportUVs){w=0;for(E=N.length;w<E;w++){S=0;for(x=N[w].length;S<x;S++)C=d[w]["abcd".charAt(S)],o(C,w,N[w][S])}}0==N.length&&(l.supportUVs=!1),w=0;for(var k in b)w++;w||(l.supportUVs=!1,n("no uvs")),w=0;for(E=d.length;w<E;w++)T=d[w],m.push(T.centroid),u.push(T.centroid),l.supportUVs&&(x=new THREE.UV,T instanceof THREE.Face3?(x.u=s(T.a,w).u+s(T.b,w).u+s(T.c,w).u,x.v=s(T.a,w).v+s(T.b,w).v+s(T.c,w).v,x.u/=3,x.v/=3):T instanceof THREE.Face4&&(x.u=s(T.a,w).u+s(T.b,w).u+s(T.c,w).u+s(T.d,w).u,x.v=s(T.a,w).v+s(T.b,w).v+s(T.c,w).v+s(T.d,w).v,x.u/=4,x.v/=4),o(v+w,"",x));var h=h(e),L;E=0;var A,O;k={},N={};for(w in h){C=h[w],A=w.split("_"),O=A[0],A=A[1],S=O,T=[O,A],void 0===k[S]&&(k[S]=[]),k[S].push(T),S=A,T=[O,A],void 0===k[S]&&(k[S]=[]),k[S].push(T),S=0;for(x=C.length;S<x;S++){T=C[S],L=O;var M=T,_=w;void 0===N[L]&&(N[L]={}),N[L][M]=_,L=A,M=w,void 0===N[L]&&(N[L]={}),N[L][T]=M}2>C.length&&(y[w]=!0)}for(w in h)if(C=h[w],T=C[0],L=C[1],A=w.split("_"),O=A[0],A=A[1],x=new THREE.Vector3,t(0<C.length,"an edge without faces?!"),1==C.length?(x.addSelf(p[O]),x.addSelf(p[A]),x.multiplyScalar(.5)):(x.addSelf(m[T]),x.addSelf(m[L]),x.addSelf(p[O]),x.addSelf(p[A]),x.multiplyScalar(.25)),g[w]=v+d.length+E,u.push(x),E++,l.supportUVs)x=new THREE.UV,x.u=s(O,T).u+s(A,T).u,x.v=s(O,T).v+s(A,T).v,x.u/=2,x.v/=2,o(g[w],T,x),2<=C.length&&(t(2==C.length,"did we plan for more than 2 edges?"),x=new THREE.UV,x.u=s(O,L).u+s(A,L).u,x.v=s(O,L).v+s(A,L).v,x.u/=2,x.v/=2,o(g[w],L,x));n("-- Step 2 done");var D,P;x=["123","12","2","23"],L=["123","23","3","31"];var M=["123","31","1","12"],_=["1234","12","2","23"],H=["1234","23","3","34"],B=["1234","34","4","41"],j=["1234","41","1","12"];w=0;for(E=m.length;w<E;w++)T=d[w],C=v+w,T instanceof THREE.Face3?(O=c(T.a,T.b),A=c(T.b,T.c),D=c(T.c,T.a),i(C,g[O],T.b,g[A],T,x,w),i(C,g[A],T.c,g[D],T,L,w),i(C,g[D],T.a,g[O],T,M,w)):T instanceof THREE.Face4?(O=c(T.a,T.b),A=c(T.b,T.c),D=c(T.c,T.d),P=c(T.d,T.a),i(C,g[O],T.b,g[A],T,_,w),i(C,g[A],T.c,g[D],T,H,w),i(C,g[D],T.d,g[P],T,B,w),i(C,g[P],T.a,g[O],T,j,w)):n("face should be a face!",T);g=new THREE.Vector3,T=new THREE.Vector3,w=0;for(E=p.length;w<E;w++)if(void 0!==k[w]){g.set(0,0,0),T.set(0,0,0),A=new THREE.Vector3(0,0,0),C=0;for(S in N[w])g.addSelf(m[S]),C++;L=0,O=k[w].length,x=C!=O;for(S=0;S<O;S++)y[c(k[w][S][0],k[w][S][1])]&&L++;g.divideScalar(C),L=0;if(x){for(S=0;S<O;S++)if(C=k[w][S],M=1==h[c(C[0],C[1])].length)C=p[C[0]].clone().addSelf(p[C[1]]).divideScalar(2),T.addSelf(C),L++;T.divideScalar(4),t(2==L,"should have only 2 boundary edges")}else{for(S=0;S<O;S++)C=k[w][S],C=p[C[0]].clone().addSelf(p[C[1]]).divideScalar(2),T.addSelf(C);T.divideScalar(O)}A.addSelf(p[w]),x?(A.divideScalar(2),A.addSelf(T)):(A.multiplyScalar(O-3),A.addSelf(g),A.addSelf(T.multiplyScalar(2)),A.divideScalar(O)),u[w]=A}e.vertices=u,e.faces=a,e.faceVertexUvs[0]=f,delete e.__tmpVertices,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals()},THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(e,t,n,r,i){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,n,r,i)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(e,t,n,r,i,s){void 0===t&&(t=-1),void 0===n&&(n=0),void 0===s&&(s=1),void 0===i&&(i=new THREE.Color(16777215)),void 0===r&&(r=THREE.NormalBlending),n=Math.min(n,Math.max(0,n)),this.lensFlares.push({texture:e,size:t,distance:n,x:0,y:0,z:0,scale:1,rotation:1,opacity:s,color:i,blending:r})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t=this.lensFlares.length,n,r=2*-this.positionScreen.x,i=2*-this.positionScreen.y;for(e=0;e<t;e++)n=this.lensFlares[e],n.x=this.positionScreen.x+r*n.distance,n.y=this.positionScreen.y+i*n.distance,n.wantedRotation=.25*n.x*Math.PI,n.rotation+=.25*(n.wantedRotation-n.rotation)},THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var n=this.geometry.morphTargets.length;this.createAnimation("__default",0,n-1,n/1),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,n,r){t={startFrame:t,endFrame:n,length:n-t+1,fps:r,duration:(n-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1},this.animationsMap[e]=t,this.animationsList.push(t)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t=/([a-z]+)(\d+)/,n,r={},i=this.geometry,s=0,o=i.morphTargets.length;s<o;s++){var u=i.morphTargets[s].name.match(t);if(u&&1<u.length){var a=u[1];r[a]||(r[a]={start:Infinity,end:-Infinity}),u=r[a],s<u.start&&(u.start=s),s>u.end&&(u.end=s),n||(n=a)}}for(a in r)u=r[a],this.createAnimation(a,u.start,u.end,e);this.firstAnimation=n},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){if(e=this.animationsMap[e])e.direction=1,e.directionBackwards=!1},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){if(e=this.animationsMap[e])e.direction=-1,e.directionBackwards=!0},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var n=this.animationsMap[e];n&&(n.fps=t,n.duration=(n.end-n.start)/n.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var n=this.animationsMap[e];n&&(n.duration=t,n.fps=(n.end-n.start)/n.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var n=this.animationsMap[e];n&&(n.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var n=this.animationsMap[e];n&&(n.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;if(e=this.animationsMap[e])t=e.time;return t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;if(e=this.animationsMap[e])t=e.duration;return t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){if(e=this.animationsMap[e])e.active=!1},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,n=this.animationsList.length;t<n;t++){var r=this.animationsList[t];if(r.active){var i=r.duration/r.length;r.time+=r.direction*e;if(r.mirroredLoop){if(r.time>r.duration||0>r.time)if(r.direction*=-1,r.time>r.duration&&(r.time=r.duration,r.directionBackwards=!0),0>r.time)r.time=0,r.directionBackwards=!1}else r.time%=r.duration,0>r.time&&(r.time+=r.duration);var s=r.startFrame+THREE.Math.clamp(Math.floor(r.time/i),0,r.length-1),o=r.weight;s!==r.currentFrame&&(this.morphTargetInfluences[r.lastFrame]=0,this.morphTargetInfluences[r.currentFrame]=1*o,this.morphTargetInfluences[s]=0,r.lastFrame=r.currentFrame,r.currentFrame=s),i=r.time%i/i,r.directionBackwards&&(i=1-i),this.morphTargetInfluences[r.currentFrame]=i*o,this.morphTargetInfluences[r.lastFrame]=(1-i)*o}}},THREE.LensFlarePlugin=function(){function e(e){var n=t.createProgram(),r=t.createShader(t.FRAGMENT_SHADER),i=t.createShader(t.VERTEX_SHADER);return t.shaderSource(r,e.fragmentShader),t.shaderSource(i,e.vertexShader),t.compileShader(r),t.compileShader(i),t.attachShader(n,r),t.attachShader(n,i),t.linkProgram(n),n}var t,n,r,i,s,o,u,a,f,l,c,h,p;this.init=function(v){t=v.context,n=v,r=new Float32Array(16),i=new Uint16Array(6),v=0,r[v++]=-1,r[v++]=-1,r[v++]=0,r[v++]=0,r[v++]=1,r[v++]=-1,r[v++]=1,r[v++]=0,r[v++]=1,r[v++]=1,r[v++]=1,r[v++]=1,r[v++]=-1,r[v++]=1,r[v++]=0,r[v++]=1,v=0,i[v++]=0,i[v++]=1,i[v++]=2,i[v++]=0,i[v++]=2,i[v++]=3,s=t.createBuffer(),o=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,s),t.bufferData(t.ARRAY_BUFFER,r,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,o),t.bufferData(t.ELEMENT_ARRAY_BUFFER,i,t.STATIC_DRAW),u=t.createTexture(),a=t.createTexture(),t.bindTexture(t.TEXTURE_2D,u),t.texImage2D(t.TEXTURE_2D,0,t.RGB,16,16,0,t.RGB,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.bindTexture(t.TEXTURE_2D,a),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,16,16,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),0>=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(f=!1,l=e(THREE.ShaderFlares.lensFlare)):(f=!0,l=e(THREE.ShaderFlares.lensFlareVertexTexture)),c={},h={},c.vertex=t.getAttribLocation(l,"position"),c.uv=t.getAttribLocation(l,"uv"),h.renderType=t.getUniformLocation(l,"renderType"),h.map=t.getUniformLocation(l,"map"),h.occlusionMap=t.getUniformLocation(l,"occlusionMap"),h.opacity=t.getUniformLocation(l,"opacity"),h.color=t.getUniformLocation(l,"color"),h.scale=t.getUniformLocation(l,"scale"),h.rotation=t.getUniformLocation(l,"rotation"),h.screenPosition=t.getUniformLocation(l,"screenPosition"),p=!1},this.render=function(e,r,i,d){var e=e.__webglFlares,v=e.length;if(v){var y=new THREE.Vector3,w=d/i,E=.5*i,S=.5*d,x=16/d,T=new THREE.Vector2(x*w,x),N=new THREE.Vector3(1,1,0),C=new THREE.Vector2(1,1),k=h,x=c;t.useProgram(l),p||(t.enableVertexAttribArray(c.vertex),t.enableVertexAttribArray(c.uv),p=!0),t.uniform1i(k.occlusionMap,0),t.uniform1i(k.map,1),t.bindBuffer(t.ARRAY_BUFFER,s),t.vertexAttribPointer(x.vertex,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(x.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,o),t.disable(t.CULL_FACE),t.depthMask(!1);var L,A,O,M,_;for(L=0;L<v;L++)if(x=16/d,T.set(x*w,x),M=e[L],y.set(M.matrixWorld.elements[12],M.matrixWorld.elements[13],M.matrixWorld.elements[14]),r.matrixWorldInverse.multiplyVector3(y),r.projectionMatrix.multiplyVector3(y),N.copy(y),C.x=N.x*E+E,C.y=N.y*S+S,f||0<C.x&&C.x<i&&0<C.y&&C.y<d){t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,u),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGB,C.x-8,C.y-8,16,16,0),t.uniform1i(k.renderType,0),t.uniform2f(k.scale,T.x,T.y),t.uniform3f(k.screenPosition,N.x,N.y,N.z),t.disable(t.BLEND),t.enable(t.DEPTH_TEST),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,a),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGBA,C.x-8,C.y-8,16,16,0),t.uniform1i(k.renderType,1),t.disable(t.DEPTH_TEST),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,u),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),M.positionScreen.copy(N),M.customUpdateCallback?M.customUpdateCallback(M):M.updateLensFlares(),t.uniform1i(k.renderType,2),t.enable(t.BLEND),A=0;for(O=M.lensFlares.length;A<O;A++)_=M.lensFlares[A],.001<_.opacity&&.001<_.scale&&(N.x=_.x,N.y=_.y,N.z=_.z,x=_.size*_.scale/d,T.x=x*w,T.y=x,t.uniform3f(k.screenPosition,N.x,N.y,N.z),t.uniform2f(k.scale,T.x,T.y),t.uniform1f(k.rotation,_.rotation),t.uniform1f(k.opacity,_.opacity),t.uniform3f(k.color,_.color.r,_.color.g,_.color.b),n.setBlending(_.blending,_.blendEquation,_.blendSrc,_.blendDst),n.setTexture(_.texture,1),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}t.enable(t.CULL_FACE),t.enable(t.DEPTH_TEST),t.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){var e,t,n,r,i,s,o=new THREE.Frustum,u=new THREE.Matrix4,a=new THREE.Vector3,f=new THREE.Vector3;this.init=function(o){e=o.context,t=o;var o=THREE.ShaderLib.depthRGBA,u=THREE.UniformsUtils.clone(o.uniforms);n=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u}),r=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,morphTargets:!0}),i=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,skinning:!0}),s=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,morphTargets:!0,skinning:!0}),n._shadowPass=!0,r._shadowPass=!0,i._shadowPass=!0,s._shadowPass=!0},this.render=function(e,n){t.shadowMapEnabled&&t.shadowMapAutoUpdate&&this.update(e,n)},this.update=function(l,p){var v,m,y,w,E,S,x,T,N,C=[];w=0,e.clearColor(1,1,1,1),e.disable(e.BLEND),e.enable(e.CULL_FACE),e.frontFace(e.CCW),t.shadowMapCullFrontFaces?e.cullFace(e.FRONT):e.cullFace(e.BACK),t.setDepthTest(!0),v=0;for(m=l.__lights.length;v<m;v++)if(y=l.__lights[v],y.castShadow)if(y instanceof THREE.DirectionalLight&&y.shadowCascade)for(E=0;E<y.shadowCascadeCount;E++){var k;if(y.shadowCascadeArray[E])k=y.shadowCascadeArray[E];else{N=y,x=E,k=new THREE.DirectionalLight,k.isVirtual=!0,k.onlyShadow=!0,k.castShadow=!0,k.shadowCameraNear=N.shadowCameraNear,k.shadowCameraFar=N.shadowCameraFar,k.shadowCameraLeft=N.shadowCameraLeft,k.shadowCameraRight=N.shadowCameraRight,k.shadowCameraBottom=N.shadowCameraBottom,k.shadowCameraTop=N.shadowCameraTop,k.shadowCameraVisible=N.shadowCameraVisible,k.shadowDarkness=N.shadowDarkness,k.shadowBias=N.shadowCascadeBias[x],k.shadowMapWidth=N.shadowCascadeWidth[x],k.shadowMapHeight=N.shadowCascadeHeight[x],k.pointsWorld=[],k.pointsFrustum=[],T=k.pointsWorld,S=k.pointsFrustum;for(var L=0;8>L;L++)T[L]=new THREE.Vector3,S[L]=new THREE.Vector3;T=N.shadowCascadeNearZ[x],N=N.shadowCascadeFarZ[x],S[0].set(-1,-1,T),S[1].set(1,-1,T),S[2].set(-1,1,T),S[3].set(1,1,T),S[4].set(-1,-1,N),S[5].set(1,-1,N),S[6].set(-1,1,N),S[7].set(1,1,N),k.originalCamera=p,S=new THREE.Gyroscope,S.position=y.shadowCascadeOffset,S.add(k),S.add(k.target),p.add(S),y.shadowCascadeArray[E]=k,console.log("Created virtualLight",k)}x=y,T=E,N=x.shadowCascadeArray[T],N.position.copy(x.position),N.target.position.copy(x.target.position),N.lookAt(N.target),N.shadowCameraVisible=x.shadowCameraVisible,N.shadowDarkness=x.shadowDarkness,N.shadowBias=x.shadowCascadeBias[T],S=x.shadowCascadeNearZ[T],x=x.shadowCascadeFarZ[T],N=N.pointsFrustum,N[0].z=S,N[1].z=S,N[2].z=S,N[3].z=S,N[4].z=x,N[5].z=x,N[6].z=x,N[7].z=x,C[w]=k,w++}else C[w]=y,w++;v=0;for(m=C.length;v<m;v++){y=C[v],y.shadowMap||(y.shadowMap=new THREE.WebGLRenderTarget(y.shadowMapWidth,y.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),y.shadowMapSize=new THREE.Vector2(y.shadowMapWidth,y.shadowMapHeight),y.shadowMatrix=new THREE.Matrix4);if(!y.shadowCamera){if(y instanceof THREE.SpotLight)y.shadowCamera=new THREE.PerspectiveCamera(y.shadowCameraFov,y.shadowMapWidth/y.shadowMapHeight,y.shadowCameraNear,y.shadowCameraFar);else{if(!(y instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}y.shadowCamera=new THREE.OrthographicCamera(y.shadowCameraLeft,y.shadowCameraRight,y.shadowCameraTop,y.shadowCameraBottom,y.shadowCameraNear,y.shadowCameraFar)}l.add(y.shadowCamera),t.autoUpdateScene&&l.updateMatrixWorld()}y.shadowCameraVisible&&!y.cameraHelper&&(y.cameraHelper=new THREE.CameraHelper(y.shadowCamera),y.shadowCamera.add(y.cameraHelper));if(y.isVirtual&&k.originalCamera==p){E=p,w=y.shadowCamera,S=y.pointsFrustum,N=y.pointsWorld,a.set(Infinity,Infinity,Infinity),f.set(-Infinity,-Infinity,-Infinity);for(x=0;8>x;x++)if(T=N[x],T.copy(S[x]),THREE.ShadowMapPlugin.__projector.unprojectVector(T,E),w.matrixWorldInverse.multiplyVector3(T),T.x<a.x&&(a.x=T.x),T.x>f.x&&(f.x=T.x),T.y<a.y&&(a.y=T.y),T.y>f.y&&(f.y=T.y),T.z<a.z&&(a.z=T.z),T.z>f.z)f.z=T.z;w.left=a.x,w.right=f.x,w.top=f.y,w.bottom=a.y,w.updateProjectionMatrix()}w=y.shadowMap,S=y.shadowMatrix,E=y.shadowCamera,E.position.copy(y.matrixWorld.getPosition()),E.lookAt(y.target.matrixWorld.getPosition()),E.updateMatrixWorld(),E.matrixWorldInverse.getInverse(E.matrixWorld),y.cameraHelper&&(y.cameraHelper.visible=y.shadowCameraVisible),y.shadowCameraVisible&&y.cameraHelper.update(),S.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),S.multiplySelf(E.projectionMatrix),S.multiplySelf(E.matrixWorldInverse),E._viewMatrixArray||(E._viewMatrixArray=new Float32Array(16)),E._projectionMatrixArray||(E._projectionMatrixArray=new Float32Array(16)),E.matrixWorldInverse.flattenToArray(E._viewMatrixArray),E.projectionMatrix.flattenToArray(E._projectionMatrixArray),u.multiply(E.projectionMatrix,E.matrixWorldInverse),o.setFromMatrix(u),t.setRenderTarget(w),t.clear(),N=l.__webglObjects,y=0;for(w=N.length;y<w;y++)if(x=N[y],S=x.object,x.render=!1,S.visible&&S.castShadow&&(!(S instanceof THREE.Mesh||S instanceof THREE.ParticleSystem)||!S.frustumCulled||o.contains(S)))S._modelViewMatrix.multiply(E.matrixWorldInverse,S.matrixWorld),x.render=!0;y=0;for(w=N.length;y<w;y++)x=N[y],x.render&&(S=x.object,x=x.buffer,L=S.material instanceof THREE.MeshFaceMaterial?S.material.materials[0]:S.material,T=0<S.geometry.morphTargets.length&&L.morphTargets,L=S instanceof THREE.SkinnedMesh&&L.skinning,T=S.customDepthMaterial?S.customDepthMaterial:L?T?s:i:T?r:n,x instanceof THREE.BufferGeometry?t.renderBufferDirect(E,l.__lights,null,T,x,S):t.renderBuffer(E,l.__lights,null,T,x,S));N=l.__webglObjectsImmediate,y=0;for(w=N.length;y<w;y++)x=N[y],S=x.object,S.visible&&S.castShadow&&(S._modelViewMatrix.multiply(E.matrixWorldInverse,S.matrixWorld),t.renderImmediateObject(E,l.__lights,null,n,S))}v=t.getClearColor(),m=t.getClearAlpha(),e.clearColor(v.r,v.g,v.b,m),e.enable(e.BLEND),t.shadowMapCullFrontFaces&&e.cullFace(e.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function e(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var t,n,r,i,s,o,u,a,f,l;this.init=function(e){t=e.context,n=e,r=new Float32Array(16),i=new Uint16Array(6),e=0,r[e++]=-1,r[e++]=-1,r[e++]=0,r[e++]=0,r[e++]=1,r[e++]=-1,r[e++]=1,r[e++]=0,r[e++]=1,r[e++]=1,r[e++]=1,r[e++]=1,r[e++]=-1,r[e++]=1,r[e++]=0,r[e++]=1,e=0,i[e++]=0,i[e++]=1,i[e++]=2,i[e++]=0,i[e++]=2,i[e++]=3,s=t.createBuffer(),o=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,s),t.bufferData(t.ARRAY_BUFFER,r,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,o),t.bufferData(t.ELEMENT_ARRAY_BUFFER,i,t.STATIC_DRAW);var e=THREE.ShaderSprite.sprite,p=t.createProgram(),v=t.createShader(t.FRAGMENT_SHADER),m=t.createShader(t.VERTEX_SHADER);t.shaderSource(v,e.fragmentShader),t.shaderSource(m,e.vertexShader),t.compileShader(v),t.compileShader(m),t.attachShader(p,v),t.attachShader(p,m),t.linkProgram(p),u=p,a={},f={},a.position=t.getAttribLocation(u,"position"),a.uv=t.getAttribLocation(u,"uv"),f.uvOffset=t.getUniformLocation(u,"uvOffset"),f.uvScale=t.getUniformLocation(u,"uvScale"),f.rotation=t.getUniformLocation(u,"rotation"),f.scale=t.getUniformLocation(u,"scale"),f.alignment=t.getUniformLocation(u,"alignment"),f.color=t.getUniformLocation(u,"color"),f.map=t.getUniformLocation(u,"map"),f.opacity=t.getUniformLocation(u,"opacity"),f.useScreenCoordinates=t.getUniformLocation(u,"useScreenCoordinates"),f.affectedByDistance=t.getUniformLocation(u,"affectedByDistance"),f.screenPosition=t.getUniformLocation(u,"screenPosition"),f.modelViewMatrix=t.getUniformLocation(u,"modelViewMatrix"),f.projectionMatrix=t.getUniformLocation(u,"projectionMatrix"),f.fogType=t.getUniformLocation(u,"fogType"),f.fogDensity=t.getUniformLocation(u,"fogDensity"),f.fogNear=t.getUniformLocation(u,"fogNear"),f.fogFar=t.getUniformLocation(u,"fogFar"),f.fogColor=t.getUniformLocation(u,"fogColor"),l=!1},this.render=function(r,i,p,d){var v=r.__webglSprites,m=v.length;if(m){var y=a,w=f,E=d/p,p=.5*p,S=.5*d,x=!0;t.useProgram(u),l||(t.enableVertexAttribArray(y.position),t.enableVertexAttribArray(y.uv),l=!0),t.disable(t.CULL_FACE),t.enable(t.BLEND),t.depthMask(!0),t.bindBuffer(t.ARRAY_BUFFER,s),t.vertexAttribPointer(y.position,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(y.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,o),t.uniformMatrix4fv(w.projectionMatrix,!1,i._projectionMatrixArray),t.activeTexture(t.TEXTURE0),t.uniform1i(w.map,0);var T=y=0,N=r.fog;N?(t.uniform3f(w.fogColor,N.color.r,N.color.g,N.color.b),N instanceof THREE.Fog?(t.uniform1f(w.fogNear,N.near),t.uniform1f(w.fogFar,N.far),t.uniform1i(w.fogType,1),T=y=1):N instanceof THREE.FogExp2&&(t.uniform1f(w.fogDensity,N.density),t.uniform1i(w.fogType,2),T=y=2)):(t.uniform1i(w.fogType,0),T=y=0);for(var C,k=[],N=0;N<m;N++)C=v[N],C.visible&&0!==C.opacity&&(C.useScreenCoordinates?C.z=-C.position.z:(C._modelViewMatrix.multiply(i.matrixWorldInverse,C.matrixWorld),C.z=-C._modelViewMatrix.elements[14]));v.sort(e);for(N=0;N<m;N++)if(C=v[N],C.visible&&0!==C.opacity&&C.map&&C.map.image&&C.map.image.width)C.useScreenCoordinates?(t.uniform1i(w.useScreenCoordinates,1),t.uniform3f(w.screenPosition,(C.position.x-p)/p,(S-C.position.y)/S,Math.max(0,Math.min(1,C.position.z)))):(t.uniform1i(w.useScreenCoordinates,0),t.uniform1i(w.affectedByDistance,C.affectedByDistance?1:0),t.uniformMatrix4fv(w.modelViewMatrix,!1,C._modelViewMatrix.elements)),i=r.fog&&C.fog?T:0,y!==i&&(t.uniform1i(w.fogType,i),y=i),i=1/(C.scaleByViewport?d:1),k[0]=i*E*C.scale.x,k[1]=i*C.scale.y,t.uniform2f(w.uvScale,C.uvScale.x,C.uvScale.y),t.uniform2f(w.uvOffset,C.uvOffset.x,C.uvOffset.y),t.uniform2f(w.alignment,C.alignment.x,C.alignment.y),t.uniform1f(w.opacity,C.opacity),t.uniform3f(w.color,C.color.r,C.color.g,C.color.b),t.uniform1f(w.rotation,C.rotation),t.uniform2fv(w.scale,k),C.mergeWith3D&&!x?(t.enable(t.DEPTH_TEST),x=!0):!C.mergeWith3D&&x&&(t.disable(t.DEPTH_TEST),x=!1),n.setBlending(C.blending,C.blendEquation,C.blendSrc,C.blendDst),n.setTexture(C.map,0),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0);t.enable(t.CULL_FACE),t.enable(t.DEPTH_TEST),t.depthMask(!0)}}},THREE.DepthPassPlugin=function(){this.enabled=!1,this.renderTarget=null;var e,t,n,r,i,s,o=new THREE.Frustum,u=new THREE.Matrix4;this.init=function(o){e=o.context,t=o;var o=THREE.ShaderLib.depthRGBA,u=THREE.UniformsUtils.clone(o.uniforms);n=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u}),r=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,morphTargets:!0}),i=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,skinning:!0}),s=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,morphTargets:!0,skinning:!0}),n._shadowPass=!0,r._shadowPass=!0,i._shadowPass=!0,s._shadowPass=!0},this.render=function(e,t){this.enabled&&this.update(e,t)},this.update=function(l,p){var v,m,y,w,E,S;e.clearColor(1,1,1,1),e.disable(e.BLEND),t.setDepthTest(!0),t.autoUpdateScene&&l.updateMatrixWorld(),p._viewMatrixArray||(p._viewMatrixArray=new Float32Array(16)),p._projectionMatrixArray||(p._projectionMatrixArray=new Float32Array(16)),p.matrixWorldInverse.getInverse(p.matrixWorld),p.matrixWorldInverse.flattenToArray(p._viewMatrixArray),p.projectionMatrix.flattenToArray(p._projectionMatrixArray),u.multiply(p.projectionMatrix,p.matrixWorldInverse),o.setFromMatrix(u),t.setRenderTarget(this.renderTarget),t.clear(),S=l.__webglObjects,v=0;for(m=S.length;v<m;v++)if(y=S[v],E=y.object,y.render=!1,E.visible&&(!(E instanceof THREE.Mesh||E instanceof THREE.ParticleSystem)||!E.frustumCulled||o.contains(E)))E._modelViewMatrix.multiply(p.matrixWorldInverse,E.matrixWorld),y.render=!0;var x;v=0;for(m=S.length;v<m;v++)if(y=S[v],y.render&&(E=y.object,y=y.buffer,!(E instanceof THREE.ParticleSystem)||E.customDepthMaterial))(x=E.material instanceof THREE.MeshFaceMaterial?E.material.materials[0]:E.material)&&t.setMaterialFaces(E.material),w=0<E.geometry.morphTargets.length&&x.morphTargets,x=E instanceof THREE.SkinnedMesh&&x.skinning,w=E.customDepthMaterial?E.customDepthMaterial:x?w?s:i:w?r:n,y instanceof THREE.BufferGeometry?t.renderBufferDirect(p,l.__lights,null,w,y,E):t.renderBuffer(p,l.__lights,null,w,y,E);S=l.__webglObjectsImmediate,v=0;for(m=S.length;v<m;v++)y=S[v],E=y.object,E.visible&&(E._modelViewMatrix.multiply(p.matrixWorldInverse,E.matrixWorld),t.renderImmediateObject(p,l.__lights,null,n,E));v=t.getClearColor(),m=t.getClearAlpha(),e.clearColor(v.r,v.g,v.b,m),e.enable(e.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}"
,fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}},THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"precision mediump float;\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"}},"use strict";var TWEEN=TWEEN||function(){var e=[];return{REVISION:"7",getAll:function(){return e},removeAll:function(){e=[]},add:function(t){e.push(t)},remove:function(t){t=e.indexOf(t),-1!==t&&e.splice(t,1)},update:function(t){if(0===e.length)return!1;for(var n=0,r=e.length,t=void 0!==t?t:Date.now();n<r;)e[n].update(t)?n++:(e.splice(n,1),r--);return!0}}}();TWEEN.Tween=function(e){var t={},n={},r=1e3,i=0,s=null,o=TWEEN.Easing.Linear.None,u=TWEEN.Interpolation.Linear,a=[],f=null,l=!1,c=null,h=null;this.to=function(e,t){return void 0!==t&&(r=t),n=e,this},this.start=function(r){TWEEN.add(this),l=!1,s=void 0!==r?r:Date.now(),s+=i;for(var o in n)if(null!==e[o]){if(n[o]instanceof Array){if(0===n[o].length)continue;n[o]=[e[o]].concat(n[o])}t[o]=e[o]}return this},this.stop=function(){return TWEEN.remove(this),this},this.delay=function(e){return i=e,this},this.easing=function(e){return o=e,this},this.interpolation=function(e){return u=e,this},this.chain=function(){return a=arguments,this},this.onStart=function(e){return f=e,this},this.onUpdate=function(e){return c=e,this},this.onComplete=function(e){return h=e,this},this.update=function(i){if(i<s)return!0;!1===l&&(null!==f&&f.call(e),l=!0);var v=(i-s)/r,v=1<v?1:v,g=o(v),y;for(y in t){var w=t[y],E=n[y];e[y]=E instanceof Array?u(E,g):w+(E-w)*g}null!==c&&c.call(e,g);if(1==v){null!==h&&h.call(e),v=0;for(g=a.length;v<g;v++)a[v].start(i);return!1}return!0}},TWEEN.Easing={Linear:{None:function(e){return e}},Quadratic:{In:function(e){return e*e},Out:function(e){return e*(2-e)},InOut:function(e){return 1>(e*=2)?.5*e*e:-0.5*(--e*(e-2)-1)}},Cubic:{In:function(e){return e*e*e},Out:function(e){return--e*e*e+1},InOut:function(e){return 1>(e*=2)?.5*e*e*e:.5*((e-=2)*e*e+2)}},Quartic:{In:function(e){return e*e*e*e},Out:function(e){return 1- --e*e*e*e},InOut:function(e){return 1>(e*=2)?.5*e*e*e*e:-0.5*((e-=2)*e*e*e-2)}},Quintic:{In:function(e){return e*e*e*e*e},Out:function(e){return--e*e*e*e*e+1},InOut:function(e){return 1>(e*=2)?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)}},Sinusoidal:{In:function(e){return 1-Math.cos(e*Math.PI/2)},Out:function(e){return Math.sin(e*Math.PI/2)},InOut:function(e){return.5*(1-Math.cos(Math.PI*e))}},Exponential:{In:function(e){return 0===e?0:Math.pow(1024,e-1)},Out:function(e){return 1===e?1:1-Math.pow(2,-10*e)},InOut:function(e){return 0===e?0:1===e?1:1>(e*=2)?.5*Math.pow(1024,e-1):.5*(-Math.pow(2,-10*(e-1))+2)}},Circular:{In:function(e){return 1-Math.sqrt(1-e*e)},Out:function(e){return Math.sqrt(1- --e*e)},InOut:function(e){return 1>(e*=2)?-0.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)}},Elastic:{In:function(e){var t,n=.1;return 0===e?0:1===e?1:(!n||1>n?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),-(n*Math.pow(2,10*(e-=1))*Math.sin((e-t)*2*Math.PI/.4)))},Out:function(e){var t,n=.1;return 0===e?0:1===e?1:(!n||1>n?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),n*Math.pow(2,-10*e)*Math.sin((e-t)*2*Math.PI/.4)+1)},InOut:function(e){var t,n=.1;return 0===e?0:1===e?1:(!n||1>n?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),1>(e*=2)?-0.5*n*Math.pow(2,10*(e-=1))*Math.sin((e-t)*2*Math.PI/.4):.5*n*Math.pow(2,-10*(e-=1))*Math.sin((e-t)*2*Math.PI/.4)+1)}},Back:{In:function(e){return e*e*(2.70158*e-1.70158)},Out:function(e){return--e*e*(2.70158*e+1.70158)+1},InOut:function(e){return 1>(e*=2)?.5*e*e*(3.5949095*e-2.5949095):.5*((e-=2)*e*(3.5949095*e+2.5949095)+2)}},Bounce:{In:function(e){return 1-TWEEN.Easing.Bounce.Out(1-e)},Out:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},InOut:function(e){return.5>e?.5*TWEEN.Easing.Bounce.In(2*e):.5*TWEEN.Easing.Bounce.Out(2*e-1)+.5}}},TWEEN.Interpolation={Linear:function(e,t){var n=e.length-1,r=n*t,i=Math.floor(r),s=TWEEN.Interpolation.Utils.Linear;return 0>t?s(e[0],e[1],r):1<t?s(e[n],e[n-1],n-r):s(e[i],e[i+1>n?n:i+1],r-i)},Bezier:function(e,t){var n=0,r=e.length-1,i=Math.pow,s=TWEEN.Interpolation.Utils.Bernstein,o;for(o=0;o<=r;o++)n+=i(1-t,r-o)*i(t,o)*e[o]*s(r,o);return n},CatmullRom:function(e,t){var n=e.length-1,r=n*t,i=Math.floor(r),s=TWEEN.Interpolation.Utils.CatmullRom;return e[0]===e[n]?(0>t&&(i=Math.floor(r=n*(1+t))),s(e[(i-1+n)%n],e[i],e[(i+1)%n],e[(i+2)%n],r-i)):0>t?e[0]-(s(e[0],e[0],e[1],e[1],-r)-e[0]):1<t?e[n]-(s(e[n],e[n],e[n-1],e[n-1],r-n)-e[n]):s(e[i?i-1:0],e[i],e[n<i+1?n:i+1],e[n<i+2?n:i+2],r-i)},Utils:{Linear:function(e,t,n){return(t-e)*n+e},Bernstein:function(e,t){var n=TWEEN.Interpolation.Utils.Factorial;return n(e)/n(t)/n(e-t)},Factorial:function(){var e=[1];return function(t){var n=1,r;if(e[t])return e[t];for(r=t;1<r;r--)n*=r;return e[t]=n}}(),CatmullRom:function(e,t,n,r,i){var e=.5*(n-e),r=.5*(r-t),s=i*i;return(2*t-2*n+e+r)*i*s+(-3*t+3*n-2*e-r)*s+e*i+t}}},$(function(){function w(){e=b.width()>767?!1:!0}function E(){container=t.get(0),r=new THREE.PerspectiveCamera(75,f/l,1,5e3),r.position.z=1e3,i=new THREE.Scene;var e=function(t,n,r){for(var s=0;s<t;s++){o=new THREE.Particle(new THREE.ParticleBasicMaterial({map:new THREE.Texture(x(n)),blending:THREE.AdditiveBlending}));var u=r*(Math.random()*2+1),a=r*Math.random();T(o,a,u,n),i.add(o)}};e(d,p,1e4),e(m,v,5e3),s=new THREE.CanvasRenderer,s.setSize(f,l),s.sortElements=!1,s.setClearColorHex(2539973,1),container.appendChild(s.domElement),y&&(n=new Stats,n.domElement.style.position="absolute",n.domElement.style.top="0px",container.appendChild(n.domElement)),w(),document.addEventListener("mousemove",N,!1),window.addEventListener("resize",S,!1)}function S(){f=window.innerWidth,c=f/2,h=l/2,r.aspect=f/l,r.updateProjectionMatrix(),s.setSize(f,l)}function x(e){var t=Math.random(),n=document.createElement("canvas"),r=t*e+g,i=n.width=r,s=n.height=r,o=r/2,u=o,a=n.getContext("2d"),f=a.createRadialGradient(u,o,0,u,o,u),l=function(){return parseInt(Math.random()*255,10)},c=function(e){var n=parseInt((1-t)*(1-t)*70,10);return""+l()+",100%,"+n+"%"},h=function(e,t){return"hsla("+e+","+t+")"},p=c(r);return f.addColorStop(0,h(p,1)),f.addColorStop(.2,h(p,.5)),f.addColorStop(.4,h(p,.2)),f.addColorStop(1,h(p,0)),a.fillStyle=f,a.fillRect(0,0,i,s),n}function T(e,t,n,r){var e=this instanceof THREE.Particle?this:e,t=t!==undefined?t:0,i=n,s=r>10?20:1;e.position.x=(Math.random()*f-c)*3,e.position.y=(Math.random()*l-h)*3,e.position.z=0,e.material.opacity=0,e.scale.x=e.scale.y=s;var o=n*(r>10?4:3);(new TWEEN.Tween(e.position)).delay(t).to({x:Math.random()*f*2-f,y:Math.random()*l*2-l,z:Math.random()*4e3-2e3},o).start();var u=(new TWEEN.Tween(e.material)).delay(t).to({opacity:.6},i),a=(new TWEEN.Tween(e.material)).to({opacity:.01},n).onComplete(function(){T(e,t,n,r)});return u.chain(a),u.start(),e}function N(e){u=e.clientX-c,a=e.clientY-h}function C(e){e.touches.length==1&&(e.preventDefault(),u=e.touches[0].pageX-c,a=e.touches[0].pageY-h)}function k(e){e.touches.length==1&&(e.preventDefault(),u=e.touches[0].pageX-c,a=e.touches[0].pageY-h)}function L(){setTimeout(function(){requestAnimationFrame(L)},40),e||A(),y&&n.update()}function A(){TWEEN.update(),r.position.x+=(u/3-r.position.x)*.01,r.position.y+=(-a/3-r.position.y)*.01,r.lookAt(i.position),s.render(i,r)}var e=!0,t=$("#particles"),n,r,i,s,o,u=0,a=0,f=window.innerWidth,l=t.height(),c=f/2,h=l/2,p=100,d=20,v=1,m=50,g=32,y=!1,b=$(window);E(),L(),$(function(){w()})}),$("img.svg").each(function(){var e=$(this),t=e.attr("id"),n=e.attr("class"),r=e.attr("src");$.get(r,function(r){var i=$(r).find("svg");typeof t!="undefined"&&(i=i.attr("id",t)),typeof n!="undefined"&&(i=i.attr("class",n+" replaced-svg")),i=i.removeAttr("xmlns:a"),e.replaceWith(i)})});